<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1190" onload="init(evt)" viewBox="0 0 1200 1190" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1190" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1173.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1173.00"> </text><svg id="frames" x="10" width="1180" total_samples="31815"><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 0.14%)</title><rect x="0.7544%" y="357" width="0.1414%" height="15" fill="rgb(227,0,7)" fg:x="240" fg:w="45"/><text x="1.0044%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;[backtrace::capture::BacktraceFrame]&gt; (45 samples, 0.14%)</title><rect x="0.7544%" y="341" width="0.1414%" height="15" fill="rgb(217,0,24)" fg:x="240" fg:w="45"/><text x="1.0044%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;backtrace::capture::BacktraceFrame&gt; (45 samples, 0.14%)</title><rect x="0.7544%" y="325" width="0.1414%" height="15" fill="rgb(221,193,54)" fg:x="240" fg:w="45"/><text x="1.0044%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;backtrace::capture::BacktraceSymbol&gt;&gt;&gt; (45 samples, 0.14%)</title><rect x="0.7544%" y="309" width="0.1414%" height="15" fill="rgb(248,212,6)" fg:x="240" fg:w="45"/><text x="1.0044%" y="319.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::dealloc (14 samples, 0.04%)</title><rect x="0.8958%" y="277" width="0.0440%" height="15" fill="rgb(208,68,35)" fg:x="285" fg:w="14"/><text x="1.1458%" y="287.50"></text></g><g><title>dhat::IgnoreAllocs::new (14 samples, 0.04%)</title><rect x="0.8958%" y="261" width="0.0440%" height="15" fill="rgb(232,128,0)" fg:x="285" fg:w="14"/><text x="1.1458%" y="271.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (14 samples, 0.04%)</title><rect x="0.8958%" y="245" width="0.0440%" height="15" fill="rgb(207,160,47)" fg:x="285" fg:w="14"/><text x="1.1458%" y="255.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (14 samples, 0.04%)</title><rect x="0.8958%" y="229" width="0.0440%" height="15" fill="rgb(228,23,34)" fg:x="285" fg:w="14"/><text x="1.1458%" y="239.50"></text></g><g><title>core::ops::function::FnOnce::call_once (14 samples, 0.04%)</title><rect x="0.8958%" y="213" width="0.0440%" height="15" fill="rgb(218,30,26)" fg:x="285" fg:w="14"/><text x="1.1458%" y="223.50"></text></g><g><title>dhat::IGNORE_ALLOCS::{{constant}}::{{closure}} (14 samples, 0.04%)</title><rect x="0.8958%" y="197" width="0.0440%" height="15" fill="rgb(220,122,19)" fg:x="285" fg:w="14"/><text x="1.1458%" y="207.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (14 samples, 0.04%)</title><rect x="0.8958%" y="181" width="0.0440%" height="15" fill="rgb(250,228,42)" fg:x="285" fg:w="14"/><text x="1.1458%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;dhat::Backtrace&gt; (93 samples, 0.29%)</title><rect x="0.6569%" y="405" width="0.2923%" height="15" fill="rgb(240,193,28)" fg:x="209" fg:w="93"/><text x="0.9069%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;backtrace::capture::Backtrace&gt; (93 samples, 0.29%)</title><rect x="0.6569%" y="389" width="0.2923%" height="15" fill="rgb(216,20,37)" fg:x="209" fg:w="93"/><text x="0.9069%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;backtrace::capture::BacktraceFrame&gt;&gt; (93 samples, 0.29%)</title><rect x="0.6569%" y="373" width="0.2923%" height="15" fill="rgb(206,188,39)" fg:x="209" fg:w="93"/><text x="0.9069%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;backtrace::capture::BacktraceFrame&gt;&gt; (17 samples, 0.05%)</title><rect x="0.8958%" y="357" width="0.0534%" height="15" fill="rgb(217,207,13)" fg:x="285" fg:w="17"/><text x="1.1458%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.05%)</title><rect x="0.8958%" y="341" width="0.0534%" height="15" fill="rgb(231,73,38)" fg:x="285" fg:w="17"/><text x="1.1458%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (17 samples, 0.05%)</title><rect x="0.8958%" y="325" width="0.0534%" height="15" fill="rgb(225,20,46)" fg:x="285" fg:w="17"/><text x="1.1458%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.05%)</title><rect x="0.8958%" y="309" width="0.0534%" height="15" fill="rgb(210,31,41)" fg:x="285" fg:w="17"/><text x="1.1458%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (17 samples, 0.05%)</title><rect x="0.8958%" y="293" width="0.0534%" height="15" fill="rgb(221,200,47)" fg:x="285" fg:w="17"/><text x="1.1458%" y="303.50"></text></g><g><title>backtrace::capture::BacktraceFrame::ip (40 samples, 0.13%)</title><rect x="0.9492%" y="341" width="0.1257%" height="15" fill="rgb(226,26,5)" fg:x="302" fg:w="40"/><text x="1.1992%" y="351.50"></text></g><g><title>backtrace::capture::Frame::ip (40 samples, 0.13%)</title><rect x="0.9492%" y="325" width="0.1257%" height="15" fill="rgb(249,33,26)" fg:x="302" fg:w="40"/><text x="1.1992%" y="335.50"></text></g><g><title>backtrace::backtrace::Frame::ip (40 samples, 0.13%)</title><rect x="0.9492%" y="309" width="0.1257%" height="15" fill="rgb(235,183,28)" fg:x="302" fg:w="40"/><text x="1.1992%" y="319.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::ip (40 samples, 0.13%)</title><rect x="0.9492%" y="293" width="0.1257%" height="15" fill="rgb(221,5,38)" fg:x="302" fg:w="40"/><text x="1.1992%" y="303.50"></text></g><g><title>dhat::Globals::get_pp_info (327 samples, 1.03%)</title><rect x="0.6192%" y="453" width="1.0278%" height="15" fill="rgb(247,18,42)" fg:x="197" fg:w="327"/><text x="0.8692%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (315 samples, 0.99%)</title><rect x="0.6569%" y="437" width="0.9901%" height="15" fill="rgb(241,131,45)" fg:x="209" fg:w="315"/><text x="0.9069%" y="447.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (315 samples, 0.99%)</title><rect x="0.6569%" y="421" width="0.9901%" height="15" fill="rgb(249,31,29)" fg:x="209" fg:w="315"/><text x="0.9069%" y="431.50"></text></g><g><title>hashbrown::map::make_hash (222 samples, 0.70%)</title><rect x="0.9492%" y="405" width="0.6978%" height="15" fill="rgb(225,111,53)" fg:x="302" fg:w="222"/><text x="1.1992%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (222 samples, 0.70%)</title><rect x="0.9492%" y="389" width="0.6978%" height="15" fill="rgb(238,160,17)" fg:x="302" fg:w="222"/><text x="1.1992%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (222 samples, 0.70%)</title><rect x="0.9492%" y="373" width="0.6978%" height="15" fill="rgb(214,148,48)" fg:x="302" fg:w="222"/><text x="1.1992%" y="383.50"></text></g><g><title>&lt;dhat::Backtrace as core::hash::Hash&gt;::hash (222 samples, 0.70%)</title><rect x="0.9492%" y="357" width="0.6978%" height="15" fill="rgb(232,36,49)" fg:x="302" fg:w="222"/><text x="1.1992%" y="367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for *mut T&gt;::hash (182 samples, 0.57%)</title><rect x="1.0750%" y="341" width="0.5721%" height="15" fill="rgb(209,103,24)" fg:x="342" fg:w="182"/><text x="1.3250%" y="351.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write_usize (182 samples, 0.57%)</title><rect x="1.0750%" y="325" width="0.5721%" height="15" fill="rgb(229,88,8)" fg:x="342" fg:w="182"/><text x="1.3250%" y="335.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash (182 samples, 0.57%)</title><rect x="1.0750%" y="309" width="0.5721%" height="15" fill="rgb(213,181,19)" fg:x="342" fg:w="182"/><text x="1.3250%" y="319.50"></text></g><g><title>core::num::&lt;impl usize&gt;::rotate_left (182 samples, 0.57%)</title><rect x="1.0750%" y="293" width="0.5721%" height="15" fill="rgb(254,191,54)" fg:x="342" fg:w="182"/><text x="1.3250%" y="303.50"></text></g><g><title>dhat::Globals::record_block (807 samples, 2.54%)</title><rect x="1.6470%" y="453" width="2.5365%" height="15" fill="rgb(241,83,37)" fg:x="524" fg:w="807"/><text x="1.8970%" y="463.50">dh..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (807 samples, 2.54%)</title><rect x="1.6470%" y="437" width="2.5365%" height="15" fill="rgb(233,36,39)" fg:x="524" fg:w="807"/><text x="1.8970%" y="447.50">st..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (807 samples, 2.54%)</title><rect x="1.6470%" y="421" width="2.5365%" height="15" fill="rgb(226,3,54)" fg:x="524" fg:w="807"/><text x="1.8970%" y="431.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (807 samples, 2.54%)</title><rect x="1.6470%" y="405" width="2.5365%" height="15" fill="rgb(245,192,40)" fg:x="524" fg:w="807"/><text x="1.8970%" y="415.50">ha..</text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (807 samples, 2.54%)</title><rect x="1.6470%" y="389" width="2.5365%" height="15" fill="rgb(238,167,29)" fg:x="524" fg:w="807"/><text x="1.8970%" y="399.50">ha..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (807 samples, 2.54%)</title><rect x="1.6470%" y="373" width="2.5365%" height="15" fill="rgb(232,182,51)" fg:x="524" fg:w="807"/><text x="1.8970%" y="383.50">co..</text></g><g><title>core::ptr::write (807 samples, 2.54%)</title><rect x="1.6470%" y="357" width="2.5365%" height="15" fill="rgb(231,60,39)" fg:x="524" fg:w="807"/><text x="1.8970%" y="367.50">co..</text></g><g><title>dhat::Globals::update_counts_for_alloc (4 samples, 0.01%)</title><rect x="4.1836%" y="453" width="0.0126%" height="15" fill="rgb(208,69,12)" fg:x="1331" fg:w="4"/><text x="4.4336%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (4 samples, 0.01%)</title><rect x="4.1836%" y="437" width="0.0126%" height="15" fill="rgb(235,93,37)" fg:x="1331" fg:w="4"/><text x="4.4336%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (34 samples, 0.11%)</title><rect x="4.2024%" y="437" width="0.1069%" height="15" fill="rgb(213,116,39)" fg:x="1337" fg:w="34"/><text x="4.4524%" y="447.50"></text></g><g><title>Unknown (50 samples, 0.16%)</title><rect x="4.4539%" y="357" width="0.1572%" height="15" fill="rgb(222,207,29)" fg:x="1417" fg:w="50"/><text x="4.7039%" y="367.50"></text></g><g><title>_Unwind_Find_FDE (202 samples, 0.63%)</title><rect x="4.4539%" y="373" width="0.6349%" height="15" fill="rgb(206,96,30)" fg:x="1417" fg:w="202"/><text x="4.7039%" y="383.50"></text></g><g><title>__GI__dl_find_object (152 samples, 0.48%)</title><rect x="4.6110%" y="357" width="0.4778%" height="15" fill="rgb(218,138,4)" fg:x="1467" fg:w="152"/><text x="4.8610%" y="367.50"></text></g><g><title>Unknown (72 samples, 0.23%)</title><rect x="8.0811%" y="245" width="0.2263%" height="15" fill="rgb(250,191,14)" fg:x="2571" fg:w="72"/><text x="8.3311%" y="255.50"></text></g><g><title>&lt;backtrace::backtrace::Frame as core::clone::Clone&gt;::clone (344 samples, 1.08%)</title><rect x="7.5059%" y="325" width="1.0813%" height="15" fill="rgb(239,60,40)" fg:x="2388" fg:w="344"/><text x="7.7559%" y="335.50"></text></g><g><title>&lt;backtrace::backtrace::libunwind::Frame as core::clone::Clone&gt;::clone (298 samples, 0.94%)</title><rect x="7.6505%" y="309" width="0.9367%" height="15" fill="rgb(206,27,48)" fg:x="2434" fg:w="298"/><text x="7.9005%" y="319.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::symbol_address (298 samples, 0.94%)</title><rect x="7.6505%" y="293" width="0.9367%" height="15" fill="rgb(225,35,8)" fg:x="2434" fg:w="298"/><text x="7.9005%" y="303.50"></text></g><g><title>_Unwind_FindEnclosingFunction (161 samples, 0.51%)</title><rect x="8.0811%" y="277" width="0.5061%" height="15" fill="rgb(250,213,24)" fg:x="2571" fg:w="161"/><text x="8.3311%" y="287.50"></text></g><g><title>_Unwind_Find_FDE (161 samples, 0.51%)</title><rect x="8.0811%" y="261" width="0.5061%" height="15" fill="rgb(247,123,22)" fg:x="2571" fg:w="161"/><text x="8.3311%" y="271.50"></text></g><g><title>__GI__dl_find_object (89 samples, 0.28%)</title><rect x="8.3074%" y="245" width="0.2797%" height="15" fill="rgb(231,138,38)" fg:x="2643" fg:w="89"/><text x="8.5574%" y="255.50"></text></g><g><title>_dl_find_object_to_external (89 samples, 0.28%)</title><rect x="8.3074%" y="229" width="0.2797%" height="15" fill="rgb(231,145,46)" fg:x="2643" fg:w="89"/><text x="8.5574%" y="239.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (38 samples, 0.12%)</title><rect x="8.5903%" y="261" width="0.1194%" height="15" fill="rgb(251,118,11)" fg:x="2733" fg:w="38"/><text x="8.8403%" y="271.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::realloc (9 samples, 0.03%)</title><rect x="8.7820%" y="197" width="0.0283%" height="15" fill="rgb(217,147,25)" fg:x="2794" fg:w="9"/><text x="9.0320%" y="207.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (9 samples, 0.03%)</title><rect x="8.7820%" y="181" width="0.0283%" height="15" fill="rgb(247,81,37)" fg:x="2794" fg:w="9"/><text x="9.0320%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (12 samples, 0.04%)</title><rect x="8.7820%" y="245" width="0.0377%" height="15" fill="rgb(209,12,38)" fg:x="2794" fg:w="12"/><text x="9.0320%" y="255.50"></text></g><g><title>alloc::alloc::Global::grow_impl (12 samples, 0.04%)</title><rect x="8.7820%" y="229" width="0.0377%" height="15" fill="rgb(227,1,9)" fg:x="2794" fg:w="12"/><text x="9.0320%" y="239.50"></text></g><g><title>alloc::alloc::realloc (12 samples, 0.04%)</title><rect x="8.7820%" y="213" width="0.0377%" height="15" fill="rgb(248,47,43)" fg:x="2794" fg:w="12"/><text x="9.0320%" y="223.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (10 samples, 0.03%)</title><rect x="8.8197%" y="245" width="0.0314%" height="15" fill="rgb(221,10,30)" fg:x="2806" fg:w="10"/><text x="9.0697%" y="255.50"></text></g><g><title>dhat::IgnoreAllocs::new (10 samples, 0.03%)</title><rect x="8.8197%" y="229" width="0.0314%" height="15" fill="rgb(210,229,1)" fg:x="2806" fg:w="10"/><text x="9.0697%" y="239.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (10 samples, 0.03%)</title><rect x="8.8197%" y="213" width="0.0314%" height="15" fill="rgb(222,148,37)" fg:x="2806" fg:w="10"/><text x="9.0697%" y="223.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (10 samples, 0.03%)</title><rect x="8.8197%" y="197" width="0.0314%" height="15" fill="rgb(234,67,33)" fg:x="2806" fg:w="10"/><text x="9.0697%" y="207.50"></text></g><g><title>core::ops::function::FnOnce::call_once (10 samples, 0.03%)</title><rect x="8.8197%" y="181" width="0.0314%" height="15" fill="rgb(247,98,35)" fg:x="2806" fg:w="10"/><text x="9.0697%" y="191.50"></text></g><g><title>dhat::IGNORE_ALLOCS::{{constant}}::{{closure}} (10 samples, 0.03%)</title><rect x="8.8197%" y="165" width="0.0314%" height="15" fill="rgb(247,138,52)" fg:x="2806" fg:w="10"/><text x="9.0697%" y="175.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (10 samples, 0.03%)</title><rect x="8.8197%" y="149" width="0.0314%" height="15" fill="rgb(213,79,30)" fg:x="2806" fg:w="10"/><text x="9.0697%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (86 samples, 0.27%)</title><rect x="8.5871%" y="325" width="0.2703%" height="15" fill="rgb(246,177,23)" fg:x="2732" fg:w="86"/><text x="8.8371%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (86 samples, 0.27%)</title><rect x="8.5871%" y="309" width="0.2703%" height="15" fill="rgb(230,62,27)" fg:x="2732" fg:w="86"/><text x="8.8371%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (86 samples, 0.27%)</title><rect x="8.5871%" y="293" width="0.2703%" height="15" fill="rgb(216,154,8)" fg:x="2732" fg:w="86"/><text x="8.8371%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (86 samples, 0.27%)</title><rect x="8.5871%" y="277" width="0.2703%" height="15" fill="rgb(244,35,45)" fg:x="2732" fg:w="86"/><text x="8.8371%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (47 samples, 0.15%)</title><rect x="8.7097%" y="261" width="0.1477%" height="15" fill="rgb(251,115,12)" fg:x="2771" fg:w="47"/><text x="8.9597%" y="271.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1,439 samples, 4.52%)</title><rect x="4.4413%" y="421" width="4.5230%" height="15" fill="rgb(240,54,50)" fg:x="1413" fg:w="1439"/><text x="4.6913%" y="431.50">backt..</text></g><g><title>backtrace::backtrace::libunwind::trace (1,439 samples, 4.52%)</title><rect x="4.4413%" y="405" width="4.5230%" height="15" fill="rgb(233,84,52)" fg:x="1413" fg:w="1439"/><text x="4.6913%" y="415.50">backt..</text></g><g><title>_Unwind_Backtrace (1,439 samples, 4.52%)</title><rect x="4.4413%" y="389" width="4.5230%" height="15" fill="rgb(207,117,47)" fg:x="1413" fg:w="1439"/><text x="4.6913%" y="399.50">_Unwi..</text></g><g><title>backtrace::backtrace::libunwind::trace::trace_fn (1,233 samples, 3.88%)</title><rect x="5.0888%" y="373" width="3.8755%" height="15" fill="rgb(249,43,39)" fg:x="1619" fg:w="1233"/><text x="5.3388%" y="383.50">back..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,173 samples, 3.69%)</title><rect x="5.2774%" y="357" width="3.6869%" height="15" fill="rgb(209,38,44)" fg:x="1679" fg:w="1173"/><text x="5.5274%" y="367.50">core..</text></g><g><title>dhat::new_backtrace_inner::{{closure}} (1,131 samples, 3.55%)</title><rect x="5.4094%" y="341" width="3.5549%" height="15" fill="rgb(236,212,23)" fg:x="1721" fg:w="1131"/><text x="5.6594%" y="351.50">dhat..</text></g><g><title>backtrace::backtrace::Frame::ip (34 samples, 0.11%)</title><rect x="8.8575%" y="325" width="0.1069%" height="15" fill="rgb(242,79,21)" fg:x="2818" fg:w="34"/><text x="9.1075%" y="335.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::ip (34 samples, 0.11%)</title><rect x="8.8575%" y="309" width="0.1069%" height="15" fill="rgb(211,96,35)" fg:x="2818" fg:w="34"/><text x="9.1075%" y="319.50"></text></g><g><title>backtrace::lock::lock (22 samples, 0.07%)</title><rect x="8.9643%" y="421" width="0.0691%" height="15" fill="rgb(253,215,40)" fg:x="2852" fg:w="22"/><text x="9.2143%" y="431.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (22 samples, 0.07%)</title><rect x="8.9643%" y="405" width="0.0691%" height="15" fill="rgb(211,81,21)" fg:x="2852" fg:w="22"/><text x="9.2143%" y="415.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (22 samples, 0.07%)</title><rect x="8.9643%" y="389" width="0.0691%" height="15" fill="rgb(208,190,38)" fg:x="2852" fg:w="22"/><text x="9.2143%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (22 samples, 0.07%)</title><rect x="8.9643%" y="373" width="0.0691%" height="15" fill="rgb(235,213,38)" fg:x="2852" fg:w="22"/><text x="9.2143%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (22 samples, 0.07%)</title><rect x="8.9643%" y="357" width="0.0691%" height="15" fill="rgb(237,122,38)" fg:x="2852" fg:w="22"/><text x="9.2143%" y="367.50"></text></g><g><title>dhat::new_backtrace_inner (1,554 samples, 4.88%)</title><rect x="4.1961%" y="453" width="4.8845%" height="15" fill="rgb(244,218,35)" fg:x="1335" fg:w="1554"/><text x="4.4461%" y="463.50">dhat::..</text></g><g><title>backtrace::backtrace::trace (1,518 samples, 4.77%)</title><rect x="4.3093%" y="437" width="4.7713%" height="15" fill="rgb(240,68,47)" fg:x="1371" fg:w="1518"/><text x="4.5593%" y="447.50">backtr..</text></g><g><title>core::ptr::drop_in_place&lt;backtrace::lock::LockGuard&gt; (15 samples, 0.05%)</title><rect x="9.0335%" y="421" width="0.0471%" height="15" fill="rgb(210,16,53)" fg:x="2874" fg:w="15"/><text x="9.2835%" y="431.50"></text></g><g><title>&lt;backtrace::lock::LockGuard as core::ops::drop::Drop&gt;::drop (10 samples, 0.03%)</title><rect x="9.0492%" y="405" width="0.0314%" height="15" fill="rgb(235,124,12)" fg:x="2879" fg:w="10"/><text x="9.2992%" y="415.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (10 samples, 0.03%)</title><rect x="9.0492%" y="389" width="0.0314%" height="15" fill="rgb(224,169,11)" fg:x="2879" fg:w="10"/><text x="9.2992%" y="399.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (10 samples, 0.03%)</title><rect x="9.0492%" y="373" width="0.0314%" height="15" fill="rgb(250,166,2)" fg:x="2879" fg:w="10"/><text x="9.2992%" y="383.50"></text></g><g><title>&lt;backtrace::lock::LockGuard as core::ops::drop::Drop&gt;::drop::{{closure}} (10 samples, 0.03%)</title><rect x="9.0492%" y="357" width="0.0314%" height="15" fill="rgb(242,216,29)" fg:x="2879" fg:w="10"/><text x="9.2992%" y="367.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (10 samples, 0.03%)</title><rect x="9.0492%" y="341" width="0.0314%" height="15" fill="rgb(230,116,27)" fg:x="2879" fg:w="10"/><text x="9.2992%" y="351.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (10 samples, 0.03%)</title><rect x="9.0492%" y="325" width="0.0314%" height="15" fill="rgb(228,99,48)" fg:x="2879" fg:w="10"/><text x="9.2992%" y="335.50"></text></g><g><title>core::mem::replace (10 samples, 0.03%)</title><rect x="9.0492%" y="309" width="0.0314%" height="15" fill="rgb(253,11,6)" fg:x="2879" fg:w="10"/><text x="9.2992%" y="319.50"></text></g><g><title>core::ptr::write (10 samples, 0.03%)</title><rect x="9.0492%" y="293" width="0.0314%" height="15" fill="rgb(247,143,39)" fg:x="2879" fg:w="10"/><text x="9.2992%" y="303.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (8 samples, 0.03%)</title><rect x="9.0806%" y="453" width="0.0251%" height="15" fill="rgb(236,97,10)" fg:x="2889" fg:w="8"/><text x="9.3306%" y="463.50"></text></g><g><title>std::sys::pal::unix::cvt (8 samples, 0.03%)</title><rect x="9.0806%" y="437" width="0.0251%" height="15" fill="rgb(233,208,19)" fg:x="2889" fg:w="8"/><text x="9.3306%" y="447.50"></text></g><g><title>&lt;i32 as std::sys::pal::unix::IsMinusOne&gt;::is_minus_one (8 samples, 0.03%)</title><rect x="9.0806%" y="421" width="0.0251%" height="15" fill="rgb(216,164,2)" fg:x="2889" fg:w="8"/><text x="9.3306%" y="431.50"></text></g><g><title>&lt;briolette_sim::Coin as core::clone::Clone&gt;::clone (2,899 samples, 9.11%)</title><rect x="0.0000%" y="677" width="9.1121%" height="15" fill="rgb(220,129,5)" fg:x="0" fg:w="2899"/><text x="0.2500%" y="687.50">&lt;briolette_si..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,899 samples, 9.11%)</title><rect x="0.0000%" y="661" width="9.1121%" height="15" fill="rgb(242,17,10)" fg:x="0" fg:w="2899"/><text x="0.2500%" y="671.50">&lt;alloc::vec::..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,899 samples, 9.11%)</title><rect x="0.0000%" y="645" width="9.1121%" height="15" fill="rgb(242,107,0)" fg:x="0" fg:w="2899"/><text x="0.2500%" y="655.50">alloc::slice:..</text></g><g><title>alloc::slice::hack::to_vec (2,899 samples, 9.11%)</title><rect x="0.0000%" y="629" width="9.1121%" height="15" fill="rgb(251,28,31)" fg:x="0" fg:w="2899"/><text x="0.2500%" y="639.50">alloc::slice:..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,899 samples, 9.11%)</title><rect x="0.0000%" y="613" width="9.1121%" height="15" fill="rgb(233,223,10)" fg:x="0" fg:w="2899"/><text x="0.2500%" y="623.50">&lt;T as alloc::..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,899 samples, 9.11%)</title><rect x="0.0000%" y="597" width="9.1121%" height="15" fill="rgb(215,21,27)" fg:x="0" fg:w="2899"/><text x="0.2500%" y="607.50">alloc::vec::V..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,899 samples, 9.11%)</title><rect x="0.0000%" y="581" width="9.1121%" height="15" fill="rgb(232,23,21)" fg:x="0" fg:w="2899"/><text x="0.2500%" y="591.50">alloc::raw_ve..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,899 samples, 9.11%)</title><rect x="0.0000%" y="565" width="9.1121%" height="15" fill="rgb(244,5,23)" fg:x="0" fg:w="2899"/><text x="0.2500%" y="575.50">alloc::raw_ve..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,899 samples, 9.11%)</title><rect x="0.0000%" y="549" width="9.1121%" height="15" fill="rgb(226,81,46)" fg:x="0" fg:w="2899"/><text x="0.2500%" y="559.50">alloc::raw_ve..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,899 samples, 9.11%)</title><rect x="0.0000%" y="533" width="9.1121%" height="15" fill="rgb(247,70,30)" fg:x="0" fg:w="2899"/><text x="0.2500%" y="543.50">&lt;alloc::alloc..</text></g><g><title>alloc::alloc::Global::alloc_impl (2,899 samples, 9.11%)</title><rect x="0.0000%" y="517" width="9.1121%" height="15" fill="rgb(212,68,19)" fg:x="0" fg:w="2899"/><text x="0.2500%" y="527.50">alloc::alloc:..</text></g><g><title>alloc::alloc::alloc (2,899 samples, 9.11%)</title><rect x="0.0000%" y="501" width="9.1121%" height="15" fill="rgb(240,187,13)" fg:x="0" fg:w="2899"/><text x="0.2500%" y="511.50">alloc::alloc:..</text></g><g><title>__rust_alloc (2,899 samples, 9.11%)</title><rect x="0.0000%" y="485" width="9.1121%" height="15" fill="rgb(223,113,26)" fg:x="0" fg:w="2899"/><text x="0.2500%" y="495.50">__rust_alloc</text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (2,876 samples, 9.04%)</title><rect x="0.0723%" y="469" width="9.0398%" height="15" fill="rgb(206,192,2)" fg:x="23" fg:w="2876"/><text x="0.3223%" y="479.50">&lt;dhat::Alloc ..</text></g><g><title>&lt;absim::EventQueue&lt;S&gt; as absim::Enqueue&lt;S&gt;&gt;::enqueue (3,189 samples, 10.02%)</title><rect x="0.0000%" y="805" width="10.0236%" height="15" fill="rgb(241,108,4)" fg:x="0" fg:w="3189"/><text x="0.2500%" y="815.50">&lt;absim::EventQ..</text></g><g><title>&lt;briolette_sim::EventData as core::clone::Clone&gt;::clone (3,189 samples, 10.02%)</title><rect x="0.0000%" y="789" width="10.0236%" height="15" fill="rgb(247,173,49)" fg:x="0" fg:w="3189"/><text x="0.2500%" y="799.50">&lt;briolette_sim..</text></g><g><title>&lt;briolette_sim::PopulationAdd as core::clone::Clone&gt;::clone (3,189 samples, 10.02%)</title><rect x="0.0000%" y="773" width="10.0236%" height="15" fill="rgb(224,114,35)" fg:x="0" fg:w="3189"/><text x="0.2500%" y="783.50">&lt;briolette_sim..</text></g><g><title>&lt;briolette_sim::AgentData as core::clone::Clone&gt;::clone (3,189 samples, 10.02%)</title><rect x="0.0000%" y="757" width="10.0236%" height="15" fill="rgb(245,159,27)" fg:x="0" fg:w="3189"/><text x="0.2500%" y="767.50">&lt;briolette_sim..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,189 samples, 10.02%)</title><rect x="0.0000%" y="741" width="10.0236%" height="15" fill="rgb(245,172,44)" fg:x="0" fg:w="3189"/><text x="0.2500%" y="751.50">&lt;alloc::vec::V..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,189 samples, 10.02%)</title><rect x="0.0000%" y="725" width="10.0236%" height="15" fill="rgb(236,23,11)" fg:x="0" fg:w="3189"/><text x="0.2500%" y="735.50">alloc::slice::..</text></g><g><title>alloc::slice::hack::to_vec (3,189 samples, 10.02%)</title><rect x="0.0000%" y="709" width="10.0236%" height="15" fill="rgb(205,117,38)" fg:x="0" fg:w="3189"/><text x="0.2500%" y="719.50">alloc::slice::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,189 samples, 10.02%)</title><rect x="0.0000%" y="693" width="10.0236%" height="15" fill="rgb(237,72,25)" fg:x="0" fg:w="3189"/><text x="0.2500%" y="703.50">&lt;T as alloc::s..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (290 samples, 0.91%)</title><rect x="9.1121%" y="677" width="0.9115%" height="15" fill="rgb(244,70,9)" fg:x="2899" fg:w="290"/><text x="9.3621%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (1,294 samples, 4.07%)</title><rect x="10.0550%" y="565" width="4.0673%" height="15" fill="rgb(217,125,39)" fg:x="3199" fg:w="1294"/><text x="10.3050%" y="575.50">std:..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (1,294 samples, 4.07%)</title><rect x="10.0550%" y="549" width="4.0673%" height="15" fill="rgb(235,36,10)" fg:x="3199" fg:w="1294"/><text x="10.3050%" y="559.50">hash..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (1,260 samples, 3.96%)</title><rect x="10.1619%" y="533" width="3.9604%" height="15" fill="rgb(251,123,47)" fg:x="3233" fg:w="1260"/><text x="10.4119%" y="543.50">hash..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1,260 samples, 3.96%)</title><rect x="10.1619%" y="517" width="3.9604%" height="15" fill="rgb(221,13,13)" fg:x="3233" fg:w="1260"/><text x="10.4119%" y="527.50">hash..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,260 samples, 3.96%)</title><rect x="10.1619%" y="501" width="3.9604%" height="15" fill="rgb(238,131,9)" fg:x="3233" fg:w="1260"/><text x="10.4119%" y="511.50">hash..</text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1,260 samples, 3.96%)</title><rect x="10.1619%" y="485" width="3.9604%" height="15" fill="rgb(211,50,8)" fg:x="3233" fg:w="1260"/><text x="10.4119%" y="495.50">hash..</text></g><g><title>hashbrown::raw::sse2::Group::load (1,260 samples, 3.96%)</title><rect x="10.1619%" y="469" width="3.9604%" height="15" fill="rgb(245,182,24)" fg:x="3233" fg:w="1260"/><text x="10.4119%" y="479.50">hash..</text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1,260 samples, 3.96%)</title><rect x="10.1619%" y="453" width="3.9604%" height="15" fill="rgb(242,14,37)" fg:x="3233" fg:w="1260"/><text x="10.4119%" y="463.50">core..</text></g><g><title>core::intrinsics::copy_nonoverlapping (1,260 samples, 3.96%)</title><rect x="10.1619%" y="437" width="3.9604%" height="15" fill="rgb(246,228,12)" fg:x="3233" fg:w="1260"/><text x="10.4119%" y="447.50">core..</text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (5 samples, 0.02%)</title><rect x="14.1537%" y="549" width="0.0157%" height="15" fill="rgb(213,55,15)" fg:x="4503" fg:w="5"/><text x="14.4037%" y="559.50"></text></g><g><title>std::time::Instant::duration_since (5 samples, 0.02%)</title><rect x="14.1537%" y="533" width="0.0157%" height="15" fill="rgb(209,9,3)" fg:x="4503" fg:w="5"/><text x="14.4037%" y="543.50"></text></g><g><title>std::time::Instant::checked_duration_since (5 samples, 0.02%)</title><rect x="14.1537%" y="517" width="0.0157%" height="15" fill="rgb(230,59,30)" fg:x="4503" fg:w="5"/><text x="14.4037%" y="527.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (5 samples, 0.02%)</title><rect x="14.1537%" y="501" width="0.0157%" height="15" fill="rgb(209,121,21)" fg:x="4503" fg:w="5"/><text x="14.4037%" y="511.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (5 samples, 0.02%)</title><rect x="14.1537%" y="485" width="0.0157%" height="15" fill="rgb(220,109,13)" fg:x="4503" fg:w="5"/><text x="14.4037%" y="495.50"></text></g><g><title>&lt;absim::Manager&lt;S&gt; as absim::ManagerInterface&lt;S&gt;&gt;::enqueue (4,516 samples, 14.19%)</title><rect x="0.0000%" y="821" width="14.1946%" height="15" fill="rgb(232,18,1)" fg:x="0" fg:w="4516"/><text x="0.2500%" y="831.50">&lt;absim::Manager&lt;S&gt; as ..</text></g><g><title>core::ptr::drop_in_place&lt;briolette_sim::EventData&gt; (1,327 samples, 4.17%)</title><rect x="10.0236%" y="805" width="4.1710%" height="15" fill="rgb(215,41,42)" fg:x="3189" fg:w="1327"/><text x="10.2736%" y="815.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;briolette_sim::PopulationAdd&gt; (1,327 samples, 4.17%)</title><rect x="10.0236%" y="789" width="4.1710%" height="15" fill="rgb(224,123,36)" fg:x="3189" fg:w="1327"/><text x="10.2736%" y="799.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;briolette_sim::AgentData&gt; (1,327 samples, 4.17%)</title><rect x="10.0236%" y="773" width="4.1710%" height="15" fill="rgb(240,125,3)" fg:x="3189" fg:w="1327"/><text x="10.2736%" y="783.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;briolette_sim::Coin&gt;&gt; (1,327 samples, 4.17%)</title><rect x="10.0236%" y="757" width="4.1710%" height="15" fill="rgb(205,98,50)" fg:x="3189" fg:w="1327"/><text x="10.2736%" y="767.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,327 samples, 4.17%)</title><rect x="10.0236%" y="741" width="4.1710%" height="15" fill="rgb(205,185,37)" fg:x="3189" fg:w="1327"/><text x="10.2736%" y="751.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;[briolette_sim::Coin]&gt; (1,327 samples, 4.17%)</title><rect x="10.0236%" y="725" width="4.1710%" height="15" fill="rgb(238,207,15)" fg:x="3189" fg:w="1327"/><text x="10.2736%" y="735.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;briolette_sim::Coin&gt; (1,327 samples, 4.17%)</title><rect x="10.0236%" y="709" width="4.1710%" height="15" fill="rgb(213,199,42)" fg:x="3189" fg:w="1327"/><text x="10.2736%" y="719.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (1,327 samples, 4.17%)</title><rect x="10.0236%" y="693" width="4.1710%" height="15" fill="rgb(235,201,11)" fg:x="3189" fg:w="1327"/><text x="10.2736%" y="703.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (1,327 samples, 4.17%)</title><rect x="10.0236%" y="677" width="4.1710%" height="15" fill="rgb(207,46,11)" fg:x="3189" fg:w="1327"/><text x="10.2736%" y="687.50">core:..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,327 samples, 4.17%)</title><rect x="10.0236%" y="661" width="4.1710%" height="15" fill="rgb(241,35,35)" fg:x="3189" fg:w="1327"/><text x="10.2736%" y="671.50">&lt;allo..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,319 samples, 4.15%)</title><rect x="10.0487%" y="645" width="4.1458%" height="15" fill="rgb(243,32,47)" fg:x="3197" fg:w="1319"/><text x="10.2987%" y="655.50">alloc..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,319 samples, 4.15%)</title><rect x="10.0487%" y="629" width="4.1458%" height="15" fill="rgb(247,202,23)" fg:x="3197" fg:w="1319"/><text x="10.2987%" y="639.50">&lt;allo..</text></g><g><title>alloc::alloc::dealloc (1,319 samples, 4.15%)</title><rect x="10.0487%" y="613" width="4.1458%" height="15" fill="rgb(219,102,11)" fg:x="3197" fg:w="1319"/><text x="10.2987%" y="623.50">alloc..</text></g><g><title>__rust_dealloc (1,319 samples, 4.15%)</title><rect x="10.0487%" y="597" width="4.1458%" height="15" fill="rgb(243,110,44)" fg:x="3197" fg:w="1319"/><text x="10.2987%" y="607.50">__rus..</text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1,319 samples, 4.15%)</title><rect x="10.0487%" y="581" width="4.1458%" height="15" fill="rgb(222,74,54)" fg:x="3197" fg:w="1319"/><text x="10.2987%" y="591.50">&lt;dhat..</text></g><g><title>std::time::Instant::elapsed (23 samples, 0.07%)</title><rect x="14.1223%" y="565" width="0.0723%" height="15" fill="rgb(216,99,12)" fg:x="4493" fg:w="23"/><text x="14.3723%" y="575.50"></text></g><g><title>std::time::Instant::now (8 samples, 0.03%)</title><rect x="14.1694%" y="549" width="0.0251%" height="15" fill="rgb(226,22,26)" fg:x="4508" fg:w="8"/><text x="14.4194%" y="559.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (8 samples, 0.03%)</title><rect x="14.1694%" y="533" width="0.0251%" height="15" fill="rgb(217,163,10)" fg:x="4508" fg:w="8"/><text x="14.4194%" y="543.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (4 samples, 0.01%)</title><rect x="14.1820%" y="517" width="0.0126%" height="15" fill="rgb(213,25,53)" fg:x="4512" fg:w="4"/><text x="14.4320%" y="527.50"></text></g><g><title>std::sys::pal::unix::cvt (4 samples, 0.01%)</title><rect x="14.1820%" y="501" width="0.0126%" height="15" fill="rgb(252,105,26)" fg:x="4512" fg:w="4"/><text x="14.4320%" y="511.50"></text></g><g><title>&lt;i32 as std::sys::pal::unix::IsMinusOne&gt;::is_minus_one (4 samples, 0.01%)</title><rect x="14.1820%" y="485" width="0.0126%" height="15" fill="rgb(220,39,43)" fg:x="4512" fg:w="4"/><text x="14.4320%" y="495.50"></text></g><g><title>dhat::Globals::get_pp_info (18 samples, 0.06%)</title><rect x="14.3423%" y="453" width="0.0566%" height="15" fill="rgb(229,68,48)" fg:x="4563" fg:w="18"/><text x="14.5923%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (18 samples, 0.06%)</title><rect x="14.3423%" y="437" width="0.0566%" height="15" fill="rgb(252,8,32)" fg:x="4563" fg:w="18"/><text x="14.5923%" y="447.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (18 samples, 0.06%)</title><rect x="14.3423%" y="421" width="0.0566%" height="15" fill="rgb(223,20,43)" fg:x="4563" fg:w="18"/><text x="14.5923%" y="431.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.01%)</title><rect x="14.3863%" y="405" width="0.0126%" height="15" fill="rgb(229,81,49)" fg:x="4577" fg:w="4"/><text x="14.6363%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.01%)</title><rect x="14.3863%" y="389" width="0.0126%" height="15" fill="rgb(236,28,36)" fg:x="4577" fg:w="4"/><text x="14.6363%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 0.01%)</title><rect x="14.3863%" y="373" width="0.0126%" height="15" fill="rgb(249,185,26)" fg:x="4577" fg:w="4"/><text x="14.6363%" y="383.50"></text></g><g><title>&lt;dhat::Backtrace as core::hash::Hash&gt;::hash (4 samples, 0.01%)</title><rect x="14.3863%" y="357" width="0.0126%" height="15" fill="rgb(249,174,33)" fg:x="4577" fg:w="4"/><text x="14.6363%" y="367.50"></text></g><g><title>backtrace::capture::BacktraceFrame::ip (4 samples, 0.01%)</title><rect x="14.3863%" y="341" width="0.0126%" height="15" fill="rgb(233,201,37)" fg:x="4577" fg:w="4"/><text x="14.6363%" y="351.50"></text></g><g><title>backtrace::capture::Frame::ip (4 samples, 0.01%)</title><rect x="14.3863%" y="325" width="0.0126%" height="15" fill="rgb(221,78,26)" fg:x="4577" fg:w="4"/><text x="14.6363%" y="335.50"></text></g><g><title>backtrace::backtrace::Frame::ip (4 samples, 0.01%)</title><rect x="14.3863%" y="309" width="0.0126%" height="15" fill="rgb(250,127,30)" fg:x="4577" fg:w="4"/><text x="14.6363%" y="319.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::ip (4 samples, 0.01%)</title><rect x="14.3863%" y="293" width="0.0126%" height="15" fill="rgb(230,49,44)" fg:x="4577" fg:w="4"/><text x="14.6363%" y="303.50"></text></g><g><title>dhat::Globals::record_block (17 samples, 0.05%)</title><rect x="14.3989%" y="453" width="0.0534%" height="15" fill="rgb(229,67,23)" fg:x="4581" fg:w="17"/><text x="14.6489%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (17 samples, 0.05%)</title><rect x="14.3989%" y="437" width="0.0534%" height="15" fill="rgb(249,83,47)" fg:x="4581" fg:w="17"/><text x="14.6489%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (17 samples, 0.05%)</title><rect x="14.3989%" y="421" width="0.0534%" height="15" fill="rgb(215,43,3)" fg:x="4581" fg:w="17"/><text x="14.6489%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (17 samples, 0.05%)</title><rect x="14.3989%" y="405" width="0.0534%" height="15" fill="rgb(238,154,13)" fg:x="4581" fg:w="17"/><text x="14.6489%" y="415.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (17 samples, 0.05%)</title><rect x="14.3989%" y="389" width="0.0534%" height="15" fill="rgb(219,56,2)" fg:x="4581" fg:w="17"/><text x="14.6489%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (17 samples, 0.05%)</title><rect x="14.3989%" y="373" width="0.0534%" height="15" fill="rgb(233,0,4)" fg:x="4581" fg:w="17"/><text x="14.6489%" y="383.50"></text></g><g><title>core::ptr::write (17 samples, 0.05%)</title><rect x="14.3989%" y="357" width="0.0534%" height="15" fill="rgb(235,30,7)" fg:x="4581" fg:w="17"/><text x="14.6489%" y="367.50"></text></g><g><title>_Unwind_Find_FDE (12 samples, 0.04%)</title><rect x="14.4617%" y="373" width="0.0377%" height="15" fill="rgb(250,79,13)" fg:x="4601" fg:w="12"/><text x="14.7117%" y="383.50"></text></g><g><title>__GI__dl_find_object (10 samples, 0.03%)</title><rect x="14.4680%" y="357" width="0.0314%" height="15" fill="rgb(211,146,34)" fg:x="4603" fg:w="10"/><text x="14.7180%" y="367.50"></text></g><g><title>_dlfo_lookup (5 samples, 0.02%)</title><rect x="14.4837%" y="341" width="0.0157%" height="15" fill="rgb(228,22,38)" fg:x="4608" fg:w="5"/><text x="14.7337%" y="351.50"></text></g><g><title>&lt;backtrace::backtrace::Frame as core::clone::Clone&gt;::clone (9 samples, 0.03%)</title><rect x="14.5749%" y="325" width="0.0283%" height="15" fill="rgb(235,168,5)" fg:x="4637" fg:w="9"/><text x="14.8249%" y="335.50"></text></g><g><title>&lt;backtrace::backtrace::libunwind::Frame as core::clone::Clone&gt;::clone (6 samples, 0.02%)</title><rect x="14.5843%" y="309" width="0.0189%" height="15" fill="rgb(221,155,16)" fg:x="4640" fg:w="6"/><text x="14.8343%" y="319.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (47 samples, 0.15%)</title><rect x="14.4617%" y="421" width="0.1477%" height="15" fill="rgb(215,215,53)" fg:x="4601" fg:w="47"/><text x="14.7117%" y="431.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (47 samples, 0.15%)</title><rect x="14.4617%" y="405" width="0.1477%" height="15" fill="rgb(223,4,10)" fg:x="4601" fg:w="47"/><text x="14.7117%" y="415.50"></text></g><g><title>_Unwind_Backtrace (47 samples, 0.15%)</title><rect x="14.4617%" y="389" width="0.1477%" height="15" fill="rgb(234,103,6)" fg:x="4601" fg:w="47"/><text x="14.7117%" y="399.50"></text></g><g><title>backtrace::backtrace::libunwind::trace::trace_fn (35 samples, 0.11%)</title><rect x="14.4994%" y="373" width="0.1100%" height="15" fill="rgb(227,97,0)" fg:x="4613" fg:w="35"/><text x="14.7494%" y="383.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (34 samples, 0.11%)</title><rect x="14.5026%" y="357" width="0.1069%" height="15" fill="rgb(234,150,53)" fg:x="4614" fg:w="34"/><text x="14.7526%" y="367.50"></text></g><g><title>dhat::new_backtrace_inner::{{closure}} (31 samples, 0.10%)</title><rect x="14.5120%" y="341" width="0.0974%" height="15" fill="rgb(228,201,54)" fg:x="4617" fg:w="31"/><text x="14.7620%" y="351.50"></text></g><g><title>dhat::new_backtrace_inner (50 samples, 0.16%)</title><rect x="14.4554%" y="453" width="0.1572%" height="15" fill="rgb(222,22,37)" fg:x="4599" fg:w="50"/><text x="14.7054%" y="463.50"></text></g><g><title>backtrace::backtrace::trace (48 samples, 0.15%)</title><rect x="14.4617%" y="437" width="0.1509%" height="15" fill="rgb(237,53,32)" fg:x="4601" fg:w="48"/><text x="14.7117%" y="447.50"></text></g><g><title>mintex::Mutex&lt;T&gt;::lock (4 samples, 0.01%)</title><rect x="14.6126%" y="453" width="0.0126%" height="15" fill="rgb(233,25,53)" fg:x="4649" fg:w="4"/><text x="14.8626%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (4 samples, 0.01%)</title><rect x="14.6126%" y="437" width="0.0126%" height="15" fill="rgb(210,40,34)" fg:x="4649" fg:w="4"/><text x="14.8626%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4 samples, 0.01%)</title><rect x="14.6126%" y="421" width="0.0126%" height="15" fill="rgb(241,220,44)" fg:x="4649" fg:w="4"/><text x="14.8626%" y="431.50"></text></g><g><title>&lt;absim::graph_utils::Vertex as core::clone::Clone&gt;::clone (92 samples, 0.29%)</title><rect x="14.3391%" y="677" width="0.2892%" height="15" fill="rgb(235,28,35)" fg:x="4562" fg:w="92"/><text x="14.5891%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (92 samples, 0.29%)</title><rect x="14.3391%" y="661" width="0.2892%" height="15" fill="rgb(210,56,17)" fg:x="4562" fg:w="92"/><text x="14.5891%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (92 samples, 0.29%)</title><rect x="14.3391%" y="645" width="0.2892%" height="15" fill="rgb(224,130,29)" fg:x="4562" fg:w="92"/><text x="14.5891%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (92 samples, 0.29%)</title><rect x="14.3391%" y="629" width="0.2892%" height="15" fill="rgb(235,212,8)" fg:x="4562" fg:w="92"/><text x="14.5891%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (92 samples, 0.29%)</title><rect x="14.3391%" y="613" width="0.2892%" height="15" fill="rgb(223,33,50)" fg:x="4562" fg:w="92"/><text x="14.5891%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (92 samples, 0.29%)</title><rect x="14.3391%" y="597" width="0.2892%" height="15" fill="rgb(219,149,13)" fg:x="4562" fg:w="92"/><text x="14.5891%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (92 samples, 0.29%)</title><rect x="14.3391%" y="581" width="0.2892%" height="15" fill="rgb(250,156,29)" fg:x="4562" fg:w="92"/><text x="14.5891%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (92 samples, 0.29%)</title><rect x="14.3391%" y="565" width="0.2892%" height="15" fill="rgb(216,193,19)" fg:x="4562" fg:w="92"/><text x="14.5891%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (92 samples, 0.29%)</title><rect x="14.3391%" y="549" width="0.2892%" height="15" fill="rgb(216,135,14)" fg:x="4562" fg:w="92"/><text x="14.5891%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (92 samples, 0.29%)</title><rect x="14.3391%" y="533" width="0.2892%" height="15" fill="rgb(241,47,5)" fg:x="4562" fg:w="92"/><text x="14.5891%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (92 samples, 0.29%)</title><rect x="14.3391%" y="517" width="0.2892%" height="15" fill="rgb(233,42,35)" fg:x="4562" fg:w="92"/><text x="14.5891%" y="527.50"></text></g><g><title>alloc::alloc::alloc (92 samples, 0.29%)</title><rect x="14.3391%" y="501" width="0.2892%" height="15" fill="rgb(231,13,6)" fg:x="4562" fg:w="92"/><text x="14.5891%" y="511.50"></text></g><g><title>__rust_alloc (92 samples, 0.29%)</title><rect x="14.3391%" y="485" width="0.2892%" height="15" fill="rgb(207,181,40)" fg:x="4562" fg:w="92"/><text x="14.5891%" y="495.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (92 samples, 0.29%)</title><rect x="14.3391%" y="469" width="0.2892%" height="15" fill="rgb(254,173,49)" fg:x="4562" fg:w="92"/><text x="14.5891%" y="479.50"></text></g><g><title>dhat::Globals::get_pp_info (8 samples, 0.03%)</title><rect x="14.6377%" y="469" width="0.0251%" height="15" fill="rgb(221,1,38)" fg:x="4657" fg:w="8"/><text x="14.8877%" y="479.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (8 samples, 0.03%)</title><rect x="14.6377%" y="453" width="0.0251%" height="15" fill="rgb(206,124,46)" fg:x="4657" fg:w="8"/><text x="14.8877%" y="463.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (8 samples, 0.03%)</title><rect x="14.6377%" y="437" width="0.0251%" height="15" fill="rgb(249,21,11)" fg:x="4657" fg:w="8"/><text x="14.8877%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.02%)</title><rect x="14.6440%" y="421" width="0.0189%" height="15" fill="rgb(222,201,40)" fg:x="4659" fg:w="6"/><text x="14.8940%" y="431.50"></text></g><g><title>dhat::Globals::record_block (17 samples, 0.05%)</title><rect x="14.6629%" y="469" width="0.0534%" height="15" fill="rgb(235,61,29)" fg:x="4665" fg:w="17"/><text x="14.9129%" y="479.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (17 samples, 0.05%)</title><rect x="14.6629%" y="453" width="0.0534%" height="15" fill="rgb(219,207,3)" fg:x="4665" fg:w="17"/><text x="14.9129%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (17 samples, 0.05%)</title><rect x="14.6629%" y="437" width="0.0534%" height="15" fill="rgb(222,56,46)" fg:x="4665" fg:w="17"/><text x="14.9129%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (17 samples, 0.05%)</title><rect x="14.6629%" y="421" width="0.0534%" height="15" fill="rgb(239,76,54)" fg:x="4665" fg:w="17"/><text x="14.9129%" y="431.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (17 samples, 0.05%)</title><rect x="14.6629%" y="405" width="0.0534%" height="15" fill="rgb(231,124,27)" fg:x="4665" fg:w="17"/><text x="14.9129%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (17 samples, 0.05%)</title><rect x="14.6629%" y="389" width="0.0534%" height="15" fill="rgb(249,195,6)" fg:x="4665" fg:w="17"/><text x="14.9129%" y="399.50"></text></g><g><title>core::ptr::write (17 samples, 0.05%)</title><rect x="14.6629%" y="373" width="0.0534%" height="15" fill="rgb(237,174,47)" fg:x="4665" fg:w="17"/><text x="14.9129%" y="383.50"></text></g><g><title>_Unwind_Find_FDE (4 samples, 0.01%)</title><rect x="14.7320%" y="389" width="0.0126%" height="15" fill="rgb(206,201,31)" fg:x="4687" fg:w="4"/><text x="14.9820%" y="399.50"></text></g><g><title>Unknown (5 samples, 0.02%)</title><rect x="14.7729%" y="261" width="0.0157%" height="15" fill="rgb(231,57,52)" fg:x="4700" fg:w="5"/><text x="15.0229%" y="271.50"></text></g><g><title>&lt;backtrace::backtrace::Frame as core::clone::Clone&gt;::clone (15 samples, 0.05%)</title><rect x="14.7603%" y="341" width="0.0471%" height="15" fill="rgb(248,177,22)" fg:x="4696" fg:w="15"/><text x="15.0103%" y="351.50"></text></g><g><title>&lt;backtrace::backtrace::libunwind::Frame as core::clone::Clone&gt;::clone (15 samples, 0.05%)</title><rect x="14.7603%" y="325" width="0.0471%" height="15" fill="rgb(215,211,37)" fg:x="4696" fg:w="15"/><text x="15.0103%" y="335.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::symbol_address (15 samples, 0.05%)</title><rect x="14.7603%" y="309" width="0.0471%" height="15" fill="rgb(241,128,51)" fg:x="4696" fg:w="15"/><text x="15.0103%" y="319.50"></text></g><g><title>_Unwind_FindEnclosingFunction (11 samples, 0.03%)</title><rect x="14.7729%" y="293" width="0.0346%" height="15" fill="rgb(227,165,31)" fg:x="4700" fg:w="11"/><text x="15.0229%" y="303.50"></text></g><g><title>_Unwind_Find_FDE (11 samples, 0.03%)</title><rect x="14.7729%" y="277" width="0.0346%" height="15" fill="rgb(228,167,24)" fg:x="4700" fg:w="11"/><text x="15.0229%" y="287.50"></text></g><g><title>__GI__dl_find_object (6 samples, 0.02%)</title><rect x="14.7886%" y="261" width="0.0189%" height="15" fill="rgb(228,143,12)" fg:x="4705" fg:w="6"/><text x="15.0386%" y="271.50"></text></g><g><title>_dl_find_object_to_external (6 samples, 0.02%)</title><rect x="14.7886%" y="245" width="0.0189%" height="15" fill="rgb(249,149,8)" fg:x="4705" fg:w="6"/><text x="15.0386%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (35 samples, 0.11%)</title><rect x="14.8075%" y="341" width="0.1100%" height="15" fill="rgb(243,35,44)" fg:x="4711" fg:w="35"/><text x="15.0575%" y="351.50"></text></g><g><title>core::ptr::write (32 samples, 0.10%)</title><rect x="14.8169%" y="325" width="0.1006%" height="15" fill="rgb(246,89,9)" fg:x="4714" fg:w="32"/><text x="15.0669%" y="335.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (61 samples, 0.19%)</title><rect x="14.7320%" y="437" width="0.1917%" height="15" fill="rgb(233,213,13)" fg:x="4687" fg:w="61"/><text x="14.9820%" y="447.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (61 samples, 0.19%)</title><rect x="14.7320%" y="421" width="0.1917%" height="15" fill="rgb(233,141,41)" fg:x="4687" fg:w="61"/><text x="14.9820%" y="431.50"></text></g><g><title>_Unwind_Backtrace (61 samples, 0.19%)</title><rect x="14.7320%" y="405" width="0.1917%" height="15" fill="rgb(239,167,4)" fg:x="4687" fg:w="61"/><text x="14.9820%" y="415.50"></text></g><g><title>backtrace::backtrace::libunwind::trace::trace_fn (57 samples, 0.18%)</title><rect x="14.7446%" y="389" width="0.1792%" height="15" fill="rgb(209,217,16)" fg:x="4691" fg:w="57"/><text x="14.9946%" y="399.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (53 samples, 0.17%)</title><rect x="14.7572%" y="373" width="0.1666%" height="15" fill="rgb(219,88,35)" fg:x="4695" fg:w="53"/><text x="15.0072%" y="383.50"></text></g><g><title>dhat::new_backtrace_inner::{{closure}} (52 samples, 0.16%)</title><rect x="14.7603%" y="357" width="0.1634%" height="15" fill="rgb(220,193,23)" fg:x="4696" fg:w="52"/><text x="15.0103%" y="367.50"></text></g><g><title>dhat::new_backtrace_inner (69 samples, 0.22%)</title><rect x="14.7163%" y="469" width="0.2169%" height="15" fill="rgb(230,90,52)" fg:x="4682" fg:w="69"/><text x="14.9663%" y="479.50"></text></g><g><title>backtrace::backtrace::trace (64 samples, 0.20%)</title><rect x="14.7320%" y="453" width="0.2012%" height="15" fill="rgb(252,106,19)" fg:x="4687" fg:w="64"/><text x="14.9820%" y="463.50"></text></g><g><title>&lt;absim::graph_utils::SimulationGraph as core::clone::Clone&gt;::clone (191 samples, 0.60%)</title><rect x="14.3360%" y="757" width="0.6003%" height="15" fill="rgb(206,74,20)" fg:x="4561" fg:w="191"/><text x="14.5860%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (191 samples, 0.60%)</title><rect x="14.3360%" y="741" width="0.6003%" height="15" fill="rgb(230,138,44)" fg:x="4561" fg:w="191"/><text x="14.5860%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (191 samples, 0.60%)</title><rect x="14.3360%" y="725" width="0.6003%" height="15" fill="rgb(235,182,43)" fg:x="4561" fg:w="191"/><text x="14.5860%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (191 samples, 0.60%)</title><rect x="14.3360%" y="709" width="0.6003%" height="15" fill="rgb(242,16,51)" fg:x="4561" fg:w="191"/><text x="14.5860%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (191 samples, 0.60%)</title><rect x="14.3360%" y="693" width="0.6003%" height="15" fill="rgb(248,9,4)" fg:x="4561" fg:w="191"/><text x="14.5860%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (98 samples, 0.31%)</title><rect x="14.6283%" y="677" width="0.3080%" height="15" fill="rgb(210,31,22)" fg:x="4654" fg:w="98"/><text x="14.8783%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (98 samples, 0.31%)</title><rect x="14.6283%" y="661" width="0.3080%" height="15" fill="rgb(239,54,39)" fg:x="4654" fg:w="98"/><text x="14.8783%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (98 samples, 0.31%)</title><rect x="14.6283%" y="645" width="0.3080%" height="15" fill="rgb(230,99,41)" fg:x="4654" fg:w="98"/><text x="14.8783%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (98 samples, 0.31%)</title><rect x="14.6283%" y="629" width="0.3080%" height="15" fill="rgb(253,106,12)" fg:x="4654" fg:w="98"/><text x="14.8783%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (98 samples, 0.31%)</title><rect x="14.6283%" y="613" width="0.3080%" height="15" fill="rgb(213,46,41)" fg:x="4654" fg:w="98"/><text x="14.8783%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (98 samples, 0.31%)</title><rect x="14.6283%" y="597" width="0.3080%" height="15" fill="rgb(215,133,35)" fg:x="4654" fg:w="98"/><text x="14.8783%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (98 samples, 0.31%)</title><rect x="14.6283%" y="581" width="0.3080%" height="15" fill="rgb(213,28,5)" fg:x="4654" fg:w="98"/><text x="14.8783%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (98 samples, 0.31%)</title><rect x="14.6283%" y="565" width="0.3080%" height="15" fill="rgb(215,77,49)" fg:x="4654" fg:w="98"/><text x="14.8783%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (98 samples, 0.31%)</title><rect x="14.6283%" y="549" width="0.3080%" height="15" fill="rgb(248,100,22)" fg:x="4654" fg:w="98"/><text x="14.8783%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (98 samples, 0.31%)</title><rect x="14.6283%" y="533" width="0.3080%" height="15" fill="rgb(208,67,9)" fg:x="4654" fg:w="98"/><text x="14.8783%" y="543.50"></text></g><g><title>alloc::alloc::alloc (98 samples, 0.31%)</title><rect x="14.6283%" y="517" width="0.3080%" height="15" fill="rgb(219,133,21)" fg:x="4654" fg:w="98"/><text x="14.8783%" y="527.50"></text></g><g><title>__rust_alloc (98 samples, 0.31%)</title><rect x="14.6283%" y="501" width="0.3080%" height="15" fill="rgb(246,46,29)" fg:x="4654" fg:w="98"/><text x="14.8783%" y="511.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (98 samples, 0.31%)</title><rect x="14.6283%" y="485" width="0.3080%" height="15" fill="rgb(246,185,52)" fg:x="4654" fg:w="98"/><text x="14.8783%" y="495.50"></text></g><g><title>&lt;absim::WorldView&lt;S&gt; as core::clone::Clone&gt;::clone (199 samples, 0.63%)</title><rect x="14.3297%" y="789" width="0.6255%" height="15" fill="rgb(252,136,11)" fg:x="4559" fg:w="199"/><text x="14.5797%" y="799.50"></text></g><g><title>&lt;briolette_sim::ViewData as core::clone::Clone&gt;::clone (197 samples, 0.62%)</title><rect x="14.3360%" y="773" width="0.6192%" height="15" fill="rgb(219,138,53)" fg:x="4561" fg:w="197"/><text x="14.5860%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.02%)</title><rect x="14.9364%" y="757" width="0.0189%" height="15" fill="rgb(211,51,23)" fg:x="4752" fg:w="6"/><text x="15.1864%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.02%)</title><rect x="14.9364%" y="741" width="0.0189%" height="15" fill="rgb(247,221,28)" fg:x="4752" fg:w="6"/><text x="15.1864%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.02%)</title><rect x="14.9364%" y="725" width="0.0189%" height="15" fill="rgb(251,222,45)" fg:x="4752" fg:w="6"/><text x="15.1864%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.02%)</title><rect x="14.9364%" y="709" width="0.0189%" height="15" fill="rgb(217,162,53)" fg:x="4752" fg:w="6"/><text x="15.1864%" y="719.50"></text></g><g><title>&lt;briolette_sim::SyncState as core::clone::Clone&gt;::clone (6 samples, 0.02%)</title><rect x="14.9364%" y="693" width="0.0189%" height="15" fill="rgb(229,93,14)" fg:x="4752" fg:w="6"/><text x="15.1864%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.02%)</title><rect x="14.9364%" y="677" width="0.0189%" height="15" fill="rgb(209,67,49)" fg:x="4752" fg:w="6"/><text x="15.1864%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.02%)</title><rect x="14.9364%" y="661" width="0.0189%" height="15" fill="rgb(213,87,29)" fg:x="4752" fg:w="6"/><text x="15.1864%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.02%)</title><rect x="14.9364%" y="645" width="0.0189%" height="15" fill="rgb(205,151,52)" fg:x="4752" fg:w="6"/><text x="15.1864%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.02%)</title><rect x="14.9364%" y="629" width="0.0189%" height="15" fill="rgb(253,215,39)" fg:x="4752" fg:w="6"/><text x="15.1864%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.02%)</title><rect x="14.9364%" y="613" width="0.0189%" height="15" fill="rgb(221,220,41)" fg:x="4752" fg:w="6"/><text x="15.1864%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.02%)</title><rect x="14.9364%" y="597" width="0.0189%" height="15" fill="rgb(218,133,21)" fg:x="4752" fg:w="6"/><text x="15.1864%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (6 samples, 0.02%)</title><rect x="14.9364%" y="581" width="0.0189%" height="15" fill="rgb(221,193,43)" fg:x="4752" fg:w="6"/><text x="15.1864%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (6 samples, 0.02%)</title><rect x="14.9364%" y="565" width="0.0189%" height="15" fill="rgb(240,128,52)" fg:x="4752" fg:w="6"/><text x="15.1864%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.02%)</title><rect x="14.9364%" y="549" width="0.0189%" height="15" fill="rgb(253,114,12)" fg:x="4752" fg:w="6"/><text x="15.1864%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.02%)</title><rect x="14.9364%" y="533" width="0.0189%" height="15" fill="rgb(215,223,47)" fg:x="4752" fg:w="6"/><text x="15.1864%" y="543.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.02%)</title><rect x="14.9364%" y="517" width="0.0189%" height="15" fill="rgb(248,225,23)" fg:x="4752" fg:w="6"/><text x="15.1864%" y="527.50"></text></g><g><title>__rust_alloc (6 samples, 0.02%)</title><rect x="14.9364%" y="501" width="0.0189%" height="15" fill="rgb(250,108,0)" fg:x="4752" fg:w="6"/><text x="15.1864%" y="511.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (6 samples, 0.02%)</title><rect x="14.9364%" y="485" width="0.0189%" height="15" fill="rgb(228,208,7)" fg:x="4752" fg:w="6"/><text x="15.1864%" y="495.50"></text></g><g><title>dhat::new_backtrace_inner (4 samples, 0.01%)</title><rect x="14.9426%" y="469" width="0.0126%" height="15" fill="rgb(244,45,10)" fg:x="4754" fg:w="4"/><text x="15.1926%" y="479.50"></text></g><g><title>backtrace::backtrace::trace (4 samples, 0.01%)</title><rect x="14.9426%" y="453" width="0.0126%" height="15" fill="rgb(207,125,25)" fg:x="4754" fg:w="4"/><text x="15.1926%" y="463.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (4 samples, 0.01%)</title><rect x="14.9426%" y="437" width="0.0126%" height="15" fill="rgb(210,195,18)" fg:x="4754" fg:w="4"/><text x="15.1926%" y="447.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (4 samples, 0.01%)</title><rect x="14.9426%" y="421" width="0.0126%" height="15" fill="rgb(249,80,12)" fg:x="4754" fg:w="4"/><text x="15.1926%" y="431.50"></text></g><g><title>_Unwind_Backtrace (4 samples, 0.01%)</title><rect x="14.9426%" y="405" width="0.0126%" height="15" fill="rgb(221,65,9)" fg:x="4754" fg:w="4"/><text x="15.1926%" y="415.50"></text></g><g><title>backtrace::backtrace::libunwind::trace::trace_fn (4 samples, 0.01%)</title><rect x="14.9426%" y="389" width="0.0126%" height="15" fill="rgb(235,49,36)" fg:x="4754" fg:w="4"/><text x="15.1926%" y="399.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (4 samples, 0.01%)</title><rect x="14.9426%" y="373" width="0.0126%" height="15" fill="rgb(225,32,20)" fg:x="4754" fg:w="4"/><text x="15.1926%" y="383.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (38 samples, 0.12%)</title><rect x="14.9552%" y="757" width="0.1194%" height="15" fill="rgb(215,141,46)" fg:x="4758" fg:w="38"/><text x="15.2052%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (38 samples, 0.12%)</title><rect x="14.9552%" y="741" width="0.1194%" height="15" fill="rgb(250,160,47)" fg:x="4758" fg:w="38"/><text x="15.2052%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (38 samples, 0.12%)</title><rect x="14.9552%" y="725" width="0.1194%" height="15" fill="rgb(216,222,40)" fg:x="4758" fg:w="38"/><text x="15.2052%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="15.1972%" y="309" width="0.0220%" height="15" fill="rgb(234,217,39)" fg:x="4835" fg:w="7"/><text x="15.4472%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;dhat::Backtrace&gt; (8 samples, 0.03%)</title><rect x="15.1972%" y="357" width="0.0251%" height="15" fill="rgb(207,178,40)" fg:x="4835" fg:w="8"/><text x="15.4472%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;backtrace::capture::Backtrace&gt; (8 samples, 0.03%)</title><rect x="15.1972%" y="341" width="0.0251%" height="15" fill="rgb(221,136,13)" fg:x="4835" fg:w="8"/><text x="15.4472%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;backtrace::capture::BacktraceFrame&gt;&gt; (8 samples, 0.03%)</title><rect x="15.1972%" y="325" width="0.0251%" height="15" fill="rgb(249,199,10)" fg:x="4835" fg:w="8"/><text x="15.4472%" y="335.50"></text></g><g><title>dhat::Globals::get_pp_info (57 samples, 0.18%)</title><rect x="15.1124%" y="405" width="0.1792%" height="15" fill="rgb(249,222,13)" fg:x="4808" fg:w="57"/><text x="15.3624%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (55 samples, 0.17%)</title><rect x="15.1187%" y="389" width="0.1729%" height="15" fill="rgb(244,185,38)" fg:x="4810" fg:w="55"/><text x="15.3687%" y="399.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (55 samples, 0.17%)</title><rect x="15.1187%" y="373" width="0.1729%" height="15" fill="rgb(236,202,9)" fg:x="4810" fg:w="55"/><text x="15.3687%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (22 samples, 0.07%)</title><rect x="15.2224%" y="357" width="0.0691%" height="15" fill="rgb(250,229,37)" fg:x="4843" fg:w="22"/><text x="15.4724%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (22 samples, 0.07%)</title><rect x="15.2224%" y="341" width="0.0691%" height="15" fill="rgb(206,174,23)" fg:x="4843" fg:w="22"/><text x="15.4724%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (22 samples, 0.07%)</title><rect x="15.2224%" y="325" width="0.0691%" height="15" fill="rgb(211,33,43)" fg:x="4843" fg:w="22"/><text x="15.4724%" y="335.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (22 samples, 0.07%)</title><rect x="15.2224%" y="309" width="0.0691%" height="15" fill="rgb(245,58,50)" fg:x="4843" fg:w="22"/><text x="15.4724%" y="319.50"></text></g><g><title>&lt;dhat::Backtrace as core::cmp::PartialEq&gt;::eq (22 samples, 0.07%)</title><rect x="15.2224%" y="293" width="0.0691%" height="15" fill="rgb(244,68,36)" fg:x="4843" fg:w="22"/><text x="15.4724%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (22 samples, 0.07%)</title><rect x="15.2224%" y="277" width="0.0691%" height="15" fill="rgb(232,229,15)" fg:x="4843" fg:w="22"/><text x="15.4724%" y="287.50"></text></g><g><title>&lt;dhat::Backtrace as core::cmp::PartialEq&gt;::eq::{{closure}} (22 samples, 0.07%)</title><rect x="15.2224%" y="261" width="0.0691%" height="15" fill="rgb(254,30,23)" fg:x="4843" fg:w="22"/><text x="15.4724%" y="271.50"></text></g><g><title>backtrace::capture::BacktraceFrame::ip (15 samples, 0.05%)</title><rect x="15.2444%" y="245" width="0.0471%" height="15" fill="rgb(235,160,14)" fg:x="4850" fg:w="15"/><text x="15.4944%" y="255.50"></text></g><g><title>backtrace::capture::Frame::ip (15 samples, 0.05%)</title><rect x="15.2444%" y="229" width="0.0471%" height="15" fill="rgb(212,155,44)" fg:x="4850" fg:w="15"/><text x="15.4944%" y="239.50"></text></g><g><title>backtrace::backtrace::Frame::ip (15 samples, 0.05%)</title><rect x="15.2444%" y="213" width="0.0471%" height="15" fill="rgb(226,2,50)" fg:x="4850" fg:w="15"/><text x="15.4944%" y="223.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::ip (15 samples, 0.05%)</title><rect x="15.2444%" y="197" width="0.0471%" height="15" fill="rgb(234,177,6)" fg:x="4850" fg:w="15"/><text x="15.4944%" y="207.50"></text></g><g><title>dhat::Globals::record_block (114 samples, 0.36%)</title><rect x="15.2915%" y="405" width="0.3583%" height="15" fill="rgb(217,24,9)" fg:x="4865" fg:w="114"/><text x="15.5415%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (114 samples, 0.36%)</title><rect x="15.2915%" y="389" width="0.3583%" height="15" fill="rgb(220,13,46)" fg:x="4865" fg:w="114"/><text x="15.5415%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (114 samples, 0.36%)</title><rect x="15.2915%" y="373" width="0.3583%" height="15" fill="rgb(239,221,27)" fg:x="4865" fg:w="114"/><text x="15.5415%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (114 samples, 0.36%)</title><rect x="15.2915%" y="357" width="0.3583%" height="15" fill="rgb(222,198,25)" fg:x="4865" fg:w="114"/><text x="15.5415%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (114 samples, 0.36%)</title><rect x="15.2915%" y="341" width="0.3583%" height="15" fill="rgb(211,99,13)" fg:x="4865" fg:w="114"/><text x="15.5415%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (114 samples, 0.36%)</title><rect x="15.2915%" y="325" width="0.3583%" height="15" fill="rgb(232,111,31)" fg:x="4865" fg:w="114"/><text x="15.5415%" y="335.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (114 samples, 0.36%)</title><rect x="15.2915%" y="309" width="0.3583%" height="15" fill="rgb(245,82,37)" fg:x="4865" fg:w="114"/><text x="15.5415%" y="319.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (114 samples, 0.36%)</title><rect x="15.2915%" y="293" width="0.3583%" height="15" fill="rgb(227,149,46)" fg:x="4865" fg:w="114"/><text x="15.5415%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (114 samples, 0.36%)</title><rect x="15.2915%" y="277" width="0.3583%" height="15" fill="rgb(218,36,50)" fg:x="4865" fg:w="114"/><text x="15.5415%" y="287.50"></text></g><g><title>Unknown (10 samples, 0.03%)</title><rect x="15.7284%" y="309" width="0.0314%" height="15" fill="rgb(226,80,48)" fg:x="5004" fg:w="10"/><text x="15.9784%" y="319.50"></text></g><g><title>_Unwind_Find_FDE (46 samples, 0.14%)</title><rect x="15.7284%" y="325" width="0.1446%" height="15" fill="rgb(238,224,15)" fg:x="5004" fg:w="46"/><text x="15.9784%" y="335.50"></text></g><g><title>__GI__dl_find_object (36 samples, 0.11%)</title><rect x="15.7599%" y="309" width="0.1132%" height="15" fill="rgb(241,136,10)" fg:x="5014" fg:w="36"/><text x="16.0099%" y="319.50"></text></g><g><title>_dlfo_lookup (7 samples, 0.02%)</title><rect x="15.8510%" y="293" width="0.0220%" height="15" fill="rgb(208,32,45)" fg:x="5043" fg:w="7"/><text x="16.1010%" y="303.50"></text></g><g><title>Unknown (5 samples, 0.02%)</title><rect x="16.0145%" y="197" width="0.0157%" height="15" fill="rgb(207,135,9)" fg:x="5095" fg:w="5"/><text x="16.2645%" y="207.50"></text></g><g><title>&lt;backtrace::backtrace::Frame as core::clone::Clone&gt;::clone (44 samples, 0.14%)</title><rect x="15.9327%" y="277" width="0.1383%" height="15" fill="rgb(206,86,44)" fg:x="5069" fg:w="44"/><text x="16.1827%" y="287.50"></text></g><g><title>&lt;backtrace::backtrace::libunwind::Frame as core::clone::Clone&gt;::clone (44 samples, 0.14%)</title><rect x="15.9327%" y="261" width="0.1383%" height="15" fill="rgb(245,177,15)" fg:x="5069" fg:w="44"/><text x="16.1827%" y="271.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::symbol_address (44 samples, 0.14%)</title><rect x="15.9327%" y="245" width="0.1383%" height="15" fill="rgb(206,64,50)" fg:x="5069" fg:w="44"/><text x="16.1827%" y="255.50"></text></g><g><title>_Unwind_FindEnclosingFunction (18 samples, 0.06%)</title><rect x="16.0145%" y="229" width="0.0566%" height="15" fill="rgb(234,36,40)" fg:x="5095" fg:w="18"/><text x="16.2645%" y="239.50"></text></g><g><title>_Unwind_Find_FDE (18 samples, 0.06%)</title><rect x="16.0145%" y="213" width="0.0566%" height="15" fill="rgb(213,64,8)" fg:x="5095" fg:w="18"/><text x="16.2645%" y="223.50"></text></g><g><title>__GI__dl_find_object (13 samples, 0.04%)</title><rect x="16.0302%" y="197" width="0.0409%" height="15" fill="rgb(210,75,36)" fg:x="5100" fg:w="13"/><text x="16.2802%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.01%)</title><rect x="16.0836%" y="197" width="0.0126%" height="15" fill="rgb(229,88,21)" fg:x="5117" fg:w="4"/><text x="16.3336%" y="207.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.01%)</title><rect x="16.0836%" y="181" width="0.0126%" height="15" fill="rgb(252,204,47)" fg:x="5117" fg:w="4"/><text x="16.3336%" y="191.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.01%)</title><rect x="16.0836%" y="165" width="0.0126%" height="15" fill="rgb(208,77,27)" fg:x="5117" fg:w="4"/><text x="16.3336%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.02%)</title><rect x="16.0773%" y="213" width="0.0220%" height="15" fill="rgb(221,76,26)" fg:x="5115" fg:w="7"/><text x="16.3273%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (15 samples, 0.05%)</title><rect x="16.0710%" y="277" width="0.0471%" height="15" fill="rgb(225,139,18)" fg:x="5113" fg:w="15"/><text x="16.3210%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (15 samples, 0.05%)</title><rect x="16.0710%" y="261" width="0.0471%" height="15" fill="rgb(230,137,11)" fg:x="5113" fg:w="15"/><text x="16.3210%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (15 samples, 0.05%)</title><rect x="16.0710%" y="245" width="0.0471%" height="15" fill="rgb(212,28,1)" fg:x="5113" fg:w="15"/><text x="16.3210%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (15 samples, 0.05%)</title><rect x="16.0710%" y="229" width="0.0471%" height="15" fill="rgb(248,164,17)" fg:x="5113" fg:w="15"/><text x="16.3210%" y="239.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (6 samples, 0.02%)</title><rect x="16.0993%" y="213" width="0.0189%" height="15" fill="rgb(222,171,42)" fg:x="5122" fg:w="6"/><text x="16.3493%" y="223.50"></text></g><g><title>backtrace::backtrace::Frame::ip (6 samples, 0.02%)</title><rect x="16.1182%" y="277" width="0.0189%" height="15" fill="rgb(243,84,45)" fg:x="5128" fg:w="6"/><text x="16.3682%" y="287.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::ip (6 samples, 0.02%)</title><rect x="16.1182%" y="261" width="0.0189%" height="15" fill="rgb(252,49,23)" fg:x="5128" fg:w="6"/><text x="16.3682%" y="271.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (225 samples, 0.71%)</title><rect x="15.7221%" y="373" width="0.7072%" height="15" fill="rgb(215,19,7)" fg:x="5002" fg:w="225"/><text x="15.9721%" y="383.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (225 samples, 0.71%)</title><rect x="15.7221%" y="357" width="0.7072%" height="15" fill="rgb(238,81,41)" fg:x="5002" fg:w="225"/><text x="15.9721%" y="367.50"></text></g><g><title>_Unwind_Backtrace (225 samples, 0.71%)</title><rect x="15.7221%" y="341" width="0.7072%" height="15" fill="rgb(210,199,37)" fg:x="5002" fg:w="225"/><text x="15.9721%" y="351.50"></text></g><g><title>backtrace::backtrace::libunwind::trace::trace_fn (177 samples, 0.56%)</title><rect x="15.8730%" y="325" width="0.5563%" height="15" fill="rgb(244,192,49)" fg:x="5050" fg:w="177"/><text x="16.1230%" y="335.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (170 samples, 0.53%)</title><rect x="15.8950%" y="309" width="0.5343%" height="15" fill="rgb(226,211,11)" fg:x="5057" fg:w="170"/><text x="16.1450%" y="319.50"></text></g><g><title>dhat::new_backtrace_inner::{{closure}} (166 samples, 0.52%)</title><rect x="15.9076%" y="293" width="0.5218%" height="15" fill="rgb(236,162,54)" fg:x="5061" fg:w="166"/><text x="16.1576%" y="303.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (93 samples, 0.29%)</title><rect x="16.1370%" y="277" width="0.2923%" height="15" fill="rgb(220,229,9)" fg:x="5134" fg:w="93"/><text x="16.3870%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (93 samples, 0.29%)</title><rect x="16.1370%" y="261" width="0.2923%" height="15" fill="rgb(250,87,22)" fg:x="5134" fg:w="93"/><text x="16.3870%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (93 samples, 0.29%)</title><rect x="16.1370%" y="245" width="0.2923%" height="15" fill="rgb(239,43,17)" fg:x="5134" fg:w="93"/><text x="16.3870%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (93 samples, 0.29%)</title><rect x="16.1370%" y="229" width="0.2923%" height="15" fill="rgb(231,177,25)" fg:x="5134" fg:w="93"/><text x="16.3870%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (93 samples, 0.29%)</title><rect x="16.1370%" y="213" width="0.2923%" height="15" fill="rgb(219,179,1)" fg:x="5134" fg:w="93"/><text x="16.3870%" y="223.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (93 samples, 0.29%)</title><rect x="16.1370%" y="197" width="0.2923%" height="15" fill="rgb(238,219,53)" fg:x="5134" fg:w="93"/><text x="16.3870%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (93 samples, 0.29%)</title><rect x="16.1370%" y="181" width="0.2923%" height="15" fill="rgb(232,167,36)" fg:x="5134" fg:w="93"/><text x="16.3870%" y="191.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (93 samples, 0.29%)</title><rect x="16.1370%" y="165" width="0.2923%" height="15" fill="rgb(244,19,51)" fg:x="5134" fg:w="93"/><text x="16.3870%" y="175.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (93 samples, 0.29%)</title><rect x="16.1370%" y="149" width="0.2923%" height="15" fill="rgb(224,6,22)" fg:x="5134" fg:w="93"/><text x="16.3870%" y="159.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (93 samples, 0.29%)</title><rect x="16.1370%" y="133" width="0.2923%" height="15" fill="rgb(224,145,5)" fg:x="5134" fg:w="93"/><text x="16.3870%" y="143.50"></text></g><g><title>dhat::new_backtrace_inner (263 samples, 0.83%)</title><rect x="15.6561%" y="405" width="0.8267%" height="15" fill="rgb(234,130,49)" fg:x="4981" fg:w="263"/><text x="15.9061%" y="415.50"></text></g><g><title>backtrace::backtrace::trace (242 samples, 0.76%)</title><rect x="15.7221%" y="389" width="0.7606%" height="15" fill="rgb(254,6,2)" fg:x="5002" fg:w="242"/><text x="15.9721%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;backtrace::lock::LockGuard&gt; (14 samples, 0.04%)</title><rect x="16.4388%" y="373" width="0.0440%" height="15" fill="rgb(208,96,46)" fg:x="5230" fg:w="14"/><text x="16.6888%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt;&gt; (14 samples, 0.04%)</title><rect x="16.4388%" y="357" width="0.0440%" height="15" fill="rgb(239,3,39)" fg:x="5230" fg:w="14"/><text x="16.6888%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (14 samples, 0.04%)</title><rect x="16.4388%" y="341" width="0.0440%" height="15" fill="rgb(233,210,1)" fg:x="5230" fg:w="14"/><text x="16.6888%" y="351.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.04%)</title><rect x="16.4388%" y="325" width="0.0440%" height="15" fill="rgb(244,137,37)" fg:x="5230" fg:w="14"/><text x="16.6888%" y="335.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (14 samples, 0.04%)</title><rect x="16.4388%" y="309" width="0.0440%" height="15" fill="rgb(240,136,2)" fg:x="5230" fg:w="14"/><text x="16.6888%" y="319.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (14 samples, 0.04%)</title><rect x="16.4388%" y="293" width="0.0440%" height="15" fill="rgb(239,18,37)" fg:x="5230" fg:w="14"/><text x="16.6888%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_swap (14 samples, 0.04%)</title><rect x="16.4388%" y="277" width="0.0440%" height="15" fill="rgb(218,185,22)" fg:x="5230" fg:w="14"/><text x="16.6888%" y="287.50"></text></g><g><title>mintex::Mutex&lt;T&gt;::lock (11 samples, 0.03%)</title><rect x="16.4828%" y="405" width="0.0346%" height="15" fill="rgb(225,218,4)" fg:x="5244" fg:w="11"/><text x="16.7328%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (11 samples, 0.03%)</title><rect x="16.4828%" y="389" width="0.0346%" height="15" fill="rgb(230,182,32)" fg:x="5244" fg:w="11"/><text x="16.7328%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (11 samples, 0.03%)</title><rect x="16.4828%" y="373" width="0.0346%" height="15" fill="rgb(242,56,43)" fg:x="5244" fg:w="11"/><text x="16.7328%" y="383.50"></text></g><g><title>&lt;briolette_sim::TransactionCoin as core::clone::Clone&gt;::clone (451 samples, 1.42%)</title><rect x="15.1029%" y="645" width="1.4176%" height="15" fill="rgb(233,99,24)" fg:x="4805" fg:w="451"/><text x="15.3529%" y="655.50"></text></g><g><title>&lt;briolette_sim::Coin as core::clone::Clone&gt;::clone (451 samples, 1.42%)</title><rect x="15.1029%" y="629" width="1.4176%" height="15" fill="rgb(234,209,42)" fg:x="4805" fg:w="451"/><text x="15.3529%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (451 samples, 1.42%)</title><rect x="15.1029%" y="613" width="1.4176%" height="15" fill="rgb(227,7,12)" fg:x="4805" fg:w="451"/><text x="15.3529%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (451 samples, 1.42%)</title><rect x="15.1029%" y="597" width="1.4176%" height="15" fill="rgb(245,203,43)" fg:x="4805" fg:w="451"/><text x="15.3529%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (451 samples, 1.42%)</title><rect x="15.1029%" y="581" width="1.4176%" height="15" fill="rgb(238,205,33)" fg:x="4805" fg:w="451"/><text x="15.3529%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (451 samples, 1.42%)</title><rect x="15.1029%" y="565" width="1.4176%" height="15" fill="rgb(231,56,7)" fg:x="4805" fg:w="451"/><text x="15.3529%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (451 samples, 1.42%)</title><rect x="15.1029%" y="549" width="1.4176%" height="15" fill="rgb(244,186,29)" fg:x="4805" fg:w="451"/><text x="15.3529%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (451 samples, 1.42%)</title><rect x="15.1029%" y="533" width="1.4176%" height="15" fill="rgb(234,111,31)" fg:x="4805" fg:w="451"/><text x="15.3529%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (451 samples, 1.42%)</title><rect x="15.1029%" y="517" width="1.4176%" height="15" fill="rgb(241,149,10)" fg:x="4805" fg:w="451"/><text x="15.3529%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (451 samples, 1.42%)</title><rect x="15.1029%" y="501" width="1.4176%" height="15" fill="rgb(249,206,44)" fg:x="4805" fg:w="451"/><text x="15.3529%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (451 samples, 1.42%)</title><rect x="15.1029%" y="485" width="1.4176%" height="15" fill="rgb(251,153,30)" fg:x="4805" fg:w="451"/><text x="15.3529%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (451 samples, 1.42%)</title><rect x="15.1029%" y="469" width="1.4176%" height="15" fill="rgb(239,152,38)" fg:x="4805" fg:w="451"/><text x="15.3529%" y="479.50"></text></g><g><title>alloc::alloc::alloc (451 samples, 1.42%)</title><rect x="15.1029%" y="453" width="1.4176%" height="15" fill="rgb(249,139,47)" fg:x="4805" fg:w="451"/><text x="15.3529%" y="463.50"></text></g><g><title>__rust_alloc (451 samples, 1.42%)</title><rect x="15.1029%" y="437" width="1.4176%" height="15" fill="rgb(244,64,35)" fg:x="4805" fg:w="451"/><text x="15.3529%" y="447.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (451 samples, 1.42%)</title><rect x="15.1029%" y="421" width="1.4176%" height="15" fill="rgb(216,46,15)" fg:x="4805" fg:w="451"/><text x="15.3529%" y="431.50"></text></g><g><title>dhat::Globals::record_block (7 samples, 0.02%)</title><rect x="16.5299%" y="501" width="0.0220%" height="15" fill="rgb(250,74,19)" fg:x="5259" fg:w="7"/><text x="16.7799%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (7 samples, 0.02%)</title><rect x="16.5299%" y="485" width="0.0220%" height="15" fill="rgb(249,42,33)" fg:x="5259" fg:w="7"/><text x="16.7799%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.02%)</title><rect x="16.5299%" y="469" width="0.0220%" height="15" fill="rgb(242,149,17)" fg:x="5259" fg:w="7"/><text x="16.7799%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (7 samples, 0.02%)</title><rect x="16.5299%" y="453" width="0.0220%" height="15" fill="rgb(244,29,21)" fg:x="5259" fg:w="7"/><text x="16.7799%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (7 samples, 0.02%)</title><rect x="16.5299%" y="437" width="0.0220%" height="15" fill="rgb(220,130,37)" fg:x="5259" fg:w="7"/><text x="16.7799%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (7 samples, 0.02%)</title><rect x="16.5299%" y="421" width="0.0220%" height="15" fill="rgb(211,67,2)" fg:x="5259" fg:w="7"/><text x="16.7799%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (7 samples, 0.02%)</title><rect x="16.5299%" y="405" width="0.0220%" height="15" fill="rgb(235,68,52)" fg:x="5259" fg:w="7"/><text x="16.7799%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (7 samples, 0.02%)</title><rect x="16.5299%" y="389" width="0.0220%" height="15" fill="rgb(246,142,3)" fg:x="5259" fg:w="7"/><text x="16.7799%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.02%)</title><rect x="16.5299%" y="373" width="0.0220%" height="15" fill="rgb(241,25,7)" fg:x="5259" fg:w="7"/><text x="16.7799%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (18 samples, 0.06%)</title><rect x="16.5205%" y="645" width="0.0566%" height="15" fill="rgb(242,119,39)" fg:x="5256" fg:w="18"/><text x="16.7705%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (18 samples, 0.06%)</title><rect x="16.5205%" y="629" width="0.0566%" height="15" fill="rgb(241,98,45)" fg:x="5256" fg:w="18"/><text x="16.7705%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (18 samples, 0.06%)</title><rect x="16.5205%" y="613" width="0.0566%" height="15" fill="rgb(254,28,30)" fg:x="5256" fg:w="18"/><text x="16.7705%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (18 samples, 0.06%)</title><rect x="16.5205%" y="597" width="0.0566%" height="15" fill="rgb(241,142,54)" fg:x="5256" fg:w="18"/><text x="16.7705%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18 samples, 0.06%)</title><rect x="16.5205%" y="581" width="0.0566%" height="15" fill="rgb(222,85,15)" fg:x="5256" fg:w="18"/><text x="16.7705%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 0.06%)</title><rect x="16.5205%" y="565" width="0.0566%" height="15" fill="rgb(210,85,47)" fg:x="5256" fg:w="18"/><text x="16.7705%" y="575.50"></text></g><g><title>alloc::alloc::alloc (18 samples, 0.06%)</title><rect x="16.5205%" y="549" width="0.0566%" height="15" fill="rgb(224,206,25)" fg:x="5256" fg:w="18"/><text x="16.7705%" y="559.50"></text></g><g><title>__rust_alloc (18 samples, 0.06%)</title><rect x="16.5205%" y="533" width="0.0566%" height="15" fill="rgb(243,201,19)" fg:x="5256" fg:w="18"/><text x="16.7705%" y="543.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (18 samples, 0.06%)</title><rect x="16.5205%" y="517" width="0.0566%" height="15" fill="rgb(236,59,4)" fg:x="5256" fg:w="18"/><text x="16.7705%" y="527.50"></text></g><g><title>dhat::new_backtrace_inner (8 samples, 0.03%)</title><rect x="16.5519%" y="501" width="0.0251%" height="15" fill="rgb(254,179,45)" fg:x="5266" fg:w="8"/><text x="16.8019%" y="511.50"></text></g><g><title>backtrace::backtrace::trace (8 samples, 0.03%)</title><rect x="16.5519%" y="485" width="0.0251%" height="15" fill="rgb(226,14,10)" fg:x="5266" fg:w="8"/><text x="16.8019%" y="495.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (7 samples, 0.02%)</title><rect x="16.5551%" y="469" width="0.0220%" height="15" fill="rgb(244,27,41)" fg:x="5267" fg:w="7"/><text x="16.8051%" y="479.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (7 samples, 0.02%)</title><rect x="16.5551%" y="453" width="0.0220%" height="15" fill="rgb(235,35,32)" fg:x="5267" fg:w="7"/><text x="16.8051%" y="463.50"></text></g><g><title>_Unwind_Backtrace (7 samples, 0.02%)</title><rect x="16.5551%" y="437" width="0.0220%" height="15" fill="rgb(218,68,31)" fg:x="5267" fg:w="7"/><text x="16.8051%" y="447.50"></text></g><g><title>backtrace::backtrace::libunwind::trace::trace_fn (7 samples, 0.02%)</title><rect x="16.5551%" y="421" width="0.0220%" height="15" fill="rgb(207,120,37)" fg:x="5267" fg:w="7"/><text x="16.8051%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (7 samples, 0.02%)</title><rect x="16.5551%" y="405" width="0.0220%" height="15" fill="rgb(227,98,0)" fg:x="5267" fg:w="7"/><text x="16.8051%" y="415.50"></text></g><g><title>dhat::new_backtrace_inner::{{closure}} (6 samples, 0.02%)</title><rect x="16.5582%" y="389" width="0.0189%" height="15" fill="rgb(207,7,3)" fg:x="5268" fg:w="6"/><text x="16.8082%" y="399.50"></text></g><g><title>&lt;briolette_sim::TransactData as core::clone::Clone&gt;::clone (494 samples, 1.55%)</title><rect x="15.1029%" y="725" width="1.5527%" height="15" fill="rgb(206,98,19)" fg:x="4805" fg:w="494"/><text x="15.3529%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (494 samples, 1.55%)</title><rect x="15.1029%" y="709" width="1.5527%" height="15" fill="rgb(217,5,26)" fg:x="4805" fg:w="494"/><text x="15.3529%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (494 samples, 1.55%)</title><rect x="15.1029%" y="693" width="1.5527%" height="15" fill="rgb(235,190,38)" fg:x="4805" fg:w="494"/><text x="15.3529%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (494 samples, 1.55%)</title><rect x="15.1029%" y="677" width="1.5527%" height="15" fill="rgb(247,86,24)" fg:x="4805" fg:w="494"/><text x="15.3529%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (494 samples, 1.55%)</title><rect x="15.1029%" y="661" width="1.5527%" height="15" fill="rgb(205,101,16)" fg:x="4805" fg:w="494"/><text x="15.3529%" y="671.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (25 samples, 0.08%)</title><rect x="16.5771%" y="645" width="0.0786%" height="15" fill="rgb(246,168,33)" fg:x="5274" fg:w="25"/><text x="16.8271%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.05%)</title><rect x="16.7971%" y="325" width="0.0471%" height="15" fill="rgb(231,114,1)" fg:x="5344" fg:w="15"/><text x="17.0471%" y="335.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::dealloc (4 samples, 0.01%)</title><rect x="16.8443%" y="245" width="0.0126%" height="15" fill="rgb(207,184,53)" fg:x="5359" fg:w="4"/><text x="17.0943%" y="255.50"></text></g><g><title>dhat::IgnoreAllocs::new (4 samples, 0.01%)</title><rect x="16.8443%" y="229" width="0.0126%" height="15" fill="rgb(224,95,51)" fg:x="5359" fg:w="4"/><text x="17.0943%" y="239.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.01%)</title><rect x="16.8443%" y="213" width="0.0126%" height="15" fill="rgb(212,188,45)" fg:x="5359" fg:w="4"/><text x="17.0943%" y="223.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.01%)</title><rect x="16.8443%" y="197" width="0.0126%" height="15" fill="rgb(223,154,38)" fg:x="5359" fg:w="4"/><text x="17.0943%" y="207.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4 samples, 0.01%)</title><rect x="16.8443%" y="181" width="0.0126%" height="15" fill="rgb(251,22,52)" fg:x="5359" fg:w="4"/><text x="17.0943%" y="191.50"></text></g><g><title>dhat::IGNORE_ALLOCS::{{constant}}::{{closure}} (4 samples, 0.01%)</title><rect x="16.8443%" y="165" width="0.0126%" height="15" fill="rgb(229,209,22)" fg:x="5359" fg:w="4"/><text x="17.0943%" y="175.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (4 samples, 0.01%)</title><rect x="16.8443%" y="149" width="0.0126%" height="15" fill="rgb(234,138,34)" fg:x="5359" fg:w="4"/><text x="17.0943%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;dhat::Backtrace&gt; (20 samples, 0.06%)</title><rect x="16.7971%" y="373" width="0.0629%" height="15" fill="rgb(212,95,11)" fg:x="5344" fg:w="20"/><text x="17.0471%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;backtrace::capture::Backtrace&gt; (20 samples, 0.06%)</title><rect x="16.7971%" y="357" width="0.0629%" height="15" fill="rgb(240,179,47)" fg:x="5344" fg:w="20"/><text x="17.0471%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;backtrace::capture::BacktraceFrame&gt;&gt; (20 samples, 0.06%)</title><rect x="16.7971%" y="341" width="0.0629%" height="15" fill="rgb(240,163,11)" fg:x="5344" fg:w="20"/><text x="17.0471%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;backtrace::capture::BacktraceFrame&gt;&gt; (5 samples, 0.02%)</title><rect x="16.8443%" y="325" width="0.0157%" height="15" fill="rgb(236,37,12)" fg:x="5359" fg:w="5"/><text x="17.0943%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="16.8443%" y="309" width="0.0157%" height="15" fill="rgb(232,164,16)" fg:x="5359" fg:w="5"/><text x="17.0943%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (5 samples, 0.02%)</title><rect x="16.8443%" y="293" width="0.0157%" height="15" fill="rgb(244,205,15)" fg:x="5359" fg:w="5"/><text x="17.0943%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.02%)</title><rect x="16.8443%" y="277" width="0.0157%" height="15" fill="rgb(223,117,47)" fg:x="5359" fg:w="5"/><text x="17.0943%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.02%)</title><rect x="16.8443%" y="261" width="0.0157%" height="15" fill="rgb(244,107,35)" fg:x="5359" fg:w="5"/><text x="17.0943%" y="271.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (92 samples, 0.29%)</title><rect x="16.6745%" y="389" width="0.2892%" height="15" fill="rgb(205,140,8)" fg:x="5305" fg:w="92"/><text x="16.9245%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (33 samples, 0.10%)</title><rect x="16.8600%" y="373" width="0.1037%" height="15" fill="rgb(228,84,46)" fg:x="5364" fg:w="33"/><text x="17.1100%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (33 samples, 0.10%)</title><rect x="16.8600%" y="357" width="0.1037%" height="15" fill="rgb(254,188,9)" fg:x="5364" fg:w="33"/><text x="17.1100%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (33 samples, 0.10%)</title><rect x="16.8600%" y="341" width="0.1037%" height="15" fill="rgb(206,112,54)" fg:x="5364" fg:w="33"/><text x="17.1100%" y="351.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (33 samples, 0.10%)</title><rect x="16.8600%" y="325" width="0.1037%" height="15" fill="rgb(216,84,49)" fg:x="5364" fg:w="33"/><text x="17.1100%" y="335.50"></text></g><g><title>&lt;dhat::Backtrace as core::cmp::PartialEq&gt;::eq (33 samples, 0.10%)</title><rect x="16.8600%" y="309" width="0.1037%" height="15" fill="rgb(214,194,35)" fg:x="5364" fg:w="33"/><text x="17.1100%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (33 samples, 0.10%)</title><rect x="16.8600%" y="293" width="0.1037%" height="15" fill="rgb(249,28,3)" fg:x="5364" fg:w="33"/><text x="17.1100%" y="303.50"></text></g><g><title>&lt;dhat::Backtrace as core::cmp::PartialEq&gt;::eq::{{closure}} (33 samples, 0.10%)</title><rect x="16.8600%" y="277" width="0.1037%" height="15" fill="rgb(222,56,52)" fg:x="5364" fg:w="33"/><text x="17.1100%" y="287.50"></text></g><g><title>backtrace::capture::BacktraceFrame::ip (19 samples, 0.06%)</title><rect x="16.9040%" y="261" width="0.0597%" height="15" fill="rgb(245,217,50)" fg:x="5378" fg:w="19"/><text x="17.1540%" y="271.50"></text></g><g><title>backtrace::capture::Frame::ip (19 samples, 0.06%)</title><rect x="16.9040%" y="245" width="0.0597%" height="15" fill="rgb(213,201,24)" fg:x="5378" fg:w="19"/><text x="17.1540%" y="255.50"></text></g><g><title>backtrace::backtrace::Frame::ip (19 samples, 0.06%)</title><rect x="16.9040%" y="229" width="0.0597%" height="15" fill="rgb(248,116,28)" fg:x="5378" fg:w="19"/><text x="17.1540%" y="239.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::ip (19 samples, 0.06%)</title><rect x="16.9040%" y="213" width="0.0597%" height="15" fill="rgb(219,72,43)" fg:x="5378" fg:w="19"/><text x="17.1540%" y="223.50"></text></g><g><title>dhat::Globals::get_pp_info (96 samples, 0.30%)</title><rect x="16.6745%" y="421" width="0.3017%" height="15" fill="rgb(209,138,14)" fg:x="5305" fg:w="96"/><text x="16.9245%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (96 samples, 0.30%)</title><rect x="16.6745%" y="405" width="0.3017%" height="15" fill="rgb(222,18,33)" fg:x="5305" fg:w="96"/><text x="16.9245%" y="415.50"></text></g><g><title>std::collections::hash::map::map_entry (4 samples, 0.01%)</title><rect x="16.9637%" y="389" width="0.0126%" height="15" fill="rgb(213,199,7)" fg:x="5397" fg:w="4"/><text x="17.2137%" y="399.50"></text></g><g><title>dhat::Globals::record_block (216 samples, 0.68%)</title><rect x="16.9763%" y="421" width="0.6789%" height="15" fill="rgb(250,110,10)" fg:x="5401" fg:w="216"/><text x="17.2263%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (216 samples, 0.68%)</title><rect x="16.9763%" y="405" width="0.6789%" height="15" fill="rgb(248,123,6)" fg:x="5401" fg:w="216"/><text x="17.2263%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (216 samples, 0.68%)</title><rect x="16.9763%" y="389" width="0.6789%" height="15" fill="rgb(206,91,31)" fg:x="5401" fg:w="216"/><text x="17.2263%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (216 samples, 0.68%)</title><rect x="16.9763%" y="373" width="0.6789%" height="15" fill="rgb(211,154,13)" fg:x="5401" fg:w="216"/><text x="17.2263%" y="383.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (216 samples, 0.68%)</title><rect x="16.9763%" y="357" width="0.6789%" height="15" fill="rgb(225,148,7)" fg:x="5401" fg:w="216"/><text x="17.2263%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (216 samples, 0.68%)</title><rect x="16.9763%" y="341" width="0.6789%" height="15" fill="rgb(220,160,43)" fg:x="5401" fg:w="216"/><text x="17.2263%" y="351.50"></text></g><g><title>core::ptr::write (216 samples, 0.68%)</title><rect x="16.9763%" y="325" width="0.6789%" height="15" fill="rgb(213,52,39)" fg:x="5401" fg:w="216"/><text x="17.2263%" y="335.50"></text></g><g><title>Unknown (15 samples, 0.05%)</title><rect x="17.7778%" y="325" width="0.0471%" height="15" fill="rgb(243,137,7)" fg:x="5656" fg:w="15"/><text x="18.0278%" y="335.50"></text></g><g><title>_Unwind_Find_FDE (56 samples, 0.18%)</title><rect x="17.7778%" y="341" width="0.1760%" height="15" fill="rgb(230,79,13)" fg:x="5656" fg:w="56"/><text x="18.0278%" y="351.50"></text></g><g><title>__GI__dl_find_object (41 samples, 0.13%)</title><rect x="17.8249%" y="325" width="0.1289%" height="15" fill="rgb(247,105,23)" fg:x="5671" fg:w="41"/><text x="18.0749%" y="335.50"></text></g><g><title>Unknown (27 samples, 0.08%)</title><rect x="18.0827%" y="213" width="0.0849%" height="15" fill="rgb(223,179,41)" fg:x="5753" fg:w="27"/><text x="18.3327%" y="223.50"></text></g><g><title>_Unwind_FindEnclosingFunction (56 samples, 0.18%)</title><rect x="18.0827%" y="245" width="0.1760%" height="15" fill="rgb(218,9,34)" fg:x="5753" fg:w="56"/><text x="18.3327%" y="255.50"></text></g><g><title>_Unwind_Find_FDE (56 samples, 0.18%)</title><rect x="18.0827%" y="229" width="0.1760%" height="15" fill="rgb(222,106,8)" fg:x="5753" fg:w="56"/><text x="18.3327%" y="239.50"></text></g><g><title>__GI__dl_find_object (29 samples, 0.09%)</title><rect x="18.1675%" y="213" width="0.0912%" height="15" fill="rgb(211,220,0)" fg:x="5780" fg:w="29"/><text x="18.4175%" y="223.50"></text></g><g><title>&lt;backtrace::backtrace::Frame as core::clone::Clone&gt;::clone (110 samples, 0.35%)</title><rect x="18.0324%" y="293" width="0.3457%" height="15" fill="rgb(229,52,16)" fg:x="5737" fg:w="110"/><text x="18.2824%" y="303.50"></text></g><g><title>&lt;backtrace::backtrace::libunwind::Frame as core::clone::Clone&gt;::clone (94 samples, 0.30%)</title><rect x="18.0827%" y="277" width="0.2955%" height="15" fill="rgb(212,155,18)" fg:x="5753" fg:w="94"/><text x="18.3327%" y="287.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::symbol_address (94 samples, 0.30%)</title><rect x="18.0827%" y="261" width="0.2955%" height="15" fill="rgb(242,21,14)" fg:x="5753" fg:w="94"/><text x="18.3327%" y="271.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::ip (38 samples, 0.12%)</title><rect x="18.2587%" y="245" width="0.1194%" height="15" fill="rgb(222,19,48)" fg:x="5809" fg:w="38"/><text x="18.5087%" y="255.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::realloc (10 samples, 0.03%)</title><rect x="18.4693%" y="165" width="0.0314%" height="15" fill="rgb(232,45,27)" fg:x="5876" fg:w="10"/><text x="18.7193%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (13 samples, 0.04%)</title><rect x="18.4693%" y="213" width="0.0409%" height="15" fill="rgb(249,103,42)" fg:x="5876" fg:w="13"/><text x="18.7193%" y="223.50"></text></g><g><title>alloc::alloc::Global::grow_impl (13 samples, 0.04%)</title><rect x="18.4693%" y="197" width="0.0409%" height="15" fill="rgb(246,81,33)" fg:x="5876" fg:w="13"/><text x="18.7193%" y="207.50"></text></g><g><title>alloc::alloc::realloc (13 samples, 0.04%)</title><rect x="18.4693%" y="181" width="0.0409%" height="15" fill="rgb(252,33,42)" fg:x="5876" fg:w="13"/><text x="18.7193%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (47 samples, 0.15%)</title><rect x="18.3781%" y="293" width="0.1477%" height="15" fill="rgb(209,212,41)" fg:x="5847" fg:w="47"/><text x="18.6281%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (47 samples, 0.15%)</title><rect x="18.3781%" y="277" width="0.1477%" height="15" fill="rgb(207,154,6)" fg:x="5847" fg:w="47"/><text x="18.6281%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (28 samples, 0.09%)</title><rect x="18.4378%" y="261" width="0.0880%" height="15" fill="rgb(223,64,47)" fg:x="5866" fg:w="28"/><text x="18.6878%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (28 samples, 0.09%)</title><rect x="18.4378%" y="245" width="0.0880%" height="15" fill="rgb(211,161,38)" fg:x="5866" fg:w="28"/><text x="18.6878%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (27 samples, 0.08%)</title><rect x="18.4410%" y="229" width="0.0849%" height="15" fill="rgb(219,138,40)" fg:x="5867" fg:w="27"/><text x="18.6910%" y="239.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (5 samples, 0.02%)</title><rect x="18.5101%" y="213" width="0.0157%" height="15" fill="rgb(241,228,46)" fg:x="5889" fg:w="5"/><text x="18.7601%" y="223.50"></text></g><g><title>backtrace::backtrace::Frame::ip (7 samples, 0.02%)</title><rect x="18.5259%" y="293" width="0.0220%" height="15" fill="rgb(223,209,38)" fg:x="5894" fg:w="7"/><text x="18.7759%" y="303.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::ip (7 samples, 0.02%)</title><rect x="18.5259%" y="277" width="0.0220%" height="15" fill="rgb(236,164,45)" fg:x="5894" fg:w="7"/><text x="18.7759%" y="287.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (429 samples, 1.35%)</title><rect x="17.7746%" y="389" width="1.3484%" height="15" fill="rgb(231,15,5)" fg:x="5655" fg:w="429"/><text x="18.0246%" y="399.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (429 samples, 1.35%)</title><rect x="17.7746%" y="373" width="1.3484%" height="15" fill="rgb(252,35,15)" fg:x="5655" fg:w="429"/><text x="18.0246%" y="383.50"></text></g><g><title>_Unwind_Backtrace (429 samples, 1.35%)</title><rect x="17.7746%" y="357" width="1.3484%" height="15" fill="rgb(248,181,18)" fg:x="5655" fg:w="429"/><text x="18.0246%" y="367.50"></text></g><g><title>backtrace::backtrace::libunwind::trace::trace_fn (372 samples, 1.17%)</title><rect x="17.9538%" y="341" width="1.1693%" height="15" fill="rgb(233,39,42)" fg:x="5712" fg:w="372"/><text x="18.2038%" y="351.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (360 samples, 1.13%)</title><rect x="17.9915%" y="325" width="1.1315%" height="15" fill="rgb(238,110,33)" fg:x="5724" fg:w="360"/><text x="18.2415%" y="335.50"></text></g><g><title>dhat::new_backtrace_inner::{{closure}} (347 samples, 1.09%)</title><rect x="18.0324%" y="309" width="1.0907%" height="15" fill="rgb(233,195,10)" fg:x="5737" fg:w="347"/><text x="18.2824%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (183 samples, 0.58%)</title><rect x="18.5479%" y="293" width="0.5752%" height="15" fill="rgb(254,105,3)" fg:x="5901" fg:w="183"/><text x="18.7979%" y="303.50"></text></g><g><title>dhat::new_backtrace_inner (473 samples, 1.49%)</title><rect x="17.6583%" y="421" width="1.4867%" height="15" fill="rgb(221,225,9)" fg:x="5618" fg:w="473"/><text x="17.9083%" y="431.50"></text></g><g><title>backtrace::backtrace::trace (455 samples, 1.43%)</title><rect x="17.7149%" y="405" width="1.4301%" height="15" fill="rgb(224,227,45)" fg:x="5636" fg:w="455"/><text x="17.9649%" y="415.50"></text></g><g><title>backtrace::lock::lock (7 samples, 0.02%)</title><rect x="19.1231%" y="389" width="0.0220%" height="15" fill="rgb(229,198,43)" fg:x="6084" fg:w="7"/><text x="19.3731%" y="399.50"></text></g><g><title>mintex::Mutex&lt;T&gt;::lock (32 samples, 0.10%)</title><rect x="19.1451%" y="421" width="0.1006%" height="15" fill="rgb(206,209,35)" fg:x="6091" fg:w="32"/><text x="19.3951%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (32 samples, 0.10%)</title><rect x="19.1451%" y="405" width="0.1006%" height="15" fill="rgb(245,195,53)" fg:x="6091" fg:w="32"/><text x="19.3951%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (32 samples, 0.10%)</title><rect x="19.1451%" y="389" width="0.1006%" height="15" fill="rgb(240,92,26)" fg:x="6091" fg:w="32"/><text x="19.3951%" y="399.50"></text></g><g><title>&lt;briolette_sim::Coin as core::clone::Clone&gt;::clone (827 samples, 2.60%)</title><rect x="16.6557%" y="645" width="2.5994%" height="15" fill="rgb(207,40,23)" fg:x="5299" fg:w="827"/><text x="16.9057%" y="655.50">&lt;b..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (827 samples, 2.60%)</title><rect x="16.6557%" y="629" width="2.5994%" height="15" fill="rgb(223,111,35)" fg:x="5299" fg:w="827"/><text x="16.9057%" y="639.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (827 samples, 2.60%)</title><rect x="16.6557%" y="613" width="2.5994%" height="15" fill="rgb(229,147,28)" fg:x="5299" fg:w="827"/><text x="16.9057%" y="623.50">al..</text></g><g><title>alloc::slice::hack::to_vec (827 samples, 2.60%)</title><rect x="16.6557%" y="597" width="2.5994%" height="15" fill="rgb(211,29,28)" fg:x="5299" fg:w="827"/><text x="16.9057%" y="607.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (827 samples, 2.60%)</title><rect x="16.6557%" y="581" width="2.5994%" height="15" fill="rgb(228,72,33)" fg:x="5299" fg:w="827"/><text x="16.9057%" y="591.50">&lt;T..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (827 samples, 2.60%)</title><rect x="16.6557%" y="565" width="2.5994%" height="15" fill="rgb(205,214,31)" fg:x="5299" fg:w="827"/><text x="16.9057%" y="575.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (827 samples, 2.60%)</title><rect x="16.6557%" y="549" width="2.5994%" height="15" fill="rgb(224,111,15)" fg:x="5299" fg:w="827"/><text x="16.9057%" y="559.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (827 samples, 2.60%)</title><rect x="16.6557%" y="533" width="2.5994%" height="15" fill="rgb(253,21,26)" fg:x="5299" fg:w="827"/><text x="16.9057%" y="543.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (827 samples, 2.60%)</title><rect x="16.6557%" y="517" width="2.5994%" height="15" fill="rgb(245,139,43)" fg:x="5299" fg:w="827"/><text x="16.9057%" y="527.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (827 samples, 2.60%)</title><rect x="16.6557%" y="501" width="2.5994%" height="15" fill="rgb(252,170,7)" fg:x="5299" fg:w="827"/><text x="16.9057%" y="511.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (827 samples, 2.60%)</title><rect x="16.6557%" y="485" width="2.5994%" height="15" fill="rgb(231,118,14)" fg:x="5299" fg:w="827"/><text x="16.9057%" y="495.50">al..</text></g><g><title>alloc::alloc::alloc (827 samples, 2.60%)</title><rect x="16.6557%" y="469" width="2.5994%" height="15" fill="rgb(238,83,0)" fg:x="5299" fg:w="827"/><text x="16.9057%" y="479.50">al..</text></g><g><title>__rust_alloc (827 samples, 2.60%)</title><rect x="16.6557%" y="453" width="2.5994%" height="15" fill="rgb(221,39,39)" fg:x="5299" fg:w="827"/><text x="16.9057%" y="463.50">__..</text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (823 samples, 2.59%)</title><rect x="16.6682%" y="437" width="2.5868%" height="15" fill="rgb(222,119,46)" fg:x="5303" fg:w="823"/><text x="16.9182%" y="447.50">&lt;d..</text></g><g><title>&lt;briolette_sim::EventData as core::clone::Clone&gt;::clone (1,378 samples, 4.33%)</title><rect x="15.0747%" y="741" width="4.3313%" height="15" fill="rgb(222,165,49)" fg:x="4796" fg:w="1378"/><text x="15.3247%" y="751.50">&lt;brio..</text></g><g><title>&lt;briolette_sim::ValidateData as core::clone::Clone&gt;::clone (875 samples, 2.75%)</title><rect x="16.6557%" y="725" width="2.7503%" height="15" fill="rgb(219,113,52)" fg:x="5299" fg:w="875"/><text x="16.9057%" y="735.50">&lt;b..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (875 samples, 2.75%)</title><rect x="16.6557%" y="709" width="2.7503%" height="15" fill="rgb(214,7,15)" fg:x="5299" fg:w="875"/><text x="16.9057%" y="719.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (875 samples, 2.75%)</title><rect x="16.6557%" y="693" width="2.7503%" height="15" fill="rgb(235,32,4)" fg:x="5299" fg:w="875"/><text x="16.9057%" y="703.50">al..</text></g><g><title>alloc::slice::hack::to_vec (875 samples, 2.75%)</title><rect x="16.6557%" y="677" width="2.7503%" height="15" fill="rgb(238,90,54)" fg:x="5299" fg:w="875"/><text x="16.9057%" y="687.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (875 samples, 2.75%)</title><rect x="16.6557%" y="661" width="2.7503%" height="15" fill="rgb(213,208,19)" fg:x="5299" fg:w="875"/><text x="16.9057%" y="671.50">&lt;T..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (48 samples, 0.15%)</title><rect x="19.2551%" y="645" width="0.1509%" height="15" fill="rgb(233,156,4)" fg:x="6126" fg:w="48"/><text x="19.5051%" y="655.50"></text></g><g><title>&lt;absim::EventQueue&lt;S&gt; as absim::Enqueue&lt;S&gt;&gt;::enqueue (1,381 samples, 4.34%)</title><rect x="15.0747%" y="757" width="4.3407%" height="15" fill="rgb(207,194,5)" fg:x="4796" fg:w="1381"/><text x="15.3247%" y="767.50">&lt;absi..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (7 samples, 0.02%)</title><rect x="19.4248%" y="613" width="0.0220%" height="15" fill="rgb(206,111,30)" fg:x="6180" fg:w="7"/><text x="19.6748%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (7 samples, 0.02%)</title><rect x="19.4248%" y="597" width="0.0220%" height="15" fill="rgb(243,70,54)" fg:x="6180" fg:w="7"/><text x="19.6748%" y="607.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::dealloc (4 samples, 0.01%)</title><rect x="19.4562%" y="245" width="0.0126%" height="15" fill="rgb(242,28,8)" fg:x="6190" fg:w="4"/><text x="19.7062%" y="255.50"></text></g><g><title>dhat::IgnoreAllocs::new (4 samples, 0.01%)</title><rect x="19.4562%" y="229" width="0.0126%" height="15" fill="rgb(219,106,18)" fg:x="6190" fg:w="4"/><text x="19.7062%" y="239.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.01%)</title><rect x="19.4562%" y="213" width="0.0126%" height="15" fill="rgb(244,222,10)" fg:x="6190" fg:w="4"/><text x="19.7062%" y="223.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.01%)</title><rect x="19.4562%" y="197" width="0.0126%" height="15" fill="rgb(236,179,52)" fg:x="6190" fg:w="4"/><text x="19.7062%" y="207.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4 samples, 0.01%)</title><rect x="19.4562%" y="181" width="0.0126%" height="15" fill="rgb(213,23,39)" fg:x="6190" fg:w="4"/><text x="19.7062%" y="191.50"></text></g><g><title>dhat::IGNORE_ALLOCS::{{constant}}::{{closure}} (4 samples, 0.01%)</title><rect x="19.4562%" y="165" width="0.0126%" height="15" fill="rgb(238,48,10)" fg:x="6190" fg:w="4"/><text x="19.7062%" y="175.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (4 samples, 0.01%)</title><rect x="19.4562%" y="149" width="0.0126%" height="15" fill="rgb(251,196,23)" fg:x="6190" fg:w="4"/><text x="19.7062%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;dhat::Backtrace&gt; (8 samples, 0.03%)</title><rect x="19.4468%" y="373" width="0.0251%" height="15" fill="rgb(250,152,24)" fg:x="6187" fg:w="8"/><text x="19.6968%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;backtrace::capture::Backtrace&gt; (8 samples, 0.03%)</title><rect x="19.4468%" y="357" width="0.0251%" height="15" fill="rgb(209,150,17)" fg:x="6187" fg:w="8"/><text x="19.6968%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;backtrace::capture::BacktraceFrame&gt;&gt; (8 samples, 0.03%)</title><rect x="19.4468%" y="341" width="0.0251%" height="15" fill="rgb(234,202,34)" fg:x="6187" fg:w="8"/><text x="19.6968%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;backtrace::capture::BacktraceFrame&gt;&gt; (5 samples, 0.02%)</title><rect x="19.4562%" y="325" width="0.0157%" height="15" fill="rgb(253,148,53)" fg:x="6190" fg:w="5"/><text x="19.7062%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="19.4562%" y="309" width="0.0157%" height="15" fill="rgb(218,129,16)" fg:x="6190" fg:w="5"/><text x="19.7062%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (5 samples, 0.02%)</title><rect x="19.4562%" y="293" width="0.0157%" height="15" fill="rgb(216,85,19)" fg:x="6190" fg:w="5"/><text x="19.7062%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.02%)</title><rect x="19.4562%" y="277" width="0.0157%" height="15" fill="rgb(235,228,7)" fg:x="6190" fg:w="5"/><text x="19.7062%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.02%)</title><rect x="19.4562%" y="261" width="0.0157%" height="15" fill="rgb(245,175,0)" fg:x="6190" fg:w="5"/><text x="19.7062%" y="271.50"></text></g><g><title>dhat::Globals::get_pp_info (52 samples, 0.16%)</title><rect x="19.4468%" y="421" width="0.1634%" height="15" fill="rgb(208,168,36)" fg:x="6187" fg:w="52"/><text x="19.6968%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (52 samples, 0.16%)</title><rect x="19.4468%" y="405" width="0.1634%" height="15" fill="rgb(246,171,24)" fg:x="6187" fg:w="52"/><text x="19.6968%" y="415.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (52 samples, 0.16%)</title><rect x="19.4468%" y="389" width="0.1634%" height="15" fill="rgb(215,142,24)" fg:x="6187" fg:w="52"/><text x="19.6968%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (44 samples, 0.14%)</title><rect x="19.4719%" y="373" width="0.1383%" height="15" fill="rgb(250,187,7)" fg:x="6195" fg:w="44"/><text x="19.7219%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (44 samples, 0.14%)</title><rect x="19.4719%" y="357" width="0.1383%" height="15" fill="rgb(228,66,33)" fg:x="6195" fg:w="44"/><text x="19.7219%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (15 samples, 0.05%)</title><rect x="19.5631%" y="341" width="0.0471%" height="15" fill="rgb(234,215,21)" fg:x="6224" fg:w="15"/><text x="19.8131%" y="351.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (15 samples, 0.05%)</title><rect x="19.5631%" y="325" width="0.0471%" height="15" fill="rgb(222,191,20)" fg:x="6224" fg:w="15"/><text x="19.8131%" y="335.50"></text></g><g><title>&lt;dhat::Backtrace as core::cmp::PartialEq&gt;::eq (15 samples, 0.05%)</title><rect x="19.5631%" y="309" width="0.0471%" height="15" fill="rgb(245,79,54)" fg:x="6224" fg:w="15"/><text x="19.8131%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (15 samples, 0.05%)</title><rect x="19.5631%" y="293" width="0.0471%" height="15" fill="rgb(240,10,37)" fg:x="6224" fg:w="15"/><text x="19.8131%" y="303.50"></text></g><g><title>&lt;dhat::Backtrace as core::cmp::PartialEq&gt;::eq::{{closure}} (15 samples, 0.05%)</title><rect x="19.5631%" y="277" width="0.0471%" height="15" fill="rgb(214,192,32)" fg:x="6224" fg:w="15"/><text x="19.8131%" y="287.50"></text></g><g><title>backtrace::capture::BacktraceFrame::ip (11 samples, 0.03%)</title><rect x="19.5757%" y="261" width="0.0346%" height="15" fill="rgb(209,36,54)" fg:x="6228" fg:w="11"/><text x="19.8257%" y="271.50"></text></g><g><title>backtrace::capture::Frame::ip (11 samples, 0.03%)</title><rect x="19.5757%" y="245" width="0.0346%" height="15" fill="rgb(220,10,11)" fg:x="6228" fg:w="11"/><text x="19.8257%" y="255.50"></text></g><g><title>backtrace::backtrace::Frame::ip (11 samples, 0.03%)</title><rect x="19.5757%" y="229" width="0.0346%" height="15" fill="rgb(221,106,17)" fg:x="6228" fg:w="11"/><text x="19.8257%" y="239.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::ip (11 samples, 0.03%)</title><rect x="19.5757%" y="213" width="0.0346%" height="15" fill="rgb(251,142,44)" fg:x="6228" fg:w="11"/><text x="19.8257%" y="223.50"></text></g><g><title>dhat::Globals::record_block (72 samples, 0.23%)</title><rect x="19.6102%" y="421" width="0.2263%" height="15" fill="rgb(238,13,15)" fg:x="6239" fg:w="72"/><text x="19.8602%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (72 samples, 0.23%)</title><rect x="19.6102%" y="405" width="0.2263%" height="15" fill="rgb(208,107,27)" fg:x="6239" fg:w="72"/><text x="19.8602%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (72 samples, 0.23%)</title><rect x="19.6102%" y="389" width="0.2263%" height="15" fill="rgb(205,136,37)" fg:x="6239" fg:w="72"/><text x="19.8602%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (72 samples, 0.23%)</title><rect x="19.6102%" y="373" width="0.2263%" height="15" fill="rgb(250,205,27)" fg:x="6239" fg:w="72"/><text x="19.8602%" y="383.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (72 samples, 0.23%)</title><rect x="19.6102%" y="357" width="0.2263%" height="15" fill="rgb(210,80,43)" fg:x="6239" fg:w="72"/><text x="19.8602%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (72 samples, 0.23%)</title><rect x="19.6102%" y="341" width="0.2263%" height="15" fill="rgb(247,160,36)" fg:x="6239" fg:w="72"/><text x="19.8602%" y="351.50"></text></g><g><title>core::ptr::write (72 samples, 0.23%)</title><rect x="19.6102%" y="325" width="0.2263%" height="15" fill="rgb(234,13,49)" fg:x="6239" fg:w="72"/><text x="19.8602%" y="335.50"></text></g><g><title>_dl_find_object_to_external (20 samples, 0.06%)</title><rect x="19.9403%" y="309" width="0.0629%" height="15" fill="rgb(234,122,0)" fg:x="6344" fg:w="20"/><text x="20.1903%" y="319.50"></text></g><g><title>_Unwind_Find_FDE (30 samples, 0.09%)</title><rect x="19.9340%" y="341" width="0.0943%" height="15" fill="rgb(207,146,38)" fg:x="6342" fg:w="30"/><text x="20.1840%" y="351.50"></text></g><g><title>__GI__dl_find_object (28 samples, 0.09%)</title><rect x="19.9403%" y="325" width="0.0880%" height="15" fill="rgb(207,177,25)" fg:x="6344" fg:w="28"/><text x="20.1903%" y="335.50"></text></g><g><title>_dlfo_lookup (8 samples, 0.03%)</title><rect x="20.0031%" y="309" width="0.0251%" height="15" fill="rgb(211,178,42)" fg:x="6364" fg:w="8"/><text x="20.2531%" y="319.50"></text></g><g><title>Unknown (5 samples, 0.02%)</title><rect x="20.1729%" y="213" width="0.0157%" height="15" fill="rgb(230,69,54)" fg:x="6418" fg:w="5"/><text x="20.4229%" y="223.50"></text></g><g><title>&lt;backtrace::backtrace::Frame as core::clone::Clone&gt;::clone (48 samples, 0.15%)</title><rect x="20.0943%" y="293" width="0.1509%" height="15" fill="rgb(214,135,41)" fg:x="6393" fg:w="48"/><text x="20.3443%" y="303.50"></text></g><g><title>&lt;backtrace::backtrace::libunwind::Frame as core::clone::Clone&gt;::clone (48 samples, 0.15%)</title><rect x="20.0943%" y="277" width="0.1509%" height="15" fill="rgb(237,67,25)" fg:x="6393" fg:w="48"/><text x="20.3443%" y="287.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::symbol_address (48 samples, 0.15%)</title><rect x="20.0943%" y="261" width="0.1509%" height="15" fill="rgb(222,189,50)" fg:x="6393" fg:w="48"/><text x="20.3443%" y="271.50"></text></g><g><title>_Unwind_FindEnclosingFunction (23 samples, 0.07%)</title><rect x="20.1729%" y="245" width="0.0723%" height="15" fill="rgb(245,148,34)" fg:x="6418" fg:w="23"/><text x="20.4229%" y="255.50"></text></g><g><title>_Unwind_Find_FDE (23 samples, 0.07%)</title><rect x="20.1729%" y="229" width="0.0723%" height="15" fill="rgb(222,29,6)" fg:x="6418" fg:w="23"/><text x="20.4229%" y="239.50"></text></g><g><title>__GI__dl_find_object (18 samples, 0.06%)</title><rect x="20.1886%" y="213" width="0.0566%" height="15" fill="rgb(221,189,43)" fg:x="6423" fg:w="18"/><text x="20.4386%" y="223.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (8 samples, 0.03%)</title><rect x="20.2452%" y="229" width="0.0251%" height="15" fill="rgb(207,36,27)" fg:x="6441" fg:w="8"/><text x="20.4952%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 0.02%)</title><rect x="20.2860%" y="213" width="0.0189%" height="15" fill="rgb(217,90,24)" fg:x="6454" fg:w="6"/><text x="20.5360%" y="223.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 0.02%)</title><rect x="20.2860%" y="197" width="0.0189%" height="15" fill="rgb(224,66,35)" fg:x="6454" fg:w="6"/><text x="20.5360%" y="207.50"></text></g><g><title>alloc::alloc::realloc (6 samples, 0.02%)</title><rect x="20.2860%" y="181" width="0.0189%" height="15" fill="rgb(221,13,50)" fg:x="6454" fg:w="6"/><text x="20.5360%" y="191.50"></text></g><g><title>__rust_realloc (4 samples, 0.01%)</title><rect x="20.2923%" y="165" width="0.0126%" height="15" fill="rgb(236,68,49)" fg:x="6456" fg:w="4"/><text x="20.5423%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (21 samples, 0.07%)</title><rect x="20.2452%" y="293" width="0.0660%" height="15" fill="rgb(229,146,28)" fg:x="6441" fg:w="21"/><text x="20.4952%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (21 samples, 0.07%)</title><rect x="20.2452%" y="277" width="0.0660%" height="15" fill="rgb(225,31,38)" fg:x="6441" fg:w="21"/><text x="20.4952%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (21 samples, 0.07%)</title><rect x="20.2452%" y="261" width="0.0660%" height="15" fill="rgb(250,208,3)" fg:x="6441" fg:w="21"/><text x="20.4952%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (21 samples, 0.07%)</title><rect x="20.2452%" y="245" width="0.0660%" height="15" fill="rgb(246,54,23)" fg:x="6441" fg:w="21"/><text x="20.4952%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (13 samples, 0.04%)</title><rect x="20.2703%" y="229" width="0.0409%" height="15" fill="rgb(243,76,11)" fg:x="6449" fg:w="13"/><text x="20.5203%" y="239.50"></text></g><g><title>backtrace::backtrace::Frame::ip (6 samples, 0.02%)</title><rect x="20.3112%" y="293" width="0.0189%" height="15" fill="rgb(245,21,50)" fg:x="6462" fg:w="6"/><text x="20.5612%" y="303.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::ip (6 samples, 0.02%)</title><rect x="20.3112%" y="277" width="0.0189%" height="15" fill="rgb(228,9,43)" fg:x="6462" fg:w="6"/><text x="20.5612%" y="287.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (227 samples, 0.71%)</title><rect x="19.9340%" y="389" width="0.7135%" height="15" fill="rgb(208,100,47)" fg:x="6342" fg:w="227"/><text x="20.1840%" y="399.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (227 samples, 0.71%)</title><rect x="19.9340%" y="373" width="0.7135%" height="15" fill="rgb(232,26,8)" fg:x="6342" fg:w="227"/><text x="20.1840%" y="383.50"></text></g><g><title>_Unwind_Backtrace (227 samples, 0.71%)</title><rect x="19.9340%" y="357" width="0.7135%" height="15" fill="rgb(216,166,38)" fg:x="6342" fg:w="227"/><text x="20.1840%" y="367.50"></text></g><g><title>backtrace::backtrace::libunwind::trace::trace_fn (197 samples, 0.62%)</title><rect x="20.0283%" y="341" width="0.6192%" height="15" fill="rgb(251,202,51)" fg:x="6372" fg:w="197"/><text x="20.2783%" y="351.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (197 samples, 0.62%)</title><rect x="20.0283%" y="325" width="0.6192%" height="15" fill="rgb(254,216,34)" fg:x="6372" fg:w="197"/><text x="20.2783%" y="335.50"></text></g><g><title>dhat::new_backtrace_inner::{{closure}} (182 samples, 0.57%)</title><rect x="20.0754%" y="309" width="0.5721%" height="15" fill="rgb(251,32,27)" fg:x="6387" fg:w="182"/><text x="20.3254%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (101 samples, 0.32%)</title><rect x="20.3300%" y="293" width="0.3175%" height="15" fill="rgb(208,127,28)" fg:x="6468" fg:w="101"/><text x="20.5800%" y="303.50"></text></g><g><title>dhat::new_backtrace_inner (259 samples, 0.81%)</title><rect x="19.8460%" y="421" width="0.8141%" height="15" fill="rgb(224,137,22)" fg:x="6314" fg:w="259"/><text x="20.0960%" y="431.50"></text></g><g><title>backtrace::backtrace::trace (240 samples, 0.75%)</title><rect x="19.9057%" y="405" width="0.7544%" height="15" fill="rgb(254,70,32)" fg:x="6333" fg:w="240"/><text x="20.1557%" y="415.50"></text></g><g><title>mintex::Mutex&lt;T&gt;::lock (6 samples, 0.02%)</title><rect x="20.6601%" y="421" width="0.0189%" height="15" fill="rgb(229,75,37)" fg:x="6573" fg:w="6"/><text x="20.9101%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (6 samples, 0.02%)</title><rect x="20.6601%" y="405" width="0.0189%" height="15" fill="rgb(252,64,23)" fg:x="6573" fg:w="6"/><text x="20.9101%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.02%)</title><rect x="20.6601%" y="389" width="0.0189%" height="15" fill="rgb(232,162,48)" fg:x="6573" fg:w="6"/><text x="20.9101%" y="399.50"></text></g><g><title>&lt;briolette_sim::TransactionCoin as core::clone::Clone&gt;::clone (400 samples, 1.26%)</title><rect x="19.4248%" y="661" width="1.2573%" height="15" fill="rgb(246,160,12)" fg:x="6180" fg:w="400"/><text x="19.6748%" y="671.50"></text></g><g><title>&lt;briolette_sim::Coin as core::clone::Clone&gt;::clone (400 samples, 1.26%)</title><rect x="19.4248%" y="645" width="1.2573%" height="15" fill="rgb(247,166,0)" fg:x="6180" fg:w="400"/><text x="19.6748%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (400 samples, 1.26%)</title><rect x="19.4248%" y="629" width="1.2573%" height="15" fill="rgb(249,219,21)" fg:x="6180" fg:w="400"/><text x="19.6748%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (393 samples, 1.24%)</title><rect x="19.4468%" y="613" width="1.2353%" height="15" fill="rgb(205,209,3)" fg:x="6187" fg:w="393"/><text x="19.6968%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (393 samples, 1.24%)</title><rect x="19.4468%" y="597" width="1.2353%" height="15" fill="rgb(243,44,1)" fg:x="6187" fg:w="393"/><text x="19.6968%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (393 samples, 1.24%)</title><rect x="19.4468%" y="581" width="1.2353%" height="15" fill="rgb(206,159,16)" fg:x="6187" fg:w="393"/><text x="19.6968%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (393 samples, 1.24%)</title><rect x="19.4468%" y="565" width="1.2353%" height="15" fill="rgb(244,77,30)" fg:x="6187" fg:w="393"/><text x="19.6968%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (393 samples, 1.24%)</title><rect x="19.4468%" y="549" width="1.2353%" height="15" fill="rgb(218,69,12)" fg:x="6187" fg:w="393"/><text x="19.6968%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (393 samples, 1.24%)</title><rect x="19.4468%" y="533" width="1.2353%" height="15" fill="rgb(212,87,7)" fg:x="6187" fg:w="393"/><text x="19.6968%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (393 samples, 1.24%)</title><rect x="19.4468%" y="517" width="1.2353%" height="15" fill="rgb(245,114,25)" fg:x="6187" fg:w="393"/><text x="19.6968%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (393 samples, 1.24%)</title><rect x="19.4468%" y="501" width="1.2353%" height="15" fill="rgb(210,61,42)" fg:x="6187" fg:w="393"/><text x="19.6968%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (393 samples, 1.24%)</title><rect x="19.4468%" y="485" width="1.2353%" height="15" fill="rgb(211,52,33)" fg:x="6187" fg:w="393"/><text x="19.6968%" y="495.50"></text></g><g><title>alloc::alloc::alloc (393 samples, 1.24%)</title><rect x="19.4468%" y="469" width="1.2353%" height="15" fill="rgb(234,58,33)" fg:x="6187" fg:w="393"/><text x="19.6968%" y="479.50"></text></g><g><title>__rust_alloc (393 samples, 1.24%)</title><rect x="19.4468%" y="453" width="1.2353%" height="15" fill="rgb(220,115,36)" fg:x="6187" fg:w="393"/><text x="19.6968%" y="463.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (393 samples, 1.24%)</title><rect x="19.4468%" y="437" width="1.2353%" height="15" fill="rgb(243,153,54)" fg:x="6187" fg:w="393"/><text x="19.6968%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.02%)</title><rect x="20.6821%" y="661" width="0.0189%" height="15" fill="rgb(251,47,18)" fg:x="6580" fg:w="6"/><text x="20.9321%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.02%)</title><rect x="20.6821%" y="645" width="0.0189%" height="15" fill="rgb(242,102,42)" fg:x="6580" fg:w="6"/><text x="20.9321%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (6 samples, 0.02%)</title><rect x="20.6821%" y="629" width="0.0189%" height="15" fill="rgb(234,31,38)" fg:x="6580" fg:w="6"/><text x="20.9321%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (6 samples, 0.02%)</title><rect x="20.6821%" y="613" width="0.0189%" height="15" fill="rgb(221,117,51)" fg:x="6580" fg:w="6"/><text x="20.9321%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.02%)</title><rect x="20.6821%" y="597" width="0.0189%" height="15" fill="rgb(212,20,18)" fg:x="6580" fg:w="6"/><text x="20.9321%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.02%)</title><rect x="20.6821%" y="581" width="0.0189%" height="15" fill="rgb(245,133,36)" fg:x="6580" fg:w="6"/><text x="20.9321%" y="591.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.02%)</title><rect x="20.6821%" y="565" width="0.0189%" height="15" fill="rgb(212,6,19)" fg:x="6580" fg:w="6"/><text x="20.9321%" y="575.50"></text></g><g><title>__rust_alloc (6 samples, 0.02%)</title><rect x="20.6821%" y="549" width="0.0189%" height="15" fill="rgb(218,1,36)" fg:x="6580" fg:w="6"/><text x="20.9321%" y="559.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (6 samples, 0.02%)</title><rect x="20.6821%" y="533" width="0.0189%" height="15" fill="rgb(246,84,54)" fg:x="6580" fg:w="6"/><text x="20.9321%" y="543.50"></text></g><g><title>dhat::new_backtrace_inner (5 samples, 0.02%)</title><rect x="20.6852%" y="517" width="0.0157%" height="15" fill="rgb(242,110,6)" fg:x="6581" fg:w="5"/><text x="20.9352%" y="527.50"></text></g><g><title>backtrace::backtrace::trace (5 samples, 0.02%)</title><rect x="20.6852%" y="501" width="0.0157%" height="15" fill="rgb(214,47,5)" fg:x="6581" fg:w="5"/><text x="20.9352%" y="511.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (5 samples, 0.02%)</title><rect x="20.6852%" y="485" width="0.0157%" height="15" fill="rgb(218,159,25)" fg:x="6581" fg:w="5"/><text x="20.9352%" y="495.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (5 samples, 0.02%)</title><rect x="20.6852%" y="469" width="0.0157%" height="15" fill="rgb(215,211,28)" fg:x="6581" fg:w="5"/><text x="20.9352%" y="479.50"></text></g><g><title>_Unwind_Backtrace (5 samples, 0.02%)</title><rect x="20.6852%" y="453" width="0.0157%" height="15" fill="rgb(238,59,32)" fg:x="6581" fg:w="5"/><text x="20.9352%" y="463.50"></text></g><g><title>&lt;briolette_sim::TransactData as core::clone::Clone&gt;::clone (426 samples, 1.34%)</title><rect x="19.4248%" y="741" width="1.3390%" height="15" fill="rgb(226,82,3)" fg:x="6180" fg:w="426"/><text x="19.6748%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (426 samples, 1.34%)</title><rect x="19.4248%" y="725" width="1.3390%" height="15" fill="rgb(240,164,32)" fg:x="6180" fg:w="426"/><text x="19.6748%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (426 samples, 1.34%)</title><rect x="19.4248%" y="709" width="1.3390%" height="15" fill="rgb(232,46,7)" fg:x="6180" fg:w="426"/><text x="19.6748%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (426 samples, 1.34%)</title><rect x="19.4248%" y="693" width="1.3390%" height="15" fill="rgb(229,129,53)" fg:x="6180" fg:w="426"/><text x="19.6748%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (426 samples, 1.34%)</title><rect x="19.4248%" y="677" width="1.3390%" height="15" fill="rgb(234,188,29)" fg:x="6180" fg:w="426"/><text x="19.6748%" y="687.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (20 samples, 0.06%)</title><rect x="20.7009%" y="661" width="0.0629%" height="15" fill="rgb(246,141,4)" fg:x="6586" fg:w="20"/><text x="20.9509%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="20.7732%" y="341" width="0.0220%" height="15" fill="rgb(229,23,39)" fg:x="6609" fg:w="7"/><text x="21.0232%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[backtrace::capture::BacktraceFrame]&gt; (7 samples, 0.02%)</title><rect x="20.7732%" y="325" width="0.0220%" height="15" fill="rgb(206,12,3)" fg:x="6609" fg:w="7"/><text x="21.0232%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;backtrace::capture::BacktraceFrame&gt; (7 samples, 0.02%)</title><rect x="20.7732%" y="309" width="0.0220%" height="15" fill="rgb(252,226,20)" fg:x="6609" fg:w="7"/><text x="21.0232%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;backtrace::capture::BacktraceSymbol&gt;&gt;&gt; (7 samples, 0.02%)</title><rect x="20.7732%" y="293" width="0.0220%" height="15" fill="rgb(216,123,35)" fg:x="6609" fg:w="7"/><text x="21.0232%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;dhat::Backtrace&gt; (10 samples, 0.03%)</title><rect x="20.7732%" y="389" width="0.0314%" height="15" fill="rgb(212,68,40)" fg:x="6609" fg:w="10"/><text x="21.0232%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;backtrace::capture::Backtrace&gt; (10 samples, 0.03%)</title><rect x="20.7732%" y="373" width="0.0314%" height="15" fill="rgb(254,125,32)" fg:x="6609" fg:w="10"/><text x="21.0232%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;backtrace::capture::BacktraceFrame&gt;&gt; (10 samples, 0.03%)</title><rect x="20.7732%" y="357" width="0.0314%" height="15" fill="rgb(253,97,22)" fg:x="6609" fg:w="10"/><text x="21.0232%" y="367.50"></text></g><g><title>dhat::Globals::get_pp_info (52 samples, 0.16%)</title><rect x="20.7701%" y="437" width="0.1634%" height="15" fill="rgb(241,101,14)" fg:x="6608" fg:w="52"/><text x="21.0201%" y="447.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (51 samples, 0.16%)</title><rect x="20.7732%" y="421" width="0.1603%" height="15" fill="rgb(238,103,29)" fg:x="6609" fg:w="51"/><text x="21.0232%" y="431.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (51 samples, 0.16%)</title><rect x="20.7732%" y="405" width="0.1603%" height="15" fill="rgb(233,195,47)" fg:x="6609" fg:w="51"/><text x="21.0232%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (41 samples, 0.13%)</title><rect x="20.8047%" y="389" width="0.1289%" height="15" fill="rgb(246,218,30)" fg:x="6619" fg:w="41"/><text x="21.0547%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (41 samples, 0.13%)</title><rect x="20.8047%" y="373" width="0.1289%" height="15" fill="rgb(219,145,47)" fg:x="6619" fg:w="41"/><text x="21.0547%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (16 samples, 0.05%)</title><rect x="20.8832%" y="357" width="0.0503%" height="15" fill="rgb(243,12,26)" fg:x="6644" fg:w="16"/><text x="21.1332%" y="367.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (16 samples, 0.05%)</title><rect x="20.8832%" y="341" width="0.0503%" height="15" fill="rgb(214,87,16)" fg:x="6644" fg:w="16"/><text x="21.1332%" y="351.50"></text></g><g><title>&lt;dhat::Backtrace as core::cmp::PartialEq&gt;::eq (16 samples, 0.05%)</title><rect x="20.8832%" y="325" width="0.0503%" height="15" fill="rgb(208,99,42)" fg:x="6644" fg:w="16"/><text x="21.1332%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (16 samples, 0.05%)</title><rect x="20.8832%" y="309" width="0.0503%" height="15" fill="rgb(253,99,2)" fg:x="6644" fg:w="16"/><text x="21.1332%" y="319.50"></text></g><g><title>&lt;dhat::Backtrace as core::cmp::PartialEq&gt;::eq::{{closure}} (16 samples, 0.05%)</title><rect x="20.8832%" y="293" width="0.0503%" height="15" fill="rgb(220,168,23)" fg:x="6644" fg:w="16"/><text x="21.1332%" y="303.50"></text></g><g><title>backtrace::capture::BacktraceFrame::ip (8 samples, 0.03%)</title><rect x="20.9084%" y="277" width="0.0251%" height="15" fill="rgb(242,38,24)" fg:x="6652" fg:w="8"/><text x="21.1584%" y="287.50"></text></g><g><title>backtrace::capture::Frame::ip (8 samples, 0.03%)</title><rect x="20.9084%" y="261" width="0.0251%" height="15" fill="rgb(225,182,9)" fg:x="6652" fg:w="8"/><text x="21.1584%" y="271.50"></text></g><g><title>backtrace::backtrace::Frame::ip (8 samples, 0.03%)</title><rect x="20.9084%" y="245" width="0.0251%" height="15" fill="rgb(243,178,37)" fg:x="6652" fg:w="8"/><text x="21.1584%" y="255.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::ip (8 samples, 0.03%)</title><rect x="20.9084%" y="229" width="0.0251%" height="15" fill="rgb(232,139,19)" fg:x="6652" fg:w="8"/><text x="21.1584%" y="239.50"></text></g><g><title>dhat::Globals::record_block (106 samples, 0.33%)</title><rect x="20.9335%" y="437" width="0.3332%" height="15" fill="rgb(225,201,24)" fg:x="6660" fg:w="106"/><text x="21.1835%" y="447.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (106 samples, 0.33%)</title><rect x="20.9335%" y="421" width="0.3332%" height="15" fill="rgb(221,47,46)" fg:x="6660" fg:w="106"/><text x="21.1835%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (106 samples, 0.33%)</title><rect x="20.9335%" y="405" width="0.3332%" height="15" fill="rgb(249,23,13)" fg:x="6660" fg:w="106"/><text x="21.1835%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (106 samples, 0.33%)</title><rect x="20.9335%" y="389" width="0.3332%" height="15" fill="rgb(219,9,5)" fg:x="6660" fg:w="106"/><text x="21.1835%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (106 samples, 0.33%)</title><rect x="20.9335%" y="373" width="0.3332%" height="15" fill="rgb(254,171,16)" fg:x="6660" fg:w="106"/><text x="21.1835%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (106 samples, 0.33%)</title><rect x="20.9335%" y="357" width="0.3332%" height="15" fill="rgb(230,171,20)" fg:x="6660" fg:w="106"/><text x="21.1835%" y="367.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (106 samples, 0.33%)</title><rect x="20.9335%" y="341" width="0.3332%" height="15" fill="rgb(210,71,41)" fg:x="6660" fg:w="106"/><text x="21.1835%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (106 samples, 0.33%)</title><rect x="20.9335%" y="325" width="0.3332%" height="15" fill="rgb(206,173,20)" fg:x="6660" fg:w="106"/><text x="21.1835%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (106 samples, 0.33%)</title><rect x="20.9335%" y="309" width="0.3332%" height="15" fill="rgb(233,88,34)" fg:x="6660" fg:w="106"/><text x="21.1835%" y="319.50"></text></g><g><title>Unknown (5 samples, 0.02%)</title><rect x="21.3201%" y="341" width="0.0157%" height="15" fill="rgb(223,209,46)" fg:x="6783" fg:w="5"/><text x="21.5701%" y="351.50"></text></g><g><title>_Unwind_Find_FDE (32 samples, 0.10%)</title><rect x="21.3201%" y="357" width="0.1006%" height="15" fill="rgb(250,43,18)" fg:x="6783" fg:w="32"/><text x="21.5701%" y="367.50"></text></g><g><title>__GI__dl_find_object (27 samples, 0.08%)</title><rect x="21.3358%" y="341" width="0.0849%" height="15" fill="rgb(208,13,10)" fg:x="6788" fg:w="27"/><text x="21.5858%" y="351.50"></text></g><g><title>_dl_find_object_slow (7 samples, 0.02%)</title><rect x="21.3987%" y="325" width="0.0220%" height="15" fill="rgb(212,200,36)" fg:x="6808" fg:w="7"/><text x="21.6487%" y="335.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::ip (17 samples, 0.05%)</title><rect x="21.4679%" y="277" width="0.0534%" height="15" fill="rgb(225,90,30)" fg:x="6830" fg:w="17"/><text x="21.7179%" y="287.50"></text></g><g><title>Unknown (5 samples, 0.02%)</title><rect x="21.5213%" y="229" width="0.0157%" height="15" fill="rgb(236,182,39)" fg:x="6847" fg:w="5"/><text x="21.7713%" y="239.50"></text></g><g><title>&lt;backtrace::backtrace::Frame as core::clone::Clone&gt;::clone (41 samples, 0.13%)</title><rect x="21.4679%" y="309" width="0.1289%" height="15" fill="rgb(212,144,35)" fg:x="6830" fg:w="41"/><text x="21.7179%" y="319.50"></text></g><g><title>&lt;backtrace::backtrace::libunwind::Frame as core::clone::Clone&gt;::clone (41 samples, 0.13%)</title><rect x="21.4679%" y="293" width="0.1289%" height="15" fill="rgb(228,63,44)" fg:x="6830" fg:w="41"/><text x="21.7179%" y="303.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::symbol_address (24 samples, 0.08%)</title><rect x="21.5213%" y="277" width="0.0754%" height="15" fill="rgb(228,109,6)" fg:x="6847" fg:w="24"/><text x="21.7713%" y="287.50"></text></g><g><title>_Unwind_FindEnclosingFunction (24 samples, 0.08%)</title><rect x="21.5213%" y="261" width="0.0754%" height="15" fill="rgb(238,117,24)" fg:x="6847" fg:w="24"/><text x="21.7713%" y="271.50"></text></g><g><title>_Unwind_Find_FDE (24 samples, 0.08%)</title><rect x="21.5213%" y="245" width="0.0754%" height="15" fill="rgb(242,26,26)" fg:x="6847" fg:w="24"/><text x="21.7713%" y="255.50"></text></g><g><title>__GI__dl_find_object (19 samples, 0.06%)</title><rect x="21.5370%" y="229" width="0.0597%" height="15" fill="rgb(221,92,48)" fg:x="6852" fg:w="19"/><text x="21.7870%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.01%)</title><rect x="21.5967%" y="245" width="0.0126%" height="15" fill="rgb(209,209,32)" fg:x="6871" fg:w="4"/><text x="21.8467%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (10 samples, 0.03%)</title><rect x="21.5967%" y="309" width="0.0314%" height="15" fill="rgb(221,70,22)" fg:x="6871" fg:w="10"/><text x="21.8467%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (10 samples, 0.03%)</title><rect x="21.5967%" y="293" width="0.0314%" height="15" fill="rgb(248,145,5)" fg:x="6871" fg:w="10"/><text x="21.8467%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (10 samples, 0.03%)</title><rect x="21.5967%" y="277" width="0.0314%" height="15" fill="rgb(226,116,26)" fg:x="6871" fg:w="10"/><text x="21.8467%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (10 samples, 0.03%)</title><rect x="21.5967%" y="261" width="0.0314%" height="15" fill="rgb(244,5,17)" fg:x="6871" fg:w="10"/><text x="21.8467%" y="271.50"></text></g><g><title>alloc::raw_vec::layout_array (6 samples, 0.02%)</title><rect x="21.6093%" y="245" width="0.0189%" height="15" fill="rgb(252,159,33)" fg:x="6875" fg:w="6"/><text x="21.8593%" y="255.50"></text></g><g><title>core::alloc::layout::Layout::repeat (6 samples, 0.02%)</title><rect x="21.6093%" y="229" width="0.0189%" height="15" fill="rgb(206,71,0)" fg:x="6875" fg:w="6"/><text x="21.8593%" y="239.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (199 samples, 0.63%)</title><rect x="21.3201%" y="405" width="0.6255%" height="15" fill="rgb(233,118,54)" fg:x="6783" fg:w="199"/><text x="21.5701%" y="415.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (199 samples, 0.63%)</title><rect x="21.3201%" y="389" width="0.6255%" height="15" fill="rgb(234,83,48)" fg:x="6783" fg:w="199"/><text x="21.5701%" y="399.50"></text></g><g><title>_Unwind_Backtrace (199 samples, 0.63%)</title><rect x="21.3201%" y="373" width="0.6255%" height="15" fill="rgb(228,3,54)" fg:x="6783" fg:w="199"/><text x="21.5701%" y="383.50"></text></g><g><title>backtrace::backtrace::libunwind::trace::trace_fn (167 samples, 0.52%)</title><rect x="21.4207%" y="357" width="0.5249%" height="15" fill="rgb(226,155,13)" fg:x="6815" fg:w="167"/><text x="21.6707%" y="367.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (167 samples, 0.52%)</title><rect x="21.4207%" y="341" width="0.5249%" height="15" fill="rgb(241,28,37)" fg:x="6815" fg:w="167"/><text x="21.6707%" y="351.50"></text></g><g><title>dhat::new_backtrace_inner::{{closure}} (156 samples, 0.49%)</title><rect x="21.4553%" y="325" width="0.4903%" height="15" fill="rgb(233,93,10)" fg:x="6826" fg:w="156"/><text x="21.7053%" y="335.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (98 samples, 0.31%)</title><rect x="21.6376%" y="309" width="0.3080%" height="15" fill="rgb(225,113,19)" fg:x="6884" fg:w="98"/><text x="21.8876%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (98 samples, 0.31%)</title><rect x="21.6376%" y="293" width="0.3080%" height="15" fill="rgb(241,2,18)" fg:x="6884" fg:w="98"/><text x="21.8876%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (98 samples, 0.31%)</title><rect x="21.6376%" y="277" width="0.3080%" height="15" fill="rgb(228,207,21)" fg:x="6884" fg:w="98"/><text x="21.8876%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (98 samples, 0.31%)</title><rect x="21.6376%" y="261" width="0.3080%" height="15" fill="rgb(213,211,35)" fg:x="6884" fg:w="98"/><text x="21.8876%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (98 samples, 0.31%)</title><rect x="21.6376%" y="245" width="0.3080%" height="15" fill="rgb(209,83,10)" fg:x="6884" fg:w="98"/><text x="21.8876%" y="255.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (98 samples, 0.31%)</title><rect x="21.6376%" y="229" width="0.3080%" height="15" fill="rgb(209,164,1)" fg:x="6884" fg:w="98"/><text x="21.8876%" y="239.50"></text></g><g><title>hashbrown::raw::h2 (98 samples, 0.31%)</title><rect x="21.6376%" y="213" width="0.3080%" height="15" fill="rgb(213,184,43)" fg:x="6884" fg:w="98"/><text x="21.8876%" y="223.50"></text></g><g><title>dhat::new_backtrace_inner (221 samples, 0.69%)</title><rect x="21.2667%" y="437" width="0.6946%" height="15" fill="rgb(231,61,34)" fg:x="6766" fg:w="221"/><text x="21.5167%" y="447.50"></text></g><g><title>backtrace::backtrace::trace (211 samples, 0.66%)</title><rect x="21.2981%" y="421" width="0.6632%" height="15" fill="rgb(235,75,3)" fg:x="6776" fg:w="211"/><text x="21.5481%" y="431.50"></text></g><g><title>backtrace::lock::lock (5 samples, 0.02%)</title><rect x="21.9456%" y="405" width="0.0157%" height="15" fill="rgb(220,106,47)" fg:x="6982" fg:w="5"/><text x="22.1956%" y="415.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (5 samples, 0.02%)</title><rect x="21.9456%" y="389" width="0.0157%" height="15" fill="rgb(210,196,33)" fg:x="6982" fg:w="5"/><text x="22.1956%" y="399.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (5 samples, 0.02%)</title><rect x="21.9456%" y="373" width="0.0157%" height="15" fill="rgb(229,154,42)" fg:x="6982" fg:w="5"/><text x="22.1956%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (5 samples, 0.02%)</title><rect x="21.9456%" y="357" width="0.0157%" height="15" fill="rgb(228,114,26)" fg:x="6982" fg:w="5"/><text x="22.1956%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (5 samples, 0.02%)</title><rect x="21.9456%" y="341" width="0.0157%" height="15" fill="rgb(208,144,1)" fg:x="6982" fg:w="5"/><text x="22.1956%" y="351.50"></text></g><g><title>mintex::Mutex&lt;T&gt;::lock (4 samples, 0.01%)</title><rect x="21.9613%" y="437" width="0.0126%" height="15" fill="rgb(239,112,37)" fg:x="6987" fg:w="4"/><text x="22.2113%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (4 samples, 0.01%)</title><rect x="21.9613%" y="421" width="0.0126%" height="15" fill="rgb(210,96,50)" fg:x="6987" fg:w="4"/><text x="22.2113%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4 samples, 0.01%)</title><rect x="21.9613%" y="405" width="0.0126%" height="15" fill="rgb(222,178,2)" fg:x="6987" fg:w="4"/><text x="22.2113%" y="415.50"></text></g><g><title>&lt;briolette_sim::Coin as core::clone::Clone&gt;::clone (386 samples, 1.21%)</title><rect x="20.7638%" y="661" width="1.2133%" height="15" fill="rgb(226,74,18)" fg:x="6606" fg:w="386"/><text x="21.0138%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (386 samples, 1.21%)</title><rect x="20.7638%" y="645" width="1.2133%" height="15" fill="rgb(225,67,54)" fg:x="6606" fg:w="386"/><text x="21.0138%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (386 samples, 1.21%)</title><rect x="20.7638%" y="629" width="1.2133%" height="15" fill="rgb(251,92,32)" fg:x="6606" fg:w="386"/><text x="21.0138%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (386 samples, 1.21%)</title><rect x="20.7638%" y="613" width="1.2133%" height="15" fill="rgb(228,149,22)" fg:x="6606" fg:w="386"/><text x="21.0138%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (386 samples, 1.21%)</title><rect x="20.7638%" y="597" width="1.2133%" height="15" fill="rgb(243,54,13)" fg:x="6606" fg:w="386"/><text x="21.0138%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (386 samples, 1.21%)</title><rect x="20.7638%" y="581" width="1.2133%" height="15" fill="rgb(243,180,28)" fg:x="6606" fg:w="386"/><text x="21.0138%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (386 samples, 1.21%)</title><rect x="20.7638%" y="565" width="1.2133%" height="15" fill="rgb(208,167,24)" fg:x="6606" fg:w="386"/><text x="21.0138%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (386 samples, 1.21%)</title><rect x="20.7638%" y="549" width="1.2133%" height="15" fill="rgb(245,73,45)" fg:x="6606" fg:w="386"/><text x="21.0138%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (386 samples, 1.21%)</title><rect x="20.7638%" y="533" width="1.2133%" height="15" fill="rgb(237,203,48)" fg:x="6606" fg:w="386"/><text x="21.0138%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (384 samples, 1.21%)</title><rect x="20.7701%" y="517" width="1.2070%" height="15" fill="rgb(211,197,16)" fg:x="6608" fg:w="384"/><text x="21.0201%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (384 samples, 1.21%)</title><rect x="20.7701%" y="501" width="1.2070%" height="15" fill="rgb(243,99,51)" fg:x="6608" fg:w="384"/><text x="21.0201%" y="511.50"></text></g><g><title>alloc::alloc::alloc (384 samples, 1.21%)</title><rect x="20.7701%" y="485" width="1.2070%" height="15" fill="rgb(215,123,29)" fg:x="6608" fg:w="384"/><text x="21.0201%" y="495.50"></text></g><g><title>__rust_alloc (384 samples, 1.21%)</title><rect x="20.7701%" y="469" width="1.2070%" height="15" fill="rgb(239,186,37)" fg:x="6608" fg:w="384"/><text x="21.0201%" y="479.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (384 samples, 1.21%)</title><rect x="20.7701%" y="453" width="1.2070%" height="15" fill="rgb(252,136,39)" fg:x="6608" fg:w="384"/><text x="21.0201%" y="463.50"></text></g><g><title>&lt;briolette_sim::EventData as core::clone::Clone&gt;::clone (837 samples, 2.63%)</title><rect x="19.4154%" y="757" width="2.6308%" height="15" fill="rgb(223,213,32)" fg:x="6177" fg:w="837"/><text x="19.6654%" y="767.50">&lt;b..</text></g><g><title>&lt;briolette_sim::ValidateData as core::clone::Clone&gt;::clone (408 samples, 1.28%)</title><rect x="20.7638%" y="741" width="1.2824%" height="15" fill="rgb(233,115,5)" fg:x="6606" fg:w="408"/><text x="21.0138%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (408 samples, 1.28%)</title><rect x="20.7638%" y="725" width="1.2824%" height="15" fill="rgb(207,226,44)" fg:x="6606" fg:w="408"/><text x="21.0138%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (408 samples, 1.28%)</title><rect x="20.7638%" y="709" width="1.2824%" height="15" fill="rgb(208,126,0)" fg:x="6606" fg:w="408"/><text x="21.0138%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (408 samples, 1.28%)</title><rect x="20.7638%" y="693" width="1.2824%" height="15" fill="rgb(244,66,21)" fg:x="6606" fg:w="408"/><text x="21.0138%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (408 samples, 1.28%)</title><rect x="20.7638%" y="677" width="1.2824%" height="15" fill="rgb(222,97,12)" fg:x="6606" fg:w="408"/><text x="21.0138%" y="687.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (22 samples, 0.07%)</title><rect x="21.9771%" y="661" width="0.0691%" height="15" fill="rgb(219,213,19)" fg:x="6992" fg:w="22"/><text x="22.2271%" y="671.50"></text></g><g><title>&lt;briolette_sim::SimulatorHelpers as briolette_sim::SimulationTools&gt;::probability_check (14 samples, 0.04%)</title><rect x="22.0462%" y="757" width="0.0440%" height="15" fill="rgb(252,169,30)" fg:x="7014" fg:w="14"/><text x="22.2962%" y="767.50"></text></g><g><title>&lt;rand::distributions::uniform::Uniform&lt;X&gt; as rand::distributions::distribution::Distribution&lt;X&gt;&gt;::sample (14 samples, 0.04%)</title><rect x="22.0462%" y="741" width="0.0440%" height="15" fill="rgb(206,32,51)" fg:x="7014" fg:w="14"/><text x="22.2962%" y="751.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformFloat&lt;f64&gt; as rand::distributions::uniform::UniformSampler&gt;::sample (14 samples, 0.04%)</title><rect x="22.0462%" y="725" width="0.0440%" height="15" fill="rgb(250,172,42)" fg:x="7014" fg:w="14"/><text x="22.2962%" y="735.50"></text></g><g><title>rand::rng::Rng::gen (14 samples, 0.04%)</title><rect x="22.0462%" y="709" width="0.0440%" height="15" fill="rgb(209,34,43)" fg:x="7014" fg:w="14"/><text x="22.2962%" y="719.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u64&gt; for rand::distributions::Standard&gt;::sample (14 samples, 0.04%)</title><rect x="22.0462%" y="693" width="0.0440%" height="15" fill="rgb(223,11,35)" fg:x="7014" fg:w="14"/><text x="22.2962%" y="703.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (14 samples, 0.04%)</title><rect x="22.0462%" y="677" width="0.0440%" height="15" fill="rgb(251,219,26)" fg:x="7014" fg:w="14"/><text x="22.2962%" y="687.50"></text></g><g><title>&lt;rand::rngs::std::StdRng as rand_core::RngCore&gt;::next_u64 (6 samples, 0.02%)</title><rect x="22.0713%" y="661" width="0.0189%" height="15" fill="rgb(231,119,3)" fg:x="7022" fg:w="6"/><text x="22.3213%" y="671.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Rng as rand_core::RngCore&gt;::next_u64 (6 samples, 0.02%)</title><rect x="22.0713%" y="645" width="0.0189%" height="15" fill="rgb(216,97,11)" fg:x="7022" fg:w="6"/><text x="22.3213%" y="655.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (6 samples, 0.02%)</title><rect x="22.0713%" y="629" width="0.0189%" height="15" fill="rgb(223,59,9)" fg:x="7022" fg:w="6"/><text x="22.3213%" y="639.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (6 samples, 0.02%)</title><rect x="22.0713%" y="613" width="0.0189%" height="15" fill="rgb(233,93,31)" fg:x="7022" fg:w="6"/><text x="22.3213%" y="623.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (6 samples, 0.02%)</title><rect x="22.0713%" y="597" width="0.0189%" height="15" fill="rgb(239,81,33)" fg:x="7022" fg:w="6"/><text x="22.3213%" y="607.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (6 samples, 0.02%)</title><rect x="22.0713%" y="581" width="0.0189%" height="15" fill="rgb(213,120,34)" fg:x="7022" fg:w="6"/><text x="22.3213%" y="591.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (6 samples, 0.02%)</title><rect x="22.0713%" y="565" width="0.0189%" height="15" fill="rgb(243,49,53)" fg:x="7022" fg:w="6"/><text x="22.3213%" y="575.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (6 samples, 0.02%)</title><rect x="22.0713%" y="549" width="0.0189%" height="15" fill="rgb(247,216,33)" fg:x="7022" fg:w="6"/><text x="22.3213%" y="559.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (6 samples, 0.02%)</title><rect x="22.0713%" y="533" width="0.0189%" height="15" fill="rgb(226,26,14)" fg:x="7022" fg:w="6"/><text x="22.3213%" y="543.50"></text></g><g><title>rand_chacha::guts::round (6 samples, 0.02%)</title><rect x="22.0713%" y="517" width="0.0189%" height="15" fill="rgb(215,49,53)" fg:x="7022" fg:w="6"/><text x="22.3213%" y="527.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::AddAssign&gt;::add_assign (6 samples, 0.02%)</title><rect x="22.0713%" y="501" width="0.0189%" height="15" fill="rgb(245,162,40)" fg:x="7022" fg:w="6"/><text x="22.3213%" y="511.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (6 samples, 0.02%)</title><rect x="22.0713%" y="485" width="0.0189%" height="15" fill="rgb(229,68,17)" fg:x="7022" fg:w="6"/><text x="22.3213%" y="495.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (6 samples, 0.02%)</title><rect x="22.0713%" y="469" width="0.0189%" height="15" fill="rgb(213,182,10)" fg:x="7022" fg:w="6"/><text x="22.3213%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (6 samples, 0.02%)</title><rect x="22.0713%" y="453" width="0.0189%" height="15" fill="rgb(245,125,30)" fg:x="7022" fg:w="6"/><text x="22.3213%" y="463.50"></text></g><g><title>&lt;briolette_sim::SimulatorHelpers as briolette_sim::SimulationTools&gt;::relocate (4 samples, 0.01%)</title><rect x="22.0902%" y="757" width="0.0126%" height="15" fill="rgb(232,202,2)" fg:x="7028" fg:w="4"/><text x="22.3402%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.09%)</title><rect x="22.3102%" y="293" width="0.0912%" height="15" fill="rgb(237,140,51)" fg:x="7098" fg:w="29"/><text x="22.5602%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;[backtrace::capture::BacktraceFrame]&gt; (29 samples, 0.09%)</title><rect x="22.3102%" y="277" width="0.0912%" height="15" fill="rgb(236,157,25)" fg:x="7098" fg:w="29"/><text x="22.5602%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;backtrace::capture::BacktraceFrame&gt; (29 samples, 0.09%)</title><rect x="22.3102%" y="261" width="0.0912%" height="15" fill="rgb(219,209,0)" fg:x="7098" fg:w="29"/><text x="22.5602%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;backtrace::capture::BacktraceSymbol&gt;&gt;&gt; (29 samples, 0.09%)</title><rect x="22.3102%" y="245" width="0.0912%" height="15" fill="rgb(240,116,54)" fg:x="7098" fg:w="29"/><text x="22.5602%" y="255.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::dealloc (8 samples, 0.03%)</title><rect x="22.4014%" y="213" width="0.0251%" height="15" fill="rgb(216,10,36)" fg:x="7127" fg:w="8"/><text x="22.6514%" y="223.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (8 samples, 0.03%)</title><rect x="22.4014%" y="197" width="0.0251%" height="15" fill="rgb(222,72,44)" fg:x="7127" fg:w="8"/><text x="22.6514%" y="207.50"></text></g><g><title>__rust_alloc (7 samples, 0.02%)</title><rect x="22.4265%" y="213" width="0.0220%" height="15" fill="rgb(232,159,9)" fg:x="7135" fg:w="7"/><text x="22.6765%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;dhat::Backtrace&gt; (46 samples, 0.14%)</title><rect x="22.3102%" y="341" width="0.1446%" height="15" fill="rgb(210,39,32)" fg:x="7098" fg:w="46"/><text x="22.5602%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;backtrace::capture::Backtrace&gt; (46 samples, 0.14%)</title><rect x="22.3102%" y="325" width="0.1446%" height="15" fill="rgb(216,194,45)" fg:x="7098" fg:w="46"/><text x="22.5602%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;backtrace::capture::BacktraceFrame&gt;&gt; (46 samples, 0.14%)</title><rect x="22.3102%" y="309" width="0.1446%" height="15" fill="rgb(218,18,35)" fg:x="7098" fg:w="46"/><text x="22.5602%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;backtrace::capture::BacktraceFrame&gt;&gt; (17 samples, 0.05%)</title><rect x="22.4014%" y="293" width="0.0534%" height="15" fill="rgb(207,83,51)" fg:x="7127" fg:w="17"/><text x="22.6514%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.05%)</title><rect x="22.4014%" y="277" width="0.0534%" height="15" fill="rgb(225,63,43)" fg:x="7127" fg:w="17"/><text x="22.6514%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (17 samples, 0.05%)</title><rect x="22.4014%" y="261" width="0.0534%" height="15" fill="rgb(207,57,36)" fg:x="7127" fg:w="17"/><text x="22.6514%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.05%)</title><rect x="22.4014%" y="245" width="0.0534%" height="15" fill="rgb(216,99,33)" fg:x="7127" fg:w="17"/><text x="22.6514%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (17 samples, 0.05%)</title><rect x="22.4014%" y="229" width="0.0534%" height="15" fill="rgb(225,42,16)" fg:x="7127" fg:w="17"/><text x="22.6514%" y="239.50"></text></g><g><title>hashbrown::map::make_hash (34 samples, 0.11%)</title><rect x="22.4548%" y="341" width="0.1069%" height="15" fill="rgb(220,201,45)" fg:x="7144" fg:w="34"/><text x="22.7048%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (34 samples, 0.11%)</title><rect x="22.4548%" y="325" width="0.1069%" height="15" fill="rgb(225,33,4)" fg:x="7144" fg:w="34"/><text x="22.7048%" y="335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (34 samples, 0.11%)</title><rect x="22.4548%" y="309" width="0.1069%" height="15" fill="rgb(224,33,50)" fg:x="7144" fg:w="34"/><text x="22.7048%" y="319.50"></text></g><g><title>&lt;dhat::Backtrace as core::hash::Hash&gt;::hash (34 samples, 0.11%)</title><rect x="22.4548%" y="293" width="0.1069%" height="15" fill="rgb(246,198,51)" fg:x="7144" fg:w="34"/><text x="22.7048%" y="303.50"></text></g><g><title>backtrace::capture::Backtrace::frames (100 samples, 0.31%)</title><rect x="22.5617%" y="261" width="0.3143%" height="15" fill="rgb(205,22,4)" fg:x="7178" fg:w="100"/><text x="22.8117%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (100 samples, 0.31%)</title><rect x="22.5617%" y="245" width="0.3143%" height="15" fill="rgb(206,3,8)" fg:x="7178" fg:w="100"/><text x="22.8117%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (100 samples, 0.31%)</title><rect x="22.5617%" y="229" width="0.3143%" height="15" fill="rgb(251,23,15)" fg:x="7178" fg:w="100"/><text x="22.8117%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (100 samples, 0.31%)</title><rect x="22.5617%" y="213" width="0.3143%" height="15" fill="rgb(252,88,28)" fg:x="7178" fg:w="100"/><text x="22.8117%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (100 samples, 0.31%)</title><rect x="22.5617%" y="197" width="0.3143%" height="15" fill="rgb(212,127,14)" fg:x="7178" fg:w="100"/><text x="22.8117%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (100 samples, 0.31%)</title><rect x="22.5617%" y="181" width="0.3143%" height="15" fill="rgb(247,145,37)" fg:x="7178" fg:w="100"/><text x="22.8117%" y="191.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (242 samples, 0.76%)</title><rect x="22.3102%" y="357" width="0.7606%" height="15" fill="rgb(209,117,53)" fg:x="7098" fg:w="242"/><text x="22.5602%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (162 samples, 0.51%)</title><rect x="22.5617%" y="341" width="0.5092%" height="15" fill="rgb(212,90,42)" fg:x="7178" fg:w="162"/><text x="22.8117%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (162 samples, 0.51%)</title><rect x="22.5617%" y="325" width="0.5092%" height="15" fill="rgb(218,164,37)" fg:x="7178" fg:w="162"/><text x="22.8117%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (162 samples, 0.51%)</title><rect x="22.5617%" y="309" width="0.5092%" height="15" fill="rgb(246,65,34)" fg:x="7178" fg:w="162"/><text x="22.8117%" y="319.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (162 samples, 0.51%)</title><rect x="22.5617%" y="293" width="0.5092%" height="15" fill="rgb(231,100,33)" fg:x="7178" fg:w="162"/><text x="22.8117%" y="303.50"></text></g><g><title>&lt;dhat::Backtrace as core::cmp::PartialEq&gt;::eq (162 samples, 0.51%)</title><rect x="22.5617%" y="277" width="0.5092%" height="15" fill="rgb(228,126,14)" fg:x="7178" fg:w="162"/><text x="22.8117%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (62 samples, 0.19%)</title><rect x="22.8760%" y="261" width="0.1949%" height="15" fill="rgb(215,173,21)" fg:x="7278" fg:w="62"/><text x="23.1260%" y="271.50"></text></g><g><title>&lt;dhat::Backtrace as core::cmp::PartialEq&gt;::eq::{{closure}} (62 samples, 0.19%)</title><rect x="22.8760%" y="245" width="0.1949%" height="15" fill="rgb(210,6,40)" fg:x="7278" fg:w="62"/><text x="23.1260%" y="255.50"></text></g><g><title>backtrace::capture::BacktraceFrame::ip (62 samples, 0.19%)</title><rect x="22.8760%" y="229" width="0.1949%" height="15" fill="rgb(212,48,18)" fg:x="7278" fg:w="62"/><text x="23.1260%" y="239.50"></text></g><g><title>backtrace::capture::Frame::ip (62 samples, 0.19%)</title><rect x="22.8760%" y="213" width="0.1949%" height="15" fill="rgb(230,214,11)" fg:x="7278" fg:w="62"/><text x="23.1260%" y="223.50"></text></g><g><title>backtrace::backtrace::Frame::ip (62 samples, 0.19%)</title><rect x="22.8760%" y="197" width="0.1949%" height="15" fill="rgb(254,105,39)" fg:x="7278" fg:w="62"/><text x="23.1260%" y="207.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::ip (62 samples, 0.19%)</title><rect x="22.8760%" y="181" width="0.1949%" height="15" fill="rgb(245,158,5)" fg:x="7278" fg:w="62"/><text x="23.1260%" y="191.50"></text></g><g><title>dhat::Globals::get_pp_info (244 samples, 0.77%)</title><rect x="22.3102%" y="389" width="0.7669%" height="15" fill="rgb(249,208,11)" fg:x="7098" fg:w="244"/><text x="22.5602%" y="399.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (244 samples, 0.77%)</title><rect x="22.3102%" y="373" width="0.7669%" height="15" fill="rgb(210,39,28)" fg:x="7098" fg:w="244"/><text x="22.5602%" y="383.50"></text></g><g><title>dhat::Globals::record_block (405 samples, 1.27%)</title><rect x="23.0772%" y="389" width="1.2730%" height="15" fill="rgb(211,56,53)" fg:x="7342" fg:w="405"/><text x="23.3272%" y="399.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (405 samples, 1.27%)</title><rect x="23.0772%" y="373" width="1.2730%" height="15" fill="rgb(226,201,30)" fg:x="7342" fg:w="405"/><text x="23.3272%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (405 samples, 1.27%)</title><rect x="23.0772%" y="357" width="1.2730%" height="15" fill="rgb(239,101,34)" fg:x="7342" fg:w="405"/><text x="23.3272%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (405 samples, 1.27%)</title><rect x="23.0772%" y="341" width="1.2730%" height="15" fill="rgb(226,209,5)" fg:x="7342" fg:w="405"/><text x="23.3272%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (405 samples, 1.27%)</title><rect x="23.0772%" y="325" width="1.2730%" height="15" fill="rgb(250,105,47)" fg:x="7342" fg:w="405"/><text x="23.3272%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (405 samples, 1.27%)</title><rect x="23.0772%" y="309" width="1.2730%" height="15" fill="rgb(230,72,3)" fg:x="7342" fg:w="405"/><text x="23.3272%" y="319.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (405 samples, 1.27%)</title><rect x="23.0772%" y="293" width="1.2730%" height="15" fill="rgb(232,218,39)" fg:x="7342" fg:w="405"/><text x="23.3272%" y="303.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (405 samples, 1.27%)</title><rect x="23.0772%" y="277" width="1.2730%" height="15" fill="rgb(248,166,6)" fg:x="7342" fg:w="405"/><text x="23.3272%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (405 samples, 1.27%)</title><rect x="23.0772%" y="261" width="1.2730%" height="15" fill="rgb(247,89,20)" fg:x="7342" fg:w="405"/><text x="23.3272%" y="271.50"></text></g><g><title>dhat::Globals::update_counts_for_alloc (7 samples, 0.02%)</title><rect x="24.3501%" y="389" width="0.0220%" height="15" fill="rgb(248,130,54)" fg:x="7747" fg:w="7"/><text x="24.6001%" y="399.50"></text></g><g><title>dhat::PpInfo::update_counts_for_alloc (7 samples, 0.02%)</title><rect x="24.3501%" y="373" width="0.0220%" height="15" fill="rgb(234,196,4)" fg:x="7747" fg:w="7"/><text x="24.6001%" y="383.50"></text></g><g><title>&lt;backtrace::lock::LockGuard as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="24.6896%" y="357" width="0.0157%" height="15" fill="rgb(250,143,31)" fg:x="7855" fg:w="5"/><text x="24.9396%" y="367.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.02%)</title><rect x="24.6896%" y="341" width="0.0157%" height="15" fill="rgb(211,110,34)" fg:x="7855" fg:w="5"/><text x="24.9396%" y="351.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.02%)</title><rect x="24.6896%" y="325" width="0.0157%" height="15" fill="rgb(215,124,48)" fg:x="7855" fg:w="5"/><text x="24.9396%" y="335.50"></text></g><g><title>&lt;backtrace::lock::LockGuard as core::ops::drop::Drop&gt;::drop::{{closure}} (5 samples, 0.02%)</title><rect x="24.6896%" y="309" width="0.0157%" height="15" fill="rgb(216,46,13)" fg:x="7855" fg:w="5"/><text x="24.9396%" y="319.50"></text></g><g><title>Unknown (36 samples, 0.11%)</title><rect x="24.7273%" y="293" width="0.1132%" height="15" fill="rgb(205,184,25)" fg:x="7867" fg:w="36"/><text x="24.9773%" y="303.50"></text></g><g><title>_Unwind_Find_FDE (136 samples, 0.43%)</title><rect x="24.7273%" y="309" width="0.4275%" height="15" fill="rgb(228,1,10)" fg:x="7867" fg:w="136"/><text x="24.9773%" y="319.50"></text></g><g><title>__GI__dl_find_object (100 samples, 0.31%)</title><rect x="24.8405%" y="293" width="0.3143%" height="15" fill="rgb(213,116,27)" fg:x="7903" fg:w="100"/><text x="25.0905%" y="303.50"></text></g><g><title>_dlfo_lookup (23 samples, 0.07%)</title><rect x="25.0825%" y="277" width="0.0723%" height="15" fill="rgb(241,95,50)" fg:x="7980" fg:w="23"/><text x="25.3325%" y="287.50"></text></g><g><title>Unknown (34 samples, 0.11%)</title><rect x="25.4974%" y="181" width="0.1069%" height="15" fill="rgb(238,48,32)" fg:x="8112" fg:w="34"/><text x="25.7474%" y="191.50"></text></g><g><title>_Unwind_FindEnclosingFunction (125 samples, 0.39%)</title><rect x="25.4974%" y="213" width="0.3929%" height="15" fill="rgb(235,113,49)" fg:x="8112" fg:w="125"/><text x="25.7474%" y="223.50"></text></g><g><title>_Unwind_Find_FDE (125 samples, 0.39%)</title><rect x="25.4974%" y="197" width="0.3929%" height="15" fill="rgb(205,127,43)" fg:x="8112" fg:w="125"/><text x="25.7474%" y="207.50"></text></g><g><title>__GI__dl_find_object (91 samples, 0.29%)</title><rect x="25.6043%" y="181" width="0.2860%" height="15" fill="rgb(250,162,2)" fg:x="8146" fg:w="91"/><text x="25.8543%" y="191.50"></text></g><g><title>&lt;backtrace::backtrace::Frame as core::clone::Clone&gt;::clone (284 samples, 0.89%)</title><rect x="25.3748%" y="261" width="0.8927%" height="15" fill="rgb(220,13,41)" fg:x="8073" fg:w="284"/><text x="25.6248%" y="271.50"></text></g><g><title>&lt;backtrace::backtrace::libunwind::Frame as core::clone::Clone&gt;::clone (245 samples, 0.77%)</title><rect x="25.4974%" y="245" width="0.7701%" height="15" fill="rgb(249,221,25)" fg:x="8112" fg:w="245"/><text x="25.7474%" y="255.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::symbol_address (245 samples, 0.77%)</title><rect x="25.4974%" y="229" width="0.7701%" height="15" fill="rgb(215,208,19)" fg:x="8112" fg:w="245"/><text x="25.7474%" y="239.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::ip (120 samples, 0.38%)</title><rect x="25.8903%" y="213" width="0.3772%" height="15" fill="rgb(236,175,2)" fg:x="8237" fg:w="120"/><text x="26.1403%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (30 samples, 0.09%)</title><rect x="26.2706%" y="197" width="0.0943%" height="15" fill="rgb(241,52,2)" fg:x="8358" fg:w="30"/><text x="26.5206%" y="207.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::realloc (18 samples, 0.06%)</title><rect x="26.4624%" y="133" width="0.0566%" height="15" fill="rgb(248,140,14)" fg:x="8419" fg:w="18"/><text x="26.7124%" y="143.50"></text></g><g><title>dhat::IgnoreAllocs::new (18 samples, 0.06%)</title><rect x="26.4624%" y="117" width="0.0566%" height="15" fill="rgb(253,22,42)" fg:x="8419" fg:w="18"/><text x="26.7124%" y="127.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (18 samples, 0.06%)</title><rect x="26.4624%" y="101" width="0.0566%" height="15" fill="rgb(234,61,47)" fg:x="8419" fg:w="18"/><text x="26.7124%" y="111.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (18 samples, 0.06%)</title><rect x="26.4624%" y="85" width="0.0566%" height="15" fill="rgb(208,226,15)" fg:x="8419" fg:w="18"/><text x="26.7124%" y="95.50"></text></g><g><title>core::ops::function::FnOnce::call_once (18 samples, 0.06%)</title><rect x="26.4624%" y="69" width="0.0566%" height="15" fill="rgb(217,221,4)" fg:x="8419" fg:w="18"/><text x="26.7124%" y="79.50"></text></g><g><title>dhat::IGNORE_ALLOCS::{{constant}}::{{closure}} (18 samples, 0.06%)</title><rect x="26.4624%" y="53" width="0.0566%" height="15" fill="rgb(212,174,34)" fg:x="8419" fg:w="18"/><text x="26.7124%" y="63.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (18 samples, 0.06%)</title><rect x="26.4624%" y="37" width="0.0566%" height="15" fill="rgb(253,83,4)" fg:x="8419" fg:w="18"/><text x="26.7124%" y="47.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (33 samples, 0.10%)</title><rect x="26.4215%" y="181" width="0.1037%" height="15" fill="rgb(250,195,49)" fg:x="8406" fg:w="33"/><text x="26.6715%" y="191.50"></text></g><g><title>alloc::alloc::Global::grow_impl (33 samples, 0.10%)</title><rect x="26.4215%" y="165" width="0.1037%" height="15" fill="rgb(241,192,25)" fg:x="8406" fg:w="33"/><text x="26.6715%" y="175.50"></text></g><g><title>alloc::alloc::realloc (33 samples, 0.10%)</title><rect x="26.4215%" y="149" width="0.1037%" height="15" fill="rgb(208,124,10)" fg:x="8406" fg:w="33"/><text x="26.6715%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (88 samples, 0.28%)</title><rect x="26.2675%" y="245" width="0.2766%" height="15" fill="rgb(222,33,0)" fg:x="8357" fg:w="88"/><text x="26.5175%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (88 samples, 0.28%)</title><rect x="26.2675%" y="229" width="0.2766%" height="15" fill="rgb(234,209,28)" fg:x="8357" fg:w="88"/><text x="26.5175%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (88 samples, 0.28%)</title><rect x="26.2675%" y="213" width="0.2766%" height="15" fill="rgb(224,11,23)" fg:x="8357" fg:w="88"/><text x="26.5175%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (57 samples, 0.18%)</title><rect x="26.3649%" y="197" width="0.1792%" height="15" fill="rgb(232,99,1)" fg:x="8388" fg:w="57"/><text x="26.6149%" y="207.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (6 samples, 0.02%)</title><rect x="26.5252%" y="181" width="0.0189%" height="15" fill="rgb(237,95,45)" fg:x="8439" fg:w="6"/><text x="26.7752%" y="191.50"></text></g><g><title>dhat::IgnoreAllocs::new (6 samples, 0.02%)</title><rect x="26.5252%" y="165" width="0.0189%" height="15" fill="rgb(208,109,11)" fg:x="8439" fg:w="6"/><text x="26.7752%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6 samples, 0.02%)</title><rect x="26.5252%" y="149" width="0.0189%" height="15" fill="rgb(216,190,48)" fg:x="8439" fg:w="6"/><text x="26.7752%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.02%)</title><rect x="26.5252%" y="133" width="0.0189%" height="15" fill="rgb(251,171,36)" fg:x="8439" fg:w="6"/><text x="26.7752%" y="143.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.02%)</title><rect x="26.5252%" y="117" width="0.0189%" height="15" fill="rgb(230,62,22)" fg:x="8439" fg:w="6"/><text x="26.7752%" y="127.50"></text></g><g><title>dhat::IGNORE_ALLOCS::{{constant}}::{{closure}} (6 samples, 0.02%)</title><rect x="26.5252%" y="101" width="0.0189%" height="15" fill="rgb(225,114,35)" fg:x="8439" fg:w="6"/><text x="26.7752%" y="111.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (6 samples, 0.02%)</title><rect x="26.5252%" y="85" width="0.0189%" height="15" fill="rgb(215,118,42)" fg:x="8439" fg:w="6"/><text x="26.7752%" y="95.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (517 samples, 1.63%)</title><rect x="26.2675%" y="261" width="1.6250%" height="15" fill="rgb(243,119,21)" fg:x="8357" fg:w="517"/><text x="26.5175%" y="271.50"></text></g><g><title>core::ptr::write (429 samples, 1.35%)</title><rect x="26.5441%" y="245" width="1.3484%" height="15" fill="rgb(252,177,53)" fg:x="8445" fg:w="429"/><text x="26.7941%" y="255.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1,036 samples, 3.26%)</title><rect x="24.7053%" y="357" width="3.2563%" height="15" fill="rgb(237,209,29)" fg:x="7860" fg:w="1036"/><text x="24.9553%" y="367.50">bac..</text></g><g><title>backtrace::backtrace::libunwind::trace (1,036 samples, 3.26%)</title><rect x="24.7053%" y="341" width="3.2563%" height="15" fill="rgb(212,65,23)" fg:x="7860" fg:w="1036"/><text x="24.9553%" y="351.50">bac..</text></g><g><title>_Unwind_Backtrace (1,036 samples, 3.26%)</title><rect x="24.7053%" y="325" width="3.2563%" height="15" fill="rgb(230,222,46)" fg:x="7860" fg:w="1036"/><text x="24.9553%" y="335.50">_Un..</text></g><g><title>backtrace::backtrace::libunwind::trace::trace_fn (893 samples, 2.81%)</title><rect x="25.1548%" y="309" width="2.8069%" height="15" fill="rgb(215,135,32)" fg:x="8003" fg:w="893"/><text x="25.4048%" y="319.50">ba..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (893 samples, 2.81%)</title><rect x="25.1548%" y="293" width="2.8069%" height="15" fill="rgb(246,101,22)" fg:x="8003" fg:w="893"/><text x="25.4048%" y="303.50">co..</text></g><g><title>dhat::new_backtrace_inner::{{closure}} (823 samples, 2.59%)</title><rect x="25.3748%" y="277" width="2.5868%" height="15" fill="rgb(206,107,13)" fg:x="8073" fg:w="823"/><text x="25.6248%" y="287.50">dh..</text></g><g><title>backtrace::backtrace::Frame::ip (22 samples, 0.07%)</title><rect x="27.8925%" y="261" width="0.0691%" height="15" fill="rgb(250,100,44)" fg:x="8874" fg:w="22"/><text x="28.1425%" y="271.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::ip (22 samples, 0.07%)</title><rect x="27.8925%" y="245" width="0.0691%" height="15" fill="rgb(231,147,38)" fg:x="8874" fg:w="22"/><text x="28.1425%" y="255.50"></text></g><g><title>backtrace::lock::lock (11 samples, 0.03%)</title><rect x="27.9617%" y="357" width="0.0346%" height="15" fill="rgb(229,8,40)" fg:x="8896" fg:w="11"/><text x="28.2117%" y="367.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (11 samples, 0.03%)</title><rect x="27.9617%" y="341" width="0.0346%" height="15" fill="rgb(221,135,30)" fg:x="8896" fg:w="11"/><text x="28.2117%" y="351.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (11 samples, 0.03%)</title><rect x="27.9617%" y="325" width="0.0346%" height="15" fill="rgb(249,193,18)" fg:x="8896" fg:w="11"/><text x="28.2117%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (11 samples, 0.03%)</title><rect x="27.9617%" y="309" width="0.0346%" height="15" fill="rgb(209,133,39)" fg:x="8896" fg:w="11"/><text x="28.2117%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (11 samples, 0.03%)</title><rect x="27.9617%" y="293" width="0.0346%" height="15" fill="rgb(232,100,14)" fg:x="8896" fg:w="11"/><text x="28.2117%" y="303.50"></text></g><g><title>dhat::new_backtrace_inner (1,155 samples, 3.63%)</title><rect x="24.3722%" y="389" width="3.6304%" height="15" fill="rgb(224,185,1)" fg:x="7754" fg:w="1155"/><text x="24.6222%" y="399.50">dhat..</text></g><g><title>backtrace::backtrace::trace (1,097 samples, 3.45%)</title><rect x="24.5545%" y="373" width="3.4481%" height="15" fill="rgb(223,139,8)" fg:x="7812" fg:w="1097"/><text x="24.8045%" y="383.50">bac..</text></g><g><title>std::sys::pal::unix::time::Timespec::now (5 samples, 0.02%)</title><rect x="28.0025%" y="389" width="0.0157%" height="15" fill="rgb(232,213,38)" fg:x="8909" fg:w="5"/><text x="28.2525%" y="399.50"></text></g><g><title>&lt;briolette_sim::TransactionCoin as core::clone::Clone&gt;::clone (1,861 samples, 5.85%)</title><rect x="22.1814%" y="629" width="5.8494%" height="15" fill="rgb(207,94,22)" fg:x="7057" fg:w="1861"/><text x="22.4314%" y="639.50">&lt;briole..</text></g><g><title>&lt;briolette_sim::Coin as core::clone::Clone&gt;::clone (1,861 samples, 5.85%)</title><rect x="22.1814%" y="613" width="5.8494%" height="15" fill="rgb(219,183,54)" fg:x="7057" fg:w="1861"/><text x="22.4314%" y="623.50">&lt;briole..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,855 samples, 5.83%)</title><rect x="22.2002%" y="597" width="5.8306%" height="15" fill="rgb(216,185,54)" fg:x="7063" fg:w="1855"/><text x="22.4502%" y="607.50">&lt;alloc:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,855 samples, 5.83%)</title><rect x="22.2002%" y="581" width="5.8306%" height="15" fill="rgb(254,217,39)" fg:x="7063" fg:w="1855"/><text x="22.4502%" y="591.50">alloc::..</text></g><g><title>alloc::slice::hack::to_vec (1,855 samples, 5.83%)</title><rect x="22.2002%" y="565" width="5.8306%" height="15" fill="rgb(240,178,23)" fg:x="7063" fg:w="1855"/><text x="22.4502%" y="575.50">alloc::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,855 samples, 5.83%)</title><rect x="22.2002%" y="549" width="5.8306%" height="15" fill="rgb(218,11,47)" fg:x="7063" fg:w="1855"/><text x="22.4502%" y="559.50">&lt;T as a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,855 samples, 5.83%)</title><rect x="22.2002%" y="533" width="5.8306%" height="15" fill="rgb(218,51,51)" fg:x="7063" fg:w="1855"/><text x="22.4502%" y="543.50">alloc::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,855 samples, 5.83%)</title><rect x="22.2002%" y="517" width="5.8306%" height="15" fill="rgb(238,126,27)" fg:x="7063" fg:w="1855"/><text x="22.4502%" y="527.50">alloc::..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,855 samples, 5.83%)</title><rect x="22.2002%" y="501" width="5.8306%" height="15" fill="rgb(249,202,22)" fg:x="7063" fg:w="1855"/><text x="22.4502%" y="511.50">alloc::..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,855 samples, 5.83%)</title><rect x="22.2002%" y="485" width="5.8306%" height="15" fill="rgb(254,195,49)" fg:x="7063" fg:w="1855"/><text x="22.4502%" y="495.50">alloc::..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,855 samples, 5.83%)</title><rect x="22.2002%" y="469" width="5.8306%" height="15" fill="rgb(208,123,14)" fg:x="7063" fg:w="1855"/><text x="22.4502%" y="479.50">&lt;alloc:..</text></g><g><title>alloc::alloc::Global::alloc_impl (1,855 samples, 5.83%)</title><rect x="22.2002%" y="453" width="5.8306%" height="15" fill="rgb(224,200,8)" fg:x="7063" fg:w="1855"/><text x="22.4502%" y="463.50">alloc::..</text></g><g><title>alloc::alloc::alloc (1,855 samples, 5.83%)</title><rect x="22.2002%" y="437" width="5.8306%" height="15" fill="rgb(217,61,36)" fg:x="7063" fg:w="1855"/><text x="22.4502%" y="447.50">alloc::..</text></g><g><title>__rust_alloc (1,855 samples, 5.83%)</title><rect x="22.2002%" y="421" width="5.8306%" height="15" fill="rgb(206,35,45)" fg:x="7063" fg:w="1855"/><text x="22.4502%" y="431.50">__rust_..</text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (1,855 samples, 5.83%)</title><rect x="22.2002%" y="405" width="5.8306%" height="15" fill="rgb(217,65,33)" fg:x="7063" fg:w="1855"/><text x="22.4502%" y="415.50">&lt;dhat::..</text></g><g><title>std::time::Instant::now (4 samples, 0.01%)</title><rect x="28.0182%" y="389" width="0.0126%" height="15" fill="rgb(222,158,48)" fg:x="8914" fg:w="4"/><text x="28.2682%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.01%)</title><rect x="28.0371%" y="437" width="0.0126%" height="15" fill="rgb(254,2,54)" fg:x="8920" fg:w="4"/><text x="28.2871%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.01%)</title><rect x="28.0371%" y="421" width="0.0126%" height="15" fill="rgb(250,143,38)" fg:x="8920" fg:w="4"/><text x="28.2871%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 0.01%)</title><rect x="28.0371%" y="405" width="0.0126%" height="15" fill="rgb(248,25,0)" fg:x="8920" fg:w="4"/><text x="28.2871%" y="415.50"></text></g><g><title>&lt;dhat::Backtrace as core::hash::Hash&gt;::hash (4 samples, 0.01%)</title><rect x="28.0371%" y="389" width="0.0126%" height="15" fill="rgb(206,152,27)" fg:x="8920" fg:w="4"/><text x="28.2871%" y="399.50"></text></g><g><title>dhat::Globals::get_pp_info (11 samples, 0.03%)</title><rect x="28.0371%" y="485" width="0.0346%" height="15" fill="rgb(240,77,30)" fg:x="8920" fg:w="11"/><text x="28.2871%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (11 samples, 0.03%)</title><rect x="28.0371%" y="469" width="0.0346%" height="15" fill="rgb(231,5,3)" fg:x="8920" fg:w="11"/><text x="28.2871%" y="479.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (11 samples, 0.03%)</title><rect x="28.0371%" y="453" width="0.0346%" height="15" fill="rgb(207,226,32)" fg:x="8920" fg:w="11"/><text x="28.2871%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (7 samples, 0.02%)</title><rect x="28.0497%" y="437" width="0.0220%" height="15" fill="rgb(222,207,47)" fg:x="8924" fg:w="7"/><text x="28.2997%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (7 samples, 0.02%)</title><rect x="28.0497%" y="421" width="0.0220%" height="15" fill="rgb(229,115,45)" fg:x="8924" fg:w="7"/><text x="28.2997%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (7 samples, 0.02%)</title><rect x="28.0497%" y="405" width="0.0220%" height="15" fill="rgb(224,191,6)" fg:x="8924" fg:w="7"/><text x="28.2997%" y="415.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (7 samples, 0.02%)</title><rect x="28.0497%" y="389" width="0.0220%" height="15" fill="rgb(230,227,24)" fg:x="8924" fg:w="7"/><text x="28.2997%" y="399.50"></text></g><g><title>&lt;dhat::Backtrace as core::cmp::PartialEq&gt;::eq (7 samples, 0.02%)</title><rect x="28.0497%" y="373" width="0.0220%" height="15" fill="rgb(228,80,19)" fg:x="8924" fg:w="7"/><text x="28.2997%" y="383.50"></text></g><g><title>dhat::Globals::record_block (17 samples, 0.05%)</title><rect x="28.0717%" y="485" width="0.0534%" height="15" fill="rgb(247,229,0)" fg:x="8931" fg:w="17"/><text x="28.3217%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (17 samples, 0.05%)</title><rect x="28.0717%" y="469" width="0.0534%" height="15" fill="rgb(237,194,15)" fg:x="8931" fg:w="17"/><text x="28.3217%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (17 samples, 0.05%)</title><rect x="28.0717%" y="453" width="0.0534%" height="15" fill="rgb(219,203,20)" fg:x="8931" fg:w="17"/><text x="28.3217%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (17 samples, 0.05%)</title><rect x="28.0717%" y="437" width="0.0534%" height="15" fill="rgb(234,128,8)" fg:x="8931" fg:w="17"/><text x="28.3217%" y="447.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (17 samples, 0.05%)</title><rect x="28.0717%" y="421" width="0.0534%" height="15" fill="rgb(248,202,8)" fg:x="8931" fg:w="17"/><text x="28.3217%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (17 samples, 0.05%)</title><rect x="28.0717%" y="405" width="0.0534%" height="15" fill="rgb(206,104,37)" fg:x="8931" fg:w="17"/><text x="28.3217%" y="415.50"></text></g><g><title>core::ptr::write (17 samples, 0.05%)</title><rect x="28.0717%" y="389" width="0.0534%" height="15" fill="rgb(223,8,27)" fg:x="8931" fg:w="17"/><text x="28.3217%" y="399.50"></text></g><g><title>_Unwind_Find_FDE (10 samples, 0.03%)</title><rect x="28.1377%" y="405" width="0.0314%" height="15" fill="rgb(216,217,28)" fg:x="8952" fg:w="10"/><text x="28.3877%" y="415.50"></text></g><g><title>__GI__dl_find_object (10 samples, 0.03%)</title><rect x="28.1377%" y="389" width="0.0314%" height="15" fill="rgb(249,199,1)" fg:x="8952" fg:w="10"/><text x="28.3877%" y="399.50"></text></g><g><title>_Unwind_FindEnclosingFunction (6 samples, 0.02%)</title><rect x="28.1754%" y="309" width="0.0189%" height="15" fill="rgb(240,85,17)" fg:x="8964" fg:w="6"/><text x="28.4254%" y="319.50"></text></g><g><title>_Unwind_Find_FDE (6 samples, 0.02%)</title><rect x="28.1754%" y="293" width="0.0189%" height="15" fill="rgb(206,108,45)" fg:x="8964" fg:w="6"/><text x="28.4254%" y="303.50"></text></g><g><title>__GI__dl_find_object (5 samples, 0.02%)</title><rect x="28.1785%" y="277" width="0.0157%" height="15" fill="rgb(245,210,41)" fg:x="8965" fg:w="5"/><text x="28.4285%" y="287.50"></text></g><g><title>&lt;backtrace::backtrace::Frame as core::clone::Clone&gt;::clone (8 samples, 0.03%)</title><rect x="28.1754%" y="357" width="0.0251%" height="15" fill="rgb(206,13,37)" fg:x="8964" fg:w="8"/><text x="28.4254%" y="367.50"></text></g><g><title>&lt;backtrace::backtrace::libunwind::Frame as core::clone::Clone&gt;::clone (8 samples, 0.03%)</title><rect x="28.1754%" y="341" width="0.0251%" height="15" fill="rgb(250,61,18)" fg:x="8964" fg:w="8"/><text x="28.4254%" y="351.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::symbol_address (8 samples, 0.03%)</title><rect x="28.1754%" y="325" width="0.0251%" height="15" fill="rgb(235,172,48)" fg:x="8964" fg:w="8"/><text x="28.4254%" y="335.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (49 samples, 0.15%)</title><rect x="28.1377%" y="453" width="0.1540%" height="15" fill="rgb(249,201,17)" fg:x="8952" fg:w="49"/><text x="28.3877%" y="463.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (49 samples, 0.15%)</title><rect x="28.1377%" y="437" width="0.1540%" height="15" fill="rgb(219,208,6)" fg:x="8952" fg:w="49"/><text x="28.3877%" y="447.50"></text></g><g><title>_Unwind_Backtrace (49 samples, 0.15%)</title><rect x="28.1377%" y="421" width="0.1540%" height="15" fill="rgb(248,31,23)" fg:x="8952" fg:w="49"/><text x="28.3877%" y="431.50"></text></g><g><title>backtrace::backtrace::libunwind::trace::trace_fn (39 samples, 0.12%)</title><rect x="28.1691%" y="405" width="0.1226%" height="15" fill="rgb(245,15,42)" fg:x="8962" fg:w="39"/><text x="28.4191%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (39 samples, 0.12%)</title><rect x="28.1691%" y="389" width="0.1226%" height="15" fill="rgb(222,217,39)" fg:x="8962" fg:w="39"/><text x="28.4191%" y="399.50"></text></g><g><title>dhat::new_backtrace_inner::{{closure}} (37 samples, 0.12%)</title><rect x="28.1754%" y="373" width="0.1163%" height="15" fill="rgb(210,219,27)" fg:x="8964" fg:w="37"/><text x="28.4254%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (29 samples, 0.09%)</title><rect x="28.2005%" y="357" width="0.0912%" height="15" fill="rgb(252,166,36)" fg:x="8972" fg:w="29"/><text x="28.4505%" y="367.50"></text></g><g><title>core::ptr::write (26 samples, 0.08%)</title><rect x="28.2100%" y="341" width="0.0817%" height="15" fill="rgb(245,132,34)" fg:x="8975" fg:w="26"/><text x="28.4600%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (86 samples, 0.27%)</title><rect x="28.0308%" y="629" width="0.2703%" height="15" fill="rgb(236,54,3)" fg:x="8918" fg:w="86"/><text x="28.2808%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (86 samples, 0.27%)</title><rect x="28.0308%" y="613" width="0.2703%" height="15" fill="rgb(241,173,43)" fg:x="8918" fg:w="86"/><text x="28.2808%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (86 samples, 0.27%)</title><rect x="28.0308%" y="597" width="0.2703%" height="15" fill="rgb(215,190,9)" fg:x="8918" fg:w="86"/><text x="28.2808%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (86 samples, 0.27%)</title><rect x="28.0308%" y="581" width="0.2703%" height="15" fill="rgb(242,101,16)" fg:x="8918" fg:w="86"/><text x="28.2808%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (86 samples, 0.27%)</title><rect x="28.0308%" y="565" width="0.2703%" height="15" fill="rgb(223,190,21)" fg:x="8918" fg:w="86"/><text x="28.2808%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (86 samples, 0.27%)</title><rect x="28.0308%" y="549" width="0.2703%" height="15" fill="rgb(215,228,25)" fg:x="8918" fg:w="86"/><text x="28.2808%" y="559.50"></text></g><g><title>alloc::alloc::alloc (86 samples, 0.27%)</title><rect x="28.0308%" y="533" width="0.2703%" height="15" fill="rgb(225,36,22)" fg:x="8918" fg:w="86"/><text x="28.2808%" y="543.50"></text></g><g><title>__rust_alloc (86 samples, 0.27%)</title><rect x="28.0308%" y="517" width="0.2703%" height="15" fill="rgb(251,106,46)" fg:x="8918" fg:w="86"/><text x="28.2808%" y="527.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (84 samples, 0.26%)</title><rect x="28.0371%" y="501" width="0.2640%" height="15" fill="rgb(208,90,1)" fg:x="8920" fg:w="84"/><text x="28.2871%" y="511.50"></text></g><g><title>dhat::new_backtrace_inner (55 samples, 0.17%)</title><rect x="28.1282%" y="485" width="0.1729%" height="15" fill="rgb(243,10,4)" fg:x="8949" fg:w="55"/><text x="28.3782%" y="495.50"></text></g><g><title>backtrace::backtrace::trace (53 samples, 0.17%)</title><rect x="28.1345%" y="469" width="0.1666%" height="15" fill="rgb(212,137,27)" fg:x="8951" fg:w="53"/><text x="28.3845%" y="479.50"></text></g><g><title>&lt;absim::EventQueue&lt;S&gt; as absim::Enqueue&lt;S&gt;&gt;::enqueue (2,066 samples, 6.49%)</title><rect x="22.1059%" y="741" width="6.4938%" height="15" fill="rgb(231,220,49)" fg:x="7033" fg:w="2066"/><text x="22.3559%" y="751.50">&lt;absim::E..</text></g><g><title>&lt;briolette_sim::EventData as core::clone::Clone&gt;::clone (2,064 samples, 6.49%)</title><rect x="22.1122%" y="725" width="6.4875%" height="15" fill="rgb(237,96,20)" fg:x="7035" fg:w="2064"/><text x="22.3622%" y="735.50">&lt;briolet..</text></g><g><title>&lt;briolette_sim::TransactData as core::clone::Clone&gt;::clone (2,042 samples, 6.42%)</title><rect x="22.1814%" y="709" width="6.4184%" height="15" fill="rgb(239,229,30)" fg:x="7057" fg:w="2042"/><text x="22.4314%" y="719.50">&lt;briolet..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,042 samples, 6.42%)</title><rect x="22.1814%" y="693" width="6.4184%" height="15" fill="rgb(219,65,33)" fg:x="7057" fg:w="2042"/><text x="22.4314%" y="703.50">&lt;alloc::..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,042 samples, 6.42%)</title><rect x="22.1814%" y="677" width="6.4184%" height="15" fill="rgb(243,134,7)" fg:x="7057" fg:w="2042"/><text x="22.4314%" y="687.50">alloc::s..</text></g><g><title>alloc::slice::hack::to_vec (2,042 samples, 6.42%)</title><rect x="22.1814%" y="661" width="6.4184%" height="15" fill="rgb(216,177,54)" fg:x="7057" fg:w="2042"/><text x="22.4314%" y="671.50">alloc::s..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,042 samples, 6.42%)</title><rect x="22.1814%" y="645" width="6.4184%" height="15" fill="rgb(211,160,20)" fg:x="7057" fg:w="2042"/><text x="22.4314%" y="655.50">&lt;T as al..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (95 samples, 0.30%)</title><rect x="28.3011%" y="629" width="0.2986%" height="15" fill="rgb(239,85,39)" fg:x="9004" fg:w="95"/><text x="28.5511%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (326 samples, 1.02%)</title><rect x="28.5997%" y="709" width="1.0247%" height="15" fill="rgb(232,125,22)" fg:x="9099" fg:w="326"/><text x="28.8497%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (326 samples, 1.02%)</title><rect x="28.5997%" y="693" width="1.0247%" height="15" fill="rgb(244,57,34)" fg:x="9099" fg:w="326"/><text x="28.8497%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.10%)</title><rect x="29.6715%" y="421" width="0.1006%" height="15" fill="rgb(214,203,32)" fg:x="9440" fg:w="32"/><text x="29.9215%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;dhat::Backtrace&gt; (42 samples, 0.13%)</title><rect x="29.6715%" y="469" width="0.1320%" height="15" fill="rgb(207,58,43)" fg:x="9440" fg:w="42"/><text x="29.9215%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;backtrace::capture::Backtrace&gt; (42 samples, 0.13%)</title><rect x="29.6715%" y="453" width="0.1320%" height="15" fill="rgb(215,193,15)" fg:x="9440" fg:w="42"/><text x="29.9215%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;backtrace::capture::BacktraceFrame&gt;&gt; (42 samples, 0.13%)</title><rect x="29.6715%" y="437" width="0.1320%" height="15" fill="rgb(232,15,44)" fg:x="9440" fg:w="42"/><text x="29.9215%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;backtrace::capture::BacktraceFrame&gt;&gt; (10 samples, 0.03%)</title><rect x="29.7721%" y="421" width="0.0314%" height="15" fill="rgb(212,3,48)" fg:x="9472" fg:w="10"/><text x="30.0221%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.03%)</title><rect x="29.7721%" y="405" width="0.0314%" height="15" fill="rgb(218,128,7)" fg:x="9472" fg:w="10"/><text x="30.0221%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (10 samples, 0.03%)</title><rect x="29.7721%" y="389" width="0.0314%" height="15" fill="rgb(226,216,39)" fg:x="9472" fg:w="10"/><text x="30.0221%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.03%)</title><rect x="29.7721%" y="373" width="0.0314%" height="15" fill="rgb(243,47,51)" fg:x="9472" fg:w="10"/><text x="30.0221%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.03%)</title><rect x="29.7721%" y="357" width="0.0314%" height="15" fill="rgb(241,183,40)" fg:x="9472" fg:w="10"/><text x="30.0221%" y="367.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::dealloc (10 samples, 0.03%)</title><rect x="29.7721%" y="341" width="0.0314%" height="15" fill="rgb(231,217,32)" fg:x="9472" fg:w="10"/><text x="30.0221%" y="351.50"></text></g><g><title>hashbrown::map::make_hash (82 samples, 0.26%)</title><rect x="29.8036%" y="469" width="0.2577%" height="15" fill="rgb(229,61,38)" fg:x="9482" fg:w="82"/><text x="30.0536%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (82 samples, 0.26%)</title><rect x="29.8036%" y="453" width="0.2577%" height="15" fill="rgb(225,210,5)" fg:x="9482" fg:w="82"/><text x="30.0536%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (82 samples, 0.26%)</title><rect x="29.8036%" y="437" width="0.2577%" height="15" fill="rgb(231,79,45)" fg:x="9482" fg:w="82"/><text x="30.0536%" y="447.50"></text></g><g><title>&lt;dhat::Backtrace as core::hash::Hash&gt;::hash (82 samples, 0.26%)</title><rect x="29.8036%" y="421" width="0.2577%" height="15" fill="rgb(224,100,7)" fg:x="9482" fg:w="82"/><text x="30.0536%" y="431.50"></text></g><g><title>dhat::Globals::get_pp_info (173 samples, 0.54%)</title><rect x="29.6590%" y="517" width="0.5438%" height="15" fill="rgb(241,198,18)" fg:x="9436" fg:w="173"/><text x="29.9090%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (173 samples, 0.54%)</title><rect x="29.6590%" y="501" width="0.5438%" height="15" fill="rgb(252,97,53)" fg:x="9436" fg:w="173"/><text x="29.9090%" y="511.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (169 samples, 0.53%)</title><rect x="29.6715%" y="485" width="0.5312%" height="15" fill="rgb(220,88,7)" fg:x="9440" fg:w="169"/><text x="29.9215%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (45 samples, 0.14%)</title><rect x="30.0613%" y="469" width="0.1414%" height="15" fill="rgb(213,176,14)" fg:x="9564" fg:w="45"/><text x="30.3113%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (45 samples, 0.14%)</title><rect x="30.0613%" y="453" width="0.1414%" height="15" fill="rgb(246,73,7)" fg:x="9564" fg:w="45"/><text x="30.3113%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (45 samples, 0.14%)</title><rect x="30.0613%" y="437" width="0.1414%" height="15" fill="rgb(245,64,36)" fg:x="9564" fg:w="45"/><text x="30.3113%" y="447.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (45 samples, 0.14%)</title><rect x="30.0613%" y="421" width="0.1414%" height="15" fill="rgb(245,80,10)" fg:x="9564" fg:w="45"/><text x="30.3113%" y="431.50"></text></g><g><title>&lt;dhat::Backtrace as core::cmp::PartialEq&gt;::eq (45 samples, 0.14%)</title><rect x="30.0613%" y="405" width="0.1414%" height="15" fill="rgb(232,107,50)" fg:x="9564" fg:w="45"/><text x="30.3113%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (45 samples, 0.14%)</title><rect x="30.0613%" y="389" width="0.1414%" height="15" fill="rgb(253,3,0)" fg:x="9564" fg:w="45"/><text x="30.3113%" y="399.50"></text></g><g><title>&lt;dhat::Backtrace as core::cmp::PartialEq&gt;::eq::{{closure}} (45 samples, 0.14%)</title><rect x="30.0613%" y="373" width="0.1414%" height="15" fill="rgb(212,99,53)" fg:x="9564" fg:w="45"/><text x="30.3113%" y="383.50"></text></g><g><title>backtrace::capture::BacktraceFrame::ip (26 samples, 0.08%)</title><rect x="30.1210%" y="357" width="0.0817%" height="15" fill="rgb(249,111,54)" fg:x="9583" fg:w="26"/><text x="30.3710%" y="367.50"></text></g><g><title>backtrace::capture::Frame::ip (26 samples, 0.08%)</title><rect x="30.1210%" y="341" width="0.0817%" height="15" fill="rgb(249,55,30)" fg:x="9583" fg:w="26"/><text x="30.3710%" y="351.50"></text></g><g><title>backtrace::backtrace::Frame::ip (26 samples, 0.08%)</title><rect x="30.1210%" y="325" width="0.0817%" height="15" fill="rgb(237,47,42)" fg:x="9583" fg:w="26"/><text x="30.3710%" y="335.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::ip (26 samples, 0.08%)</title><rect x="30.1210%" y="309" width="0.0817%" height="15" fill="rgb(211,20,18)" fg:x="9583" fg:w="26"/><text x="30.3710%" y="319.50"></text></g><g><title>dhat::Globals::record_block (148 samples, 0.47%)</title><rect x="30.2027%" y="517" width="0.4652%" height="15" fill="rgb(231,203,46)" fg:x="9609" fg:w="148"/><text x="30.4527%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (148 samples, 0.47%)</title><rect x="30.2027%" y="501" width="0.4652%" height="15" fill="rgb(237,142,3)" fg:x="9609" fg:w="148"/><text x="30.4527%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (148 samples, 0.47%)</title><rect x="30.2027%" y="485" width="0.4652%" height="15" fill="rgb(241,107,1)" fg:x="9609" fg:w="148"/><text x="30.4527%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (148 samples, 0.47%)</title><rect x="30.2027%" y="469" width="0.4652%" height="15" fill="rgb(229,83,13)" fg:x="9609" fg:w="148"/><text x="30.4527%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (148 samples, 0.47%)</title><rect x="30.2027%" y="453" width="0.4652%" height="15" fill="rgb(241,91,40)" fg:x="9609" fg:w="148"/><text x="30.4527%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (148 samples, 0.47%)</title><rect x="30.2027%" y="437" width="0.4652%" height="15" fill="rgb(225,3,45)" fg:x="9609" fg:w="148"/><text x="30.4527%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (148 samples, 0.47%)</title><rect x="30.2027%" y="421" width="0.4652%" height="15" fill="rgb(244,223,14)" fg:x="9609" fg:w="148"/><text x="30.4527%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (148 samples, 0.47%)</title><rect x="30.2027%" y="405" width="0.4652%" height="15" fill="rgb(224,124,37)" fg:x="9609" fg:w="148"/><text x="30.4527%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (148 samples, 0.47%)</title><rect x="30.2027%" y="389" width="0.4652%" height="15" fill="rgb(251,171,30)" fg:x="9609" fg:w="148"/><text x="30.4527%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (60 samples, 0.19%)</title><rect x="30.6679%" y="501" width="0.1886%" height="15" fill="rgb(236,46,54)" fg:x="9757" fg:w="60"/><text x="30.9179%" y="511.50"></text></g><g><title>Unknown (37 samples, 0.12%)</title><rect x="30.8691%" y="421" width="0.1163%" height="15" fill="rgb(245,213,5)" fg:x="9821" fg:w="37"/><text x="31.1191%" y="431.50"></text></g><g><title>_Unwind_Find_FDE (119 samples, 0.37%)</title><rect x="30.8691%" y="437" width="0.3740%" height="15" fill="rgb(230,144,27)" fg:x="9821" fg:w="119"/><text x="31.1191%" y="447.50"></text></g><g><title>__GI__dl_find_object (82 samples, 0.26%)</title><rect x="30.9854%" y="421" width="0.2577%" height="15" fill="rgb(220,86,6)" fg:x="9858" fg:w="82"/><text x="31.2354%" y="431.50"></text></g><g><title>_dlfo_lookup (14 samples, 0.04%)</title><rect x="31.1991%" y="405" width="0.0440%" height="15" fill="rgb(240,20,13)" fg:x="9926" fg:w="14"/><text x="31.4491%" y="415.50"></text></g><g><title>Unknown (22 samples, 0.07%)</title><rect x="31.5260%" y="309" width="0.0691%" height="15" fill="rgb(217,89,34)" fg:x="10030" fg:w="22"/><text x="31.7760%" y="319.50"></text></g><g><title>_Unwind_FindEnclosingFunction (81 samples, 0.25%)</title><rect x="31.5260%" y="341" width="0.2546%" height="15" fill="rgb(229,13,5)" fg:x="10030" fg:w="81"/><text x="31.7760%" y="351.50"></text></g><g><title>_Unwind_Find_FDE (81 samples, 0.25%)</title><rect x="31.5260%" y="325" width="0.2546%" height="15" fill="rgb(244,67,35)" fg:x="10030" fg:w="81"/><text x="31.7760%" y="335.50"></text></g><g><title>__GI__dl_find_object (59 samples, 0.19%)</title><rect x="31.5952%" y="309" width="0.1854%" height="15" fill="rgb(221,40,2)" fg:x="10052" fg:w="59"/><text x="31.8452%" y="319.50"></text></g><g><title>&lt;backtrace::backtrace::Frame as core::clone::Clone&gt;::clone (201 samples, 0.63%)</title><rect x="31.4506%" y="389" width="0.6318%" height="15" fill="rgb(237,157,21)" fg:x="10006" fg:w="201"/><text x="31.7006%" y="399.50"></text></g><g><title>&lt;backtrace::backtrace::libunwind::Frame as core::clone::Clone&gt;::clone (177 samples, 0.56%)</title><rect x="31.5260%" y="373" width="0.5563%" height="15" fill="rgb(222,94,11)" fg:x="10030" fg:w="177"/><text x="31.7760%" y="383.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::symbol_address (177 samples, 0.56%)</title><rect x="31.5260%" y="357" width="0.5563%" height="15" fill="rgb(249,113,6)" fg:x="10030" fg:w="177"/><text x="31.7760%" y="367.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::ip (96 samples, 0.30%)</title><rect x="31.7806%" y="341" width="0.3017%" height="15" fill="rgb(238,137,36)" fg:x="10111" fg:w="96"/><text x="32.0306%" y="351.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::realloc (6 samples, 0.02%)</title><rect x="32.1012%" y="261" width="0.0189%" height="15" fill="rgb(210,102,26)" fg:x="10213" fg:w="6"/><text x="32.3512%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (14 samples, 0.04%)</title><rect x="32.0824%" y="309" width="0.0440%" height="15" fill="rgb(218,30,30)" fg:x="10207" fg:w="14"/><text x="32.3324%" y="319.50"></text></g><g><title>alloc::alloc::Global::grow_impl (14 samples, 0.04%)</title><rect x="32.0824%" y="293" width="0.0440%" height="15" fill="rgb(214,67,26)" fg:x="10207" fg:w="14"/><text x="32.3324%" y="303.50"></text></g><g><title>alloc::alloc::realloc (14 samples, 0.04%)</title><rect x="32.0824%" y="277" width="0.0440%" height="15" fill="rgb(251,9,53)" fg:x="10207" fg:w="14"/><text x="32.3324%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (26 samples, 0.08%)</title><rect x="32.0824%" y="325" width="0.0817%" height="15" fill="rgb(228,204,25)" fg:x="10207" fg:w="26"/><text x="32.3324%" y="335.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (10 samples, 0.03%)</title><rect x="32.1326%" y="309" width="0.0314%" height="15" fill="rgb(207,153,8)" fg:x="10223" fg:w="10"/><text x="32.3826%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (46 samples, 0.14%)</title><rect x="32.0824%" y="389" width="0.1446%" height="15" fill="rgb(242,9,16)" fg:x="10207" fg:w="46"/><text x="32.3324%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (46 samples, 0.14%)</title><rect x="32.0824%" y="373" width="0.1446%" height="15" fill="rgb(217,211,10)" fg:x="10207" fg:w="46"/><text x="32.3324%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (46 samples, 0.14%)</title><rect x="32.0824%" y="357" width="0.1446%" height="15" fill="rgb(219,228,52)" fg:x="10207" fg:w="46"/><text x="32.3324%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (46 samples, 0.14%)</title><rect x="32.0824%" y="341" width="0.1446%" height="15" fill="rgb(231,92,29)" fg:x="10207" fg:w="46"/><text x="32.3324%" y="351.50"></text></g><g><title>alloc::raw_vec::layout_array (20 samples, 0.06%)</title><rect x="32.1641%" y="325" width="0.0629%" height="15" fill="rgb(232,8,23)" fg:x="10233" fg:w="20"/><text x="32.4141%" y="335.50"></text></g><g><title>core::alloc::layout::Layout::repeat (20 samples, 0.06%)</title><rect x="32.1641%" y="309" width="0.0629%" height="15" fill="rgb(216,211,34)" fg:x="10233" fg:w="20"/><text x="32.4141%" y="319.50"></text></g><g><title>backtrace::backtrace::Frame::ip (23 samples, 0.07%)</title><rect x="32.2269%" y="389" width="0.0723%" height="15" fill="rgb(236,151,0)" fg:x="10253" fg:w="23"/><text x="32.4769%" y="399.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::ip (23 samples, 0.07%)</title><rect x="32.2269%" y="373" width="0.0723%" height="15" fill="rgb(209,168,3)" fg:x="10253" fg:w="23"/><text x="32.4769%" y="383.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (809 samples, 2.54%)</title><rect x="30.8565%" y="485" width="2.5428%" height="15" fill="rgb(208,129,28)" fg:x="9817" fg:w="809"/><text x="31.1065%" y="495.50">ba..</text></g><g><title>backtrace::backtrace::libunwind::trace (809 samples, 2.54%)</title><rect x="30.8565%" y="469" width="2.5428%" height="15" fill="rgb(229,78,22)" fg:x="9817" fg:w="809"/><text x="31.1065%" y="479.50">ba..</text></g><g><title>_Unwind_Backtrace (809 samples, 2.54%)</title><rect x="30.8565%" y="453" width="2.5428%" height="15" fill="rgb(228,187,13)" fg:x="9817" fg:w="809"/><text x="31.1065%" y="463.50">_U..</text></g><g><title>backtrace::backtrace::libunwind::trace::trace_fn (686 samples, 2.16%)</title><rect x="31.2431%" y="437" width="2.1562%" height="15" fill="rgb(240,119,24)" fg:x="9940" fg:w="686"/><text x="31.4931%" y="447.50">b..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (655 samples, 2.06%)</title><rect x="31.3406%" y="421" width="2.0588%" height="15" fill="rgb(209,194,42)" fg:x="9971" fg:w="655"/><text x="31.5906%" y="431.50">c..</text></g><g><title>dhat::new_backtrace_inner::{{closure}} (620 samples, 1.95%)</title><rect x="31.4506%" y="405" width="1.9488%" height="15" fill="rgb(247,200,46)" fg:x="10006" fg:w="620"/><text x="31.7006%" y="415.50">d..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (350 samples, 1.10%)</title><rect x="32.2992%" y="389" width="1.1001%" height="15" fill="rgb(218,76,16)" fg:x="10276" fg:w="350"/><text x="32.5492%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (350 samples, 1.10%)</title><rect x="32.2992%" y="373" width="1.1001%" height="15" fill="rgb(225,21,48)" fg:x="10276" fg:w="350"/><text x="32.5492%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (350 samples, 1.10%)</title><rect x="32.2992%" y="357" width="1.1001%" height="15" fill="rgb(239,223,50)" fg:x="10276" fg:w="350"/><text x="32.5492%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (350 samples, 1.10%)</title><rect x="32.2992%" y="341" width="1.1001%" height="15" fill="rgb(244,45,21)" fg:x="10276" fg:w="350"/><text x="32.5492%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (350 samples, 1.10%)</title><rect x="32.2992%" y="325" width="1.1001%" height="15" fill="rgb(232,33,43)" fg:x="10276" fg:w="350"/><text x="32.5492%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (350 samples, 1.10%)</title><rect x="32.2992%" y="309" width="1.1001%" height="15" fill="rgb(209,8,3)" fg:x="10276" fg:w="350"/><text x="32.5492%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (350 samples, 1.10%)</title><rect x="32.2992%" y="293" width="1.1001%" height="15" fill="rgb(214,25,53)" fg:x="10276" fg:w="350"/><text x="32.5492%" y="303.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (350 samples, 1.10%)</title><rect x="32.2992%" y="277" width="1.1001%" height="15" fill="rgb(254,186,54)" fg:x="10276" fg:w="350"/><text x="32.5492%" y="287.50"></text></g><g><title>backtrace::lock::lock (9 samples, 0.03%)</title><rect x="33.3993%" y="485" width="0.0283%" height="15" fill="rgb(208,174,49)" fg:x="10626" fg:w="9"/><text x="33.6493%" y="495.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (9 samples, 0.03%)</title><rect x="33.3993%" y="469" width="0.0283%" height="15" fill="rgb(233,191,51)" fg:x="10626" fg:w="9"/><text x="33.6493%" y="479.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (9 samples, 0.03%)</title><rect x="33.3993%" y="453" width="0.0283%" height="15" fill="rgb(222,134,10)" fg:x="10626" fg:w="9"/><text x="33.6493%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (9 samples, 0.03%)</title><rect x="33.3993%" y="437" width="0.0283%" height="15" fill="rgb(230,226,20)" fg:x="10626" fg:w="9"/><text x="33.6493%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (9 samples, 0.03%)</title><rect x="33.3993%" y="421" width="0.0283%" height="15" fill="rgb(251,111,25)" fg:x="10626" fg:w="9"/><text x="33.6493%" y="431.50"></text></g><g><title>dhat::new_backtrace_inner (919 samples, 2.89%)</title><rect x="30.6679%" y="517" width="2.8886%" height="15" fill="rgb(224,40,46)" fg:x="9757" fg:w="919"/><text x="30.9179%" y="527.50">dh..</text></g><g><title>backtrace::backtrace::trace (859 samples, 2.70%)</title><rect x="30.8565%" y="501" width="2.7000%" height="15" fill="rgb(236,108,47)" fg:x="9817" fg:w="859"/><text x="31.1065%" y="511.50">ba..</text></g><g><title>core::ptr::drop_in_place&lt;backtrace::lock::LockGuard&gt; (41 samples, 0.13%)</title><rect x="33.4276%" y="485" width="0.1289%" height="15" fill="rgb(234,93,0)" fg:x="10635" fg:w="41"/><text x="33.6776%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt;&gt; (38 samples, 0.12%)</title><rect x="33.4371%" y="469" width="0.1194%" height="15" fill="rgb(224,213,32)" fg:x="10638" fg:w="38"/><text x="33.6871%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (38 samples, 0.12%)</title><rect x="33.4371%" y="453" width="0.1194%" height="15" fill="rgb(251,11,48)" fg:x="10638" fg:w="38"/><text x="33.6871%" y="463.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.12%)</title><rect x="33.4371%" y="437" width="0.1194%" height="15" fill="rgb(236,173,5)" fg:x="10638" fg:w="38"/><text x="33.6871%" y="447.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (38 samples, 0.12%)</title><rect x="33.4371%" y="421" width="0.1194%" height="15" fill="rgb(230,95,12)" fg:x="10638" fg:w="38"/><text x="33.6871%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (38 samples, 0.12%)</title><rect x="33.4371%" y="405" width="0.1194%" height="15" fill="rgb(232,209,1)" fg:x="10638" fg:w="38"/><text x="33.6871%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_swap (38 samples, 0.12%)</title><rect x="33.4371%" y="389" width="0.1194%" height="15" fill="rgb(232,6,1)" fg:x="10638" fg:w="38"/><text x="33.6871%" y="399.50"></text></g><g><title>mintex::Mutex&lt;T&gt;::lock (23 samples, 0.07%)</title><rect x="33.5565%" y="517" width="0.0723%" height="15" fill="rgb(210,224,50)" fg:x="10676" fg:w="23"/><text x="33.8065%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (23 samples, 0.07%)</title><rect x="33.5565%" y="501" width="0.0723%" height="15" fill="rgb(228,127,35)" fg:x="10676" fg:w="23"/><text x="33.8065%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (23 samples, 0.07%)</title><rect x="33.5565%" y="485" width="0.0723%" height="15" fill="rgb(245,102,45)" fg:x="10676" fg:w="23"/><text x="33.8065%" y="495.50"></text></g><g><title>&lt;briolette_sim::Coin as core::clone::Clone&gt;::clone (1,603 samples, 5.04%)</title><rect x="28.5997%" y="741" width="5.0385%" height="15" fill="rgb(214,1,49)" fg:x="9099" fg:w="1603"/><text x="28.8497%" y="751.50">&lt;briol..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,603 samples, 5.04%)</title><rect x="28.5997%" y="725" width="5.0385%" height="15" fill="rgb(226,163,40)" fg:x="9099" fg:w="1603"/><text x="28.8497%" y="735.50">&lt;alloc..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,277 samples, 4.01%)</title><rect x="29.6244%" y="709" width="4.0138%" height="15" fill="rgb(239,212,28)" fg:x="9425" fg:w="1277"/><text x="29.8744%" y="719.50">allo..</text></g><g><title>alloc::slice::hack::to_vec (1,277 samples, 4.01%)</title><rect x="29.6244%" y="693" width="4.0138%" height="15" fill="rgb(220,20,13)" fg:x="9425" fg:w="1277"/><text x="29.8744%" y="703.50">allo..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,277 samples, 4.01%)</title><rect x="29.6244%" y="677" width="4.0138%" height="15" fill="rgb(210,164,35)" fg:x="9425" fg:w="1277"/><text x="29.8744%" y="687.50">&lt;T a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,277 samples, 4.01%)</title><rect x="29.6244%" y="661" width="4.0138%" height="15" fill="rgb(248,109,41)" fg:x="9425" fg:w="1277"/><text x="29.8744%" y="671.50">allo..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,277 samples, 4.01%)</title><rect x="29.6244%" y="645" width="4.0138%" height="15" fill="rgb(238,23,50)" fg:x="9425" fg:w="1277"/><text x="29.8744%" y="655.50">allo..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,277 samples, 4.01%)</title><rect x="29.6244%" y="629" width="4.0138%" height="15" fill="rgb(211,48,49)" fg:x="9425" fg:w="1277"/><text x="29.8744%" y="639.50">allo..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,277 samples, 4.01%)</title><rect x="29.6244%" y="613" width="4.0138%" height="15" fill="rgb(223,36,21)" fg:x="9425" fg:w="1277"/><text x="29.8744%" y="623.50">allo..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,277 samples, 4.01%)</title><rect x="29.6244%" y="597" width="4.0138%" height="15" fill="rgb(207,123,46)" fg:x="9425" fg:w="1277"/><text x="29.8744%" y="607.50">&lt;all..</text></g><g><title>alloc::alloc::Global::alloc_impl (1,277 samples, 4.01%)</title><rect x="29.6244%" y="581" width="4.0138%" height="15" fill="rgb(240,218,32)" fg:x="9425" fg:w="1277"/><text x="29.8744%" y="591.50">allo..</text></g><g><title>alloc::alloc::alloc (1,277 samples, 4.01%)</title><rect x="29.6244%" y="565" width="4.0138%" height="15" fill="rgb(252,5,43)" fg:x="9425" fg:w="1277"/><text x="29.8744%" y="575.50">allo..</text></g><g><title>__rust_alloc (1,277 samples, 4.01%)</title><rect x="29.6244%" y="549" width="4.0138%" height="15" fill="rgb(252,84,19)" fg:x="9425" fg:w="1277"/><text x="29.8744%" y="559.50">__ru..</text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (1,277 samples, 4.01%)</title><rect x="29.6244%" y="533" width="4.0138%" height="15" fill="rgb(243,152,39)" fg:x="9425" fg:w="1277"/><text x="29.8744%" y="543.50">&lt;dha..</text></g><g><title>&lt;briolette_sim::SimulatorHelpers as briolette_sim::SimulationTools&gt;::get_uniform (4 samples, 0.01%)</title><rect x="33.6382%" y="741" width="0.0126%" height="15" fill="rgb(234,160,15)" fg:x="10702" fg:w="4"/><text x="33.8882%" y="751.50"></text></g><g><title>&lt;rand::distributions::uniform::Uniform&lt;X&gt; as rand::distributions::distribution::Distribution&lt;X&gt;&gt;::sample (4 samples, 0.01%)</title><rect x="33.6382%" y="725" width="0.0126%" height="15" fill="rgb(237,34,20)" fg:x="10702" fg:w="4"/><text x="33.8882%" y="735.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;usize&gt; as rand::distributions::uniform::UniformSampler&gt;::sample (4 samples, 0.01%)</title><rect x="33.6382%" y="709" width="0.0126%" height="15" fill="rgb(229,97,13)" fg:x="10702" fg:w="4"/><text x="33.8882%" y="719.50"></text></g><g><title>rand::rng::Rng::gen (4 samples, 0.01%)</title><rect x="33.6382%" y="693" width="0.0126%" height="15" fill="rgb(234,71,50)" fg:x="10702" fg:w="4"/><text x="33.8882%" y="703.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;usize&gt; for rand::distributions::Standard&gt;::sample (4 samples, 0.01%)</title><rect x="33.6382%" y="677" width="0.0126%" height="15" fill="rgb(253,155,4)" fg:x="10702" fg:w="4"/><text x="33.8882%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (4 samples, 0.01%)</title><rect x="33.6382%" y="661" width="0.0126%" height="15" fill="rgb(222,185,37)" fg:x="10702" fg:w="4"/><text x="33.8882%" y="671.50"></text></g><g><title>&lt;rand::rngs::std::StdRng as rand_core::RngCore&gt;::next_u64 (4 samples, 0.01%)</title><rect x="33.6382%" y="645" width="0.0126%" height="15" fill="rgb(251,177,13)" fg:x="10702" fg:w="4"/><text x="33.8882%" y="655.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Rng as rand_core::RngCore&gt;::next_u64 (4 samples, 0.01%)</title><rect x="33.6382%" y="629" width="0.0126%" height="15" fill="rgb(250,179,40)" fg:x="10702" fg:w="4"/><text x="33.8882%" y="639.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (4 samples, 0.01%)</title><rect x="33.6382%" y="613" width="0.0126%" height="15" fill="rgb(242,44,2)" fg:x="10702" fg:w="4"/><text x="33.8882%" y="623.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (4 samples, 0.01%)</title><rect x="33.6382%" y="597" width="0.0126%" height="15" fill="rgb(216,177,13)" fg:x="10702" fg:w="4"/><text x="33.8882%" y="607.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (4 samples, 0.01%)</title><rect x="33.6382%" y="581" width="0.0126%" height="15" fill="rgb(216,106,43)" fg:x="10702" fg:w="4"/><text x="33.8882%" y="591.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (4 samples, 0.01%)</title><rect x="33.6382%" y="565" width="0.0126%" height="15" fill="rgb(216,183,2)" fg:x="10702" fg:w="4"/><text x="33.8882%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (8 samples, 0.03%)</title><rect x="33.7011%" y="533" width="0.0251%" height="15" fill="rgb(249,75,3)" fg:x="10722" fg:w="8"/><text x="33.9511%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (8 samples, 0.03%)</title><rect x="33.7011%" y="517" width="0.0251%" height="15" fill="rgb(219,67,39)" fg:x="10722" fg:w="8"/><text x="33.9511%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (8 samples, 0.03%)</title><rect x="33.7011%" y="501" width="0.0251%" height="15" fill="rgb(253,228,2)" fg:x="10722" fg:w="8"/><text x="33.9511%" y="511.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (8 samples, 0.03%)</title><rect x="33.7011%" y="485" width="0.0251%" height="15" fill="rgb(235,138,27)" fg:x="10722" fg:w="8"/><text x="33.9511%" y="495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (8 samples, 0.03%)</title><rect x="33.7011%" y="469" width="0.0251%" height="15" fill="rgb(236,97,51)" fg:x="10722" fg:w="8"/><text x="33.9511%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.03%)</title><rect x="33.7011%" y="453" width="0.0251%" height="15" fill="rgb(240,80,30)" fg:x="10722" fg:w="8"/><text x="33.9511%" y="463.50"></text></g><g><title>dhat::Globals::record_block (348 samples, 1.09%)</title><rect x="33.7011%" y="581" width="1.0938%" height="15" fill="rgb(230,178,19)" fg:x="10722" fg:w="348"/><text x="33.9511%" y="591.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (348 samples, 1.09%)</title><rect x="33.7011%" y="565" width="1.0938%" height="15" fill="rgb(210,190,27)" fg:x="10722" fg:w="348"/><text x="33.9511%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (348 samples, 1.09%)</title><rect x="33.7011%" y="549" width="1.0938%" height="15" fill="rgb(222,107,31)" fg:x="10722" fg:w="348"/><text x="33.9511%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (340 samples, 1.07%)</title><rect x="33.7262%" y="533" width="1.0687%" height="15" fill="rgb(216,127,34)" fg:x="10730" fg:w="340"/><text x="33.9762%" y="543.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (340 samples, 1.07%)</title><rect x="33.7262%" y="517" width="1.0687%" height="15" fill="rgb(234,116,52)" fg:x="10730" fg:w="340"/><text x="33.9762%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (340 samples, 1.07%)</title><rect x="33.7262%" y="501" width="1.0687%" height="15" fill="rgb(222,124,15)" fg:x="10730" fg:w="340"/><text x="33.9762%" y="511.50"></text></g><g><title>core::ptr::write (340 samples, 1.07%)</title><rect x="33.7262%" y="485" width="1.0687%" height="15" fill="rgb(231,179,28)" fg:x="10730" fg:w="340"/><text x="33.9762%" y="495.50"></text></g><g><title>dhat::Globals::update_counts_for_alloc (6 samples, 0.02%)</title><rect x="34.7949%" y="581" width="0.0189%" height="15" fill="rgb(226,93,45)" fg:x="11070" fg:w="6"/><text x="35.0449%" y="591.50"></text></g><g><title>mintex::Mutex&lt;T&gt;::lock (6 samples, 0.02%)</title><rect x="34.8138%" y="581" width="0.0189%" height="15" fill="rgb(215,8,51)" fg:x="11076" fg:w="6"/><text x="35.0638%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (6 samples, 0.02%)</title><rect x="34.8138%" y="565" width="0.0189%" height="15" fill="rgb(223,106,5)" fg:x="11076" fg:w="6"/><text x="35.0638%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.02%)</title><rect x="34.8138%" y="549" width="0.0189%" height="15" fill="rgb(250,191,5)" fg:x="11076" fg:w="6"/><text x="35.0638%" y="559.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (69 samples, 0.22%)</title><rect x="34.8326%" y="581" width="0.2169%" height="15" fill="rgb(242,132,44)" fg:x="11082" fg:w="69"/><text x="35.0826%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (69 samples, 0.22%)</title><rect x="34.8326%" y="565" width="0.2169%" height="15" fill="rgb(251,152,29)" fg:x="11082" fg:w="69"/><text x="35.0826%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (37 samples, 0.12%)</title><rect x="34.9332%" y="549" width="0.1163%" height="15" fill="rgb(218,179,5)" fg:x="11114" fg:w="37"/><text x="35.1832%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (37 samples, 0.12%)</title><rect x="34.9332%" y="533" width="0.1163%" height="15" fill="rgb(227,67,19)" fg:x="11114" fg:w="37"/><text x="35.1832%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (439 samples, 1.38%)</title><rect x="33.6822%" y="661" width="1.3799%" height="15" fill="rgb(233,119,31)" fg:x="10716" fg:w="439"/><text x="33.9322%" y="671.50"></text></g><g><title>alloc::alloc::Global::grow_impl (439 samples, 1.38%)</title><rect x="33.6822%" y="645" width="1.3799%" height="15" fill="rgb(241,120,22)" fg:x="10716" fg:w="439"/><text x="33.9322%" y="655.50"></text></g><g><title>alloc::alloc::realloc (439 samples, 1.38%)</title><rect x="33.6822%" y="629" width="1.3799%" height="15" fill="rgb(224,102,30)" fg:x="10716" fg:w="439"/><text x="33.9322%" y="639.50"></text></g><g><title>__rust_realloc (439 samples, 1.38%)</title><rect x="33.6822%" y="613" width="1.3799%" height="15" fill="rgb(210,164,37)" fg:x="10716" fg:w="439"/><text x="33.9322%" y="623.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::realloc (437 samples, 1.37%)</title><rect x="33.6885%" y="597" width="1.3736%" height="15" fill="rgb(226,191,16)" fg:x="10718" fg:w="437"/><text x="33.9385%" y="607.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (4 samples, 0.01%)</title><rect x="35.0495%" y="581" width="0.0126%" height="15" fill="rgb(214,40,45)" fg:x="11151" fg:w="4"/><text x="35.2995%" y="591.50"></text></g><g><title>std::sys::pal::unix::cvt (4 samples, 0.01%)</title><rect x="35.0495%" y="565" width="0.0126%" height="15" fill="rgb(244,29,26)" fg:x="11151" fg:w="4"/><text x="35.2995%" y="575.50"></text></g><g><title>&lt;i32 as std::sys::pal::unix::IsMinusOne&gt;::is_minus_one (4 samples, 0.01%)</title><rect x="35.0495%" y="549" width="0.0126%" height="15" fill="rgb(216,16,5)" fg:x="11151" fg:w="4"/><text x="35.2995%" y="559.50"></text></g><g><title>backtrace::capture::Backtrace::frames (4 samples, 0.01%)</title><rect x="35.0872%" y="517" width="0.0126%" height="15" fill="rgb(249,76,35)" fg:x="11163" fg:w="4"/><text x="35.3372%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (4 samples, 0.01%)</title><rect x="35.0872%" y="501" width="0.0126%" height="15" fill="rgb(207,11,44)" fg:x="11163" fg:w="4"/><text x="35.3372%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (4 samples, 0.01%)</title><rect x="35.0872%" y="485" width="0.0126%" height="15" fill="rgb(228,190,49)" fg:x="11163" fg:w="4"/><text x="35.3372%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (4 samples, 0.01%)</title><rect x="35.0872%" y="469" width="0.0126%" height="15" fill="rgb(214,173,12)" fg:x="11163" fg:w="4"/><text x="35.3372%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (4 samples, 0.01%)</title><rect x="35.0872%" y="453" width="0.0126%" height="15" fill="rgb(218,26,35)" fg:x="11163" fg:w="4"/><text x="35.3372%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (4 samples, 0.01%)</title><rect x="35.0872%" y="437" width="0.0126%" height="15" fill="rgb(220,200,19)" fg:x="11163" fg:w="4"/><text x="35.3372%" y="447.50"></text></g><g><title>dhat::Globals::get_pp_info (8 samples, 0.03%)</title><rect x="35.0872%" y="645" width="0.0251%" height="15" fill="rgb(239,95,49)" fg:x="11163" fg:w="8"/><text x="35.3372%" y="655.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (8 samples, 0.03%)</title><rect x="35.0872%" y="629" width="0.0251%" height="15" fill="rgb(235,85,53)" fg:x="11163" fg:w="8"/><text x="35.3372%" y="639.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (8 samples, 0.03%)</title><rect x="35.0872%" y="613" width="0.0251%" height="15" fill="rgb(233,133,31)" fg:x="11163" fg:w="8"/><text x="35.3372%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8 samples, 0.03%)</title><rect x="35.0872%" y="597" width="0.0251%" height="15" fill="rgb(218,25,20)" fg:x="11163" fg:w="8"/><text x="35.3372%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (8 samples, 0.03%)</title><rect x="35.0872%" y="581" width="0.0251%" height="15" fill="rgb(252,210,38)" fg:x="11163" fg:w="8"/><text x="35.3372%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (8 samples, 0.03%)</title><rect x="35.0872%" y="565" width="0.0251%" height="15" fill="rgb(242,134,21)" fg:x="11163" fg:w="8"/><text x="35.3372%" y="575.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (8 samples, 0.03%)</title><rect x="35.0872%" y="549" width="0.0251%" height="15" fill="rgb(213,28,48)" fg:x="11163" fg:w="8"/><text x="35.3372%" y="559.50"></text></g><g><title>&lt;dhat::Backtrace as core::cmp::PartialEq&gt;::eq (8 samples, 0.03%)</title><rect x="35.0872%" y="533" width="0.0251%" height="15" fill="rgb(250,196,2)" fg:x="11163" fg:w="8"/><text x="35.3372%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.01%)</title><rect x="35.0998%" y="517" width="0.0126%" height="15" fill="rgb(227,5,17)" fg:x="11167" fg:w="4"/><text x="35.3498%" y="527.50"></text></g><g><title>&lt;dhat::Backtrace as core::cmp::PartialEq&gt;::eq::{{closure}} (4 samples, 0.01%)</title><rect x="35.0998%" y="501" width="0.0126%" height="15" fill="rgb(221,226,24)" fg:x="11167" fg:w="4"/><text x="35.3498%" y="511.50"></text></g><g><title>_Unwind_Find_FDE (6 samples, 0.02%)</title><rect x="35.1218%" y="565" width="0.0189%" height="15" fill="rgb(211,5,48)" fg:x="11174" fg:w="6"/><text x="35.3718%" y="575.50"></text></g><g><title>__GI__dl_find_object (4 samples, 0.01%)</title><rect x="35.1281%" y="549" width="0.0126%" height="15" fill="rgb(219,150,6)" fg:x="11176" fg:w="4"/><text x="35.3781%" y="559.50"></text></g><g><title>Unknown (4 samples, 0.01%)</title><rect x="35.1784%" y="437" width="0.0126%" height="15" fill="rgb(251,46,16)" fg:x="11192" fg:w="4"/><text x="35.4284%" y="447.50"></text></g><g><title>&lt;backtrace::backtrace::Frame as core::clone::Clone&gt;::clone (13 samples, 0.04%)</title><rect x="35.1658%" y="517" width="0.0409%" height="15" fill="rgb(220,204,40)" fg:x="11188" fg:w="13"/><text x="35.4158%" y="527.50"></text></g><g><title>&lt;backtrace::backtrace::libunwind::Frame as core::clone::Clone&gt;::clone (13 samples, 0.04%)</title><rect x="35.1658%" y="501" width="0.0409%" height="15" fill="rgb(211,85,2)" fg:x="11188" fg:w="13"/><text x="35.4158%" y="511.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::symbol_address (9 samples, 0.03%)</title><rect x="35.1784%" y="485" width="0.0283%" height="15" fill="rgb(229,17,7)" fg:x="11192" fg:w="9"/><text x="35.4284%" y="495.50"></text></g><g><title>_Unwind_FindEnclosingFunction (9 samples, 0.03%)</title><rect x="35.1784%" y="469" width="0.0283%" height="15" fill="rgb(239,72,28)" fg:x="11192" fg:w="9"/><text x="35.4284%" y="479.50"></text></g><g><title>_Unwind_Find_FDE (9 samples, 0.03%)</title><rect x="35.1784%" y="453" width="0.0283%" height="15" fill="rgb(230,47,54)" fg:x="11192" fg:w="9"/><text x="35.4284%" y="463.50"></text></g><g><title>__GI__dl_find_object (5 samples, 0.02%)</title><rect x="35.1909%" y="437" width="0.0157%" height="15" fill="rgb(214,50,8)" fg:x="11196" fg:w="5"/><text x="35.4409%" y="447.50"></text></g><g><title>_dl_find_object_to_external (5 samples, 0.02%)</title><rect x="35.1909%" y="421" width="0.0157%" height="15" fill="rgb(216,198,43)" fg:x="11196" fg:w="5"/><text x="35.4409%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.02%)</title><rect x="35.2067%" y="453" width="0.0189%" height="15" fill="rgb(234,20,35)" fg:x="11201" fg:w="6"/><text x="35.4567%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (9 samples, 0.03%)</title><rect x="35.2067%" y="517" width="0.0283%" height="15" fill="rgb(254,45,19)" fg:x="11201" fg:w="9"/><text x="35.4567%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (9 samples, 0.03%)</title><rect x="35.2067%" y="501" width="0.0283%" height="15" fill="rgb(219,14,44)" fg:x="11201" fg:w="9"/><text x="35.4567%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (9 samples, 0.03%)</title><rect x="35.2067%" y="485" width="0.0283%" height="15" fill="rgb(217,220,26)" fg:x="11201" fg:w="9"/><text x="35.4567%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (9 samples, 0.03%)</title><rect x="35.2067%" y="469" width="0.0283%" height="15" fill="rgb(213,158,28)" fg:x="11201" fg:w="9"/><text x="35.4567%" y="479.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (55 samples, 0.17%)</title><rect x="35.1218%" y="613" width="0.1729%" height="15" fill="rgb(252,51,52)" fg:x="11174" fg:w="55"/><text x="35.3718%" y="623.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (55 samples, 0.17%)</title><rect x="35.1218%" y="597" width="0.1729%" height="15" fill="rgb(246,89,16)" fg:x="11174" fg:w="55"/><text x="35.3718%" y="607.50"></text></g><g><title>_Unwind_Backtrace (55 samples, 0.17%)</title><rect x="35.1218%" y="581" width="0.1729%" height="15" fill="rgb(216,158,49)" fg:x="11174" fg:w="55"/><text x="35.3718%" y="591.50"></text></g><g><title>backtrace::backtrace::libunwind::trace::trace_fn (49 samples, 0.15%)</title><rect x="35.1407%" y="565" width="0.1540%" height="15" fill="rgb(236,107,19)" fg:x="11180" fg:w="49"/><text x="35.3907%" y="575.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (44 samples, 0.14%)</title><rect x="35.1564%" y="549" width="0.1383%" height="15" fill="rgb(228,185,30)" fg:x="11185" fg:w="44"/><text x="35.4064%" y="559.50"></text></g><g><title>dhat::new_backtrace_inner::{{closure}} (42 samples, 0.13%)</title><rect x="35.1627%" y="533" width="0.1320%" height="15" fill="rgb(246,134,8)" fg:x="11187" fg:w="42"/><text x="35.4127%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (18 samples, 0.06%)</title><rect x="35.2381%" y="517" width="0.0566%" height="15" fill="rgb(214,143,50)" fg:x="11211" fg:w="18"/><text x="35.4881%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (18 samples, 0.06%)</title><rect x="35.2381%" y="501" width="0.0566%" height="15" fill="rgb(228,75,8)" fg:x="11211" fg:w="18"/><text x="35.4881%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (18 samples, 0.06%)</title><rect x="35.2381%" y="485" width="0.0566%" height="15" fill="rgb(207,175,4)" fg:x="11211" fg:w="18"/><text x="35.4881%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (18 samples, 0.06%)</title><rect x="35.2381%" y="469" width="0.0566%" height="15" fill="rgb(205,108,24)" fg:x="11211" fg:w="18"/><text x="35.4881%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (18 samples, 0.06%)</title><rect x="35.2381%" y="453" width="0.0566%" height="15" fill="rgb(244,120,49)" fg:x="11211" fg:w="18"/><text x="35.4881%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (18 samples, 0.06%)</title><rect x="35.2381%" y="437" width="0.0566%" height="15" fill="rgb(223,47,38)" fg:x="11211" fg:w="18"/><text x="35.4881%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (18 samples, 0.06%)</title><rect x="35.2381%" y="421" width="0.0566%" height="15" fill="rgb(229,179,11)" fg:x="11211" fg:w="18"/><text x="35.4881%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (18 samples, 0.06%)</title><rect x="35.2381%" y="405" width="0.0566%" height="15" fill="rgb(231,122,1)" fg:x="11211" fg:w="18"/><text x="35.4881%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (18 samples, 0.06%)</title><rect x="35.2381%" y="389" width="0.0566%" height="15" fill="rgb(245,119,9)" fg:x="11211" fg:w="18"/><text x="35.4881%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (521 samples, 1.64%)</title><rect x="33.6602%" y="741" width="1.6376%" height="15" fill="rgb(241,163,25)" fg:x="10709" fg:w="521"/><text x="33.9102%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (521 samples, 1.64%)</title><rect x="33.6602%" y="725" width="1.6376%" height="15" fill="rgb(217,214,3)" fg:x="10709" fg:w="521"/><text x="33.9102%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (515 samples, 1.62%)</title><rect x="33.6791%" y="709" width="1.6187%" height="15" fill="rgb(240,86,28)" fg:x="10715" fg:w="515"/><text x="33.9291%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (515 samples, 1.62%)</title><rect x="33.6791%" y="693" width="1.6187%" height="15" fill="rgb(215,47,9)" fg:x="10715" fg:w="515"/><text x="33.9291%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (515 samples, 1.62%)</title><rect x="33.6791%" y="677" width="1.6187%" height="15" fill="rgb(252,25,45)" fg:x="10715" fg:w="515"/><text x="33.9291%" y="687.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (75 samples, 0.24%)</title><rect x="35.0621%" y="661" width="0.2357%" height="15" fill="rgb(251,164,9)" fg:x="11155" fg:w="75"/><text x="35.3121%" y="671.50"></text></g><g><title>dhat::new_backtrace_inner (57 samples, 0.18%)</title><rect x="35.1187%" y="645" width="0.1792%" height="15" fill="rgb(233,194,0)" fg:x="11173" fg:w="57"/><text x="35.3687%" y="655.50"></text></g><g><title>backtrace::backtrace::trace (56 samples, 0.18%)</title><rect x="35.1218%" y="629" width="0.1760%" height="15" fill="rgb(249,111,24)" fg:x="11174" fg:w="56"/><text x="35.3718%" y="639.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (156 samples, 0.49%)</title><rect x="35.3135%" y="501" width="0.4903%" height="15" fill="rgb(250,223,3)" fg:x="11235" fg:w="156"/><text x="35.5635%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (156 samples, 0.49%)</title><rect x="35.3135%" y="485" width="0.4903%" height="15" fill="rgb(236,178,37)" fg:x="11235" fg:w="156"/><text x="35.5635%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (131 samples, 0.41%)</title><rect x="35.3921%" y="469" width="0.4118%" height="15" fill="rgb(241,158,50)" fg:x="11260" fg:w="131"/><text x="35.6421%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (131 samples, 0.41%)</title><rect x="35.3921%" y="453" width="0.4118%" height="15" fill="rgb(213,121,41)" fg:x="11260" fg:w="131"/><text x="35.6421%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (131 samples, 0.41%)</title><rect x="35.3921%" y="437" width="0.4118%" height="15" fill="rgb(240,92,3)" fg:x="11260" fg:w="131"/><text x="35.6421%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (131 samples, 0.41%)</title><rect x="35.3921%" y="421" width="0.4118%" height="15" fill="rgb(205,123,3)" fg:x="11260" fg:w="131"/><text x="35.6421%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (131 samples, 0.41%)</title><rect x="35.3921%" y="405" width="0.4118%" height="15" fill="rgb(205,97,47)" fg:x="11260" fg:w="131"/><text x="35.6421%" y="415.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (131 samples, 0.41%)</title><rect x="35.3921%" y="389" width="0.4118%" height="15" fill="rgb(247,152,14)" fg:x="11260" fg:w="131"/><text x="35.6421%" y="399.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (131 samples, 0.41%)</title><rect x="35.3921%" y="373" width="0.4118%" height="15" fill="rgb(248,195,53)" fg:x="11260" fg:w="131"/><text x="35.6421%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (131 samples, 0.41%)</title><rect x="35.3921%" y="357" width="0.4118%" height="15" fill="rgb(226,201,16)" fg:x="11260" fg:w="131"/><text x="35.6421%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (131 samples, 0.41%)</title><rect x="35.3921%" y="341" width="0.4118%" height="15" fill="rgb(205,98,0)" fg:x="11260" fg:w="131"/><text x="35.6421%" y="351.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (9 samples, 0.03%)</title><rect x="35.8039%" y="485" width="0.0283%" height="15" fill="rgb(214,191,48)" fg:x="11391" fg:w="9"/><text x="36.0539%" y="495.50"></text></g><g><title>std::time::Instant::duration_since (9 samples, 0.03%)</title><rect x="35.8039%" y="469" width="0.0283%" height="15" fill="rgb(237,112,39)" fg:x="11391" fg:w="9"/><text x="36.0539%" y="479.50"></text></g><g><title>std::time::Instant::checked_duration_since (9 samples, 0.03%)</title><rect x="35.8039%" y="453" width="0.0283%" height="15" fill="rgb(247,203,27)" fg:x="11391" fg:w="9"/><text x="36.0539%" y="463.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (9 samples, 0.03%)</title><rect x="35.8039%" y="437" width="0.0283%" height="15" fill="rgb(235,124,28)" fg:x="11391" fg:w="9"/><text x="36.0539%" y="447.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (8 samples, 0.03%)</title><rect x="35.8070%" y="421" width="0.0251%" height="15" fill="rgb(208,207,46)" fg:x="11392" fg:w="8"/><text x="36.0570%" y="431.50"></text></g><g><title>briolette_sim::simulator::Simulator::do_transaction (4,374 samples, 13.75%)</title><rect x="22.1059%" y="757" width="13.7482%" height="15" fill="rgb(234,176,4)" fg:x="7033" fg:w="4374"/><text x="22.3559%" y="767.50">briolette_sim::simula..</text></g><g><title>core::ptr::drop_in_place&lt;briolette_sim::EventData&gt; (176 samples, 0.55%)</title><rect x="35.3010%" y="741" width="0.5532%" height="15" fill="rgb(230,133,28)" fg:x="11231" fg:w="176"/><text x="35.5510%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;briolette_sim::TransactData&gt; (173 samples, 0.54%)</title><rect x="35.3104%" y="725" width="0.5438%" height="15" fill="rgb(211,137,40)" fg:x="11234" fg:w="173"/><text x="35.5604%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;briolette_sim::TransactionCoin&gt;&gt; (173 samples, 0.54%)</title><rect x="35.3104%" y="709" width="0.5438%" height="15" fill="rgb(254,35,13)" fg:x="11234" fg:w="173"/><text x="35.5604%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (173 samples, 0.54%)</title><rect x="35.3104%" y="693" width="0.5438%" height="15" fill="rgb(225,49,51)" fg:x="11234" fg:w="173"/><text x="35.5604%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;[briolette_sim::TransactionCoin]&gt; (173 samples, 0.54%)</title><rect x="35.3104%" y="677" width="0.5438%" height="15" fill="rgb(251,10,15)" fg:x="11234" fg:w="173"/><text x="35.5604%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;briolette_sim::TransactionCoin&gt; (173 samples, 0.54%)</title><rect x="35.3104%" y="661" width="0.5438%" height="15" fill="rgb(228,207,15)" fg:x="11234" fg:w="173"/><text x="35.5604%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;briolette_sim::Coin&gt; (173 samples, 0.54%)</title><rect x="35.3104%" y="645" width="0.5438%" height="15" fill="rgb(241,99,19)" fg:x="11234" fg:w="173"/><text x="35.5604%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (173 samples, 0.54%)</title><rect x="35.3104%" y="629" width="0.5438%" height="15" fill="rgb(207,104,49)" fg:x="11234" fg:w="173"/><text x="35.5604%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (173 samples, 0.54%)</title><rect x="35.3104%" y="613" width="0.5438%" height="15" fill="rgb(234,99,18)" fg:x="11234" fg:w="173"/><text x="35.5604%" y="623.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (173 samples, 0.54%)</title><rect x="35.3104%" y="597" width="0.5438%" height="15" fill="rgb(213,191,49)" fg:x="11234" fg:w="173"/><text x="35.5604%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (173 samples, 0.54%)</title><rect x="35.3104%" y="581" width="0.5438%" height="15" fill="rgb(210,226,19)" fg:x="11234" fg:w="173"/><text x="35.5604%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (173 samples, 0.54%)</title><rect x="35.3104%" y="565" width="0.5438%" height="15" fill="rgb(229,97,18)" fg:x="11234" fg:w="173"/><text x="35.5604%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (173 samples, 0.54%)</title><rect x="35.3104%" y="549" width="0.5438%" height="15" fill="rgb(211,167,15)" fg:x="11234" fg:w="173"/><text x="35.5604%" y="559.50"></text></g><g><title>__rust_dealloc (173 samples, 0.54%)</title><rect x="35.3104%" y="533" width="0.5438%" height="15" fill="rgb(210,169,34)" fg:x="11234" fg:w="173"/><text x="35.5604%" y="543.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::dealloc (173 samples, 0.54%)</title><rect x="35.3104%" y="517" width="0.5438%" height="15" fill="rgb(241,121,31)" fg:x="11234" fg:w="173"/><text x="35.5604%" y="527.50"></text></g><g><title>std::time::Instant::elapsed (16 samples, 0.05%)</title><rect x="35.8039%" y="501" width="0.0503%" height="15" fill="rgb(232,40,11)" fg:x="11391" fg:w="16"/><text x="36.0539%" y="511.50"></text></g><g><title>std::time::Instant::now (7 samples, 0.02%)</title><rect x="35.8322%" y="485" width="0.0220%" height="15" fill="rgb(205,86,26)" fg:x="11400" fg:w="7"/><text x="36.0822%" y="495.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (7 samples, 0.02%)</title><rect x="35.8322%" y="469" width="0.0220%" height="15" fill="rgb(231,126,28)" fg:x="11400" fg:w="7"/><text x="36.0822%" y="479.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (5 samples, 0.02%)</title><rect x="35.8384%" y="453" width="0.0157%" height="15" fill="rgb(219,221,18)" fg:x="11402" fg:w="5"/><text x="36.0884%" y="463.50"></text></g><g><title>std::sys::pal::unix::cvt (5 samples, 0.02%)</title><rect x="35.8384%" y="437" width="0.0157%" height="15" fill="rgb(211,40,0)" fg:x="11402" fg:w="5"/><text x="36.0884%" y="447.50"></text></g><g><title>&lt;i32 as std::sys::pal::unix::IsMinusOne&gt;::is_minus_one (5 samples, 0.02%)</title><rect x="35.8384%" y="421" width="0.0157%" height="15" fill="rgb(239,85,43)" fg:x="11402" fg:w="5"/><text x="36.0884%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (118 samples, 0.37%)</title><rect x="35.8636%" y="517" width="0.3709%" height="15" fill="rgb(231,55,21)" fg:x="11410" fg:w="118"/><text x="36.1136%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (118 samples, 0.37%)</title><rect x="35.8636%" y="501" width="0.3709%" height="15" fill="rgb(225,184,43)" fg:x="11410" fg:w="118"/><text x="36.1136%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (118 samples, 0.37%)</title><rect x="35.8636%" y="485" width="0.3709%" height="15" fill="rgb(251,158,41)" fg:x="11410" fg:w="118"/><text x="36.1136%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (118 samples, 0.37%)</title><rect x="35.8636%" y="469" width="0.3709%" height="15" fill="rgb(234,159,37)" fg:x="11410" fg:w="118"/><text x="36.1136%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (118 samples, 0.37%)</title><rect x="35.8636%" y="453" width="0.3709%" height="15" fill="rgb(216,204,22)" fg:x="11410" fg:w="118"/><text x="36.1136%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (118 samples, 0.37%)</title><rect x="35.8636%" y="437" width="0.3709%" height="15" fill="rgb(214,17,3)" fg:x="11410" fg:w="118"/><text x="36.1136%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (118 samples, 0.37%)</title><rect x="35.8636%" y="421" width="0.3709%" height="15" fill="rgb(212,111,17)" fg:x="11410" fg:w="118"/><text x="36.1136%" y="431.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (118 samples, 0.37%)</title><rect x="35.8636%" y="405" width="0.3709%" height="15" fill="rgb(221,157,24)" fg:x="11410" fg:w="118"/><text x="36.1136%" y="415.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (118 samples, 0.37%)</title><rect x="35.8636%" y="389" width="0.3709%" height="15" fill="rgb(252,16,13)" fg:x="11410" fg:w="118"/><text x="36.1136%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (118 samples, 0.37%)</title><rect x="35.8636%" y="373" width="0.3709%" height="15" fill="rgb(221,62,2)" fg:x="11410" fg:w="118"/><text x="36.1136%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (118 samples, 0.37%)</title><rect x="35.8636%" y="357" width="0.3709%" height="15" fill="rgb(247,87,22)" fg:x="11410" fg:w="118"/><text x="36.1136%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;briolette_sim::TransactData&gt; (122 samples, 0.38%)</title><rect x="35.8636%" y="741" width="0.3835%" height="15" fill="rgb(215,73,9)" fg:x="11410" fg:w="122"/><text x="36.1136%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;briolette_sim::TransactionCoin&gt;&gt; (122 samples, 0.38%)</title><rect x="35.8636%" y="725" width="0.3835%" height="15" fill="rgb(207,175,33)" fg:x="11410" fg:w="122"/><text x="36.1136%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (122 samples, 0.38%)</title><rect x="35.8636%" y="709" width="0.3835%" height="15" fill="rgb(243,129,54)" fg:x="11410" fg:w="122"/><text x="36.1136%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;[briolette_sim::TransactionCoin]&gt; (122 samples, 0.38%)</title><rect x="35.8636%" y="693" width="0.3835%" height="15" fill="rgb(227,119,45)" fg:x="11410" fg:w="122"/><text x="36.1136%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;briolette_sim::TransactionCoin&gt; (122 samples, 0.38%)</title><rect x="35.8636%" y="677" width="0.3835%" height="15" fill="rgb(205,109,36)" fg:x="11410" fg:w="122"/><text x="36.1136%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;briolette_sim::Coin&gt; (122 samples, 0.38%)</title><rect x="35.8636%" y="661" width="0.3835%" height="15" fill="rgb(205,6,39)" fg:x="11410" fg:w="122"/><text x="36.1136%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (122 samples, 0.38%)</title><rect x="35.8636%" y="645" width="0.3835%" height="15" fill="rgb(221,32,16)" fg:x="11410" fg:w="122"/><text x="36.1136%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (122 samples, 0.38%)</title><rect x="35.8636%" y="629" width="0.3835%" height="15" fill="rgb(228,144,50)" fg:x="11410" fg:w="122"/><text x="36.1136%" y="639.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (122 samples, 0.38%)</title><rect x="35.8636%" y="613" width="0.3835%" height="15" fill="rgb(229,201,53)" fg:x="11410" fg:w="122"/><text x="36.1136%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (122 samples, 0.38%)</title><rect x="35.8636%" y="597" width="0.3835%" height="15" fill="rgb(249,153,27)" fg:x="11410" fg:w="122"/><text x="36.1136%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (122 samples, 0.38%)</title><rect x="35.8636%" y="581" width="0.3835%" height="15" fill="rgb(227,106,25)" fg:x="11410" fg:w="122"/><text x="36.1136%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (122 samples, 0.38%)</title><rect x="35.8636%" y="565" width="0.3835%" height="15" fill="rgb(230,65,29)" fg:x="11410" fg:w="122"/><text x="36.1136%" y="575.50"></text></g><g><title>__rust_dealloc (122 samples, 0.38%)</title><rect x="35.8636%" y="549" width="0.3835%" height="15" fill="rgb(221,57,46)" fg:x="11410" fg:w="122"/><text x="36.1136%" y="559.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::dealloc (122 samples, 0.38%)</title><rect x="35.8636%" y="533" width="0.3835%" height="15" fill="rgb(229,161,17)" fg:x="11410" fg:w="122"/><text x="36.1136%" y="543.50"></text></g><g><title>std::time::Instant::elapsed (4 samples, 0.01%)</title><rect x="36.2345%" y="517" width="0.0126%" height="15" fill="rgb(222,213,11)" fg:x="11528" fg:w="4"/><text x="36.4845%" y="527.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (4 samples, 0.01%)</title><rect x="36.2345%" y="501" width="0.0126%" height="15" fill="rgb(235,35,13)" fg:x="11528" fg:w="4"/><text x="36.4845%" y="511.50"></text></g><g><title>std::time::Instant::duration_since (4 samples, 0.01%)</title><rect x="36.2345%" y="485" width="0.0126%" height="15" fill="rgb(233,158,34)" fg:x="11528" fg:w="4"/><text x="36.4845%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;briolette_sim::EventData&gt; (132 samples, 0.41%)</title><rect x="35.8636%" y="757" width="0.4149%" height="15" fill="rgb(215,151,48)" fg:x="11410" fg:w="132"/><text x="36.1136%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;briolette_sim::ValidateData&gt; (10 samples, 0.03%)</title><rect x="36.2471%" y="741" width="0.0314%" height="15" fill="rgb(229,84,14)" fg:x="11532" fg:w="10"/><text x="36.4971%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;briolette_sim::Coin&gt;&gt; (10 samples, 0.03%)</title><rect x="36.2471%" y="725" width="0.0314%" height="15" fill="rgb(229,68,14)" fg:x="11532" fg:w="10"/><text x="36.4971%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.03%)</title><rect x="36.2471%" y="709" width="0.0314%" height="15" fill="rgb(243,106,26)" fg:x="11532" fg:w="10"/><text x="36.4971%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;[briolette_sim::Coin]&gt; (10 samples, 0.03%)</title><rect x="36.2471%" y="693" width="0.0314%" height="15" fill="rgb(206,45,38)" fg:x="11532" fg:w="10"/><text x="36.4971%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;briolette_sim::Coin&gt; (10 samples, 0.03%)</title><rect x="36.2471%" y="677" width="0.0314%" height="15" fill="rgb(226,6,15)" fg:x="11532" fg:w="10"/><text x="36.4971%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (10 samples, 0.03%)</title><rect x="36.2471%" y="661" width="0.0314%" height="15" fill="rgb(232,22,54)" fg:x="11532" fg:w="10"/><text x="36.4971%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (10 samples, 0.03%)</title><rect x="36.2471%" y="645" width="0.0314%" height="15" fill="rgb(229,222,32)" fg:x="11532" fg:w="10"/><text x="36.4971%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.03%)</title><rect x="36.2471%" y="629" width="0.0314%" height="15" fill="rgb(228,62,29)" fg:x="11532" fg:w="10"/><text x="36.4971%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (10 samples, 0.03%)</title><rect x="36.2471%" y="613" width="0.0314%" height="15" fill="rgb(251,103,34)" fg:x="11532" fg:w="10"/><text x="36.4971%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.03%)</title><rect x="36.2471%" y="597" width="0.0314%" height="15" fill="rgb(233,12,30)" fg:x="11532" fg:w="10"/><text x="36.4971%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.03%)</title><rect x="36.2471%" y="581" width="0.0314%" height="15" fill="rgb(238,52,0)" fg:x="11532" fg:w="10"/><text x="36.4971%" y="591.50"></text></g><g><title>__rust_dealloc (10 samples, 0.03%)</title><rect x="36.2471%" y="565" width="0.0314%" height="15" fill="rgb(223,98,5)" fg:x="11532" fg:w="10"/><text x="36.4971%" y="575.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::dealloc (10 samples, 0.03%)</title><rect x="36.2471%" y="549" width="0.0314%" height="15" fill="rgb(228,75,37)" fg:x="11532" fg:w="10"/><text x="36.4971%" y="559.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (9 samples, 0.03%)</title><rect x="36.2502%" y="533" width="0.0283%" height="15" fill="rgb(205,115,49)" fg:x="11533" fg:w="9"/><text x="36.5002%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (9 samples, 0.03%)</title><rect x="36.2502%" y="517" width="0.0283%" height="15" fill="rgb(250,154,43)" fg:x="11533" fg:w="9"/><text x="36.5002%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (216 samples, 0.68%)</title><rect x="36.2879%" y="741" width="0.6789%" height="15" fill="rgb(226,43,29)" fg:x="11545" fg:w="216"/><text x="36.5379%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (216 samples, 0.68%)</title><rect x="36.2879%" y="725" width="0.6789%" height="15" fill="rgb(249,228,39)" fg:x="11545" fg:w="216"/><text x="36.5379%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (216 samples, 0.68%)</title><rect x="36.2879%" y="709" width="0.6789%" height="15" fill="rgb(216,79,43)" fg:x="11545" fg:w="216"/><text x="36.5379%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (216 samples, 0.68%)</title><rect x="36.2879%" y="693" width="0.6789%" height="15" fill="rgb(228,95,12)" fg:x="11545" fg:w="216"/><text x="36.5379%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (216 samples, 0.68%)</title><rect x="36.2879%" y="677" width="0.6789%" height="15" fill="rgb(249,221,15)" fg:x="11545" fg:w="216"/><text x="36.5379%" y="687.50"></text></g><g><title>&lt;briolette_sim::simulator::Simulator as absim::Simulation&gt;::generate::{{closure}} (216 samples, 0.68%)</title><rect x="36.2879%" y="661" width="0.6789%" height="15" fill="rgb(233,34,13)" fg:x="11545" fg:w="216"/><text x="36.5379%" y="671.50"></text></g><g><title>rand::seq::IteratorRandom::choose (257 samples, 0.81%)</title><rect x="36.2879%" y="757" width="0.8078%" height="15" fill="rgb(214,103,39)" fg:x="11545" fg:w="257"/><text x="36.5379%" y="767.50"></text></g><g><title>rand::seq::gen_index (41 samples, 0.13%)</title><rect x="36.9668%" y="741" width="0.1289%" height="15" fill="rgb(251,126,39)" fg:x="11761" fg:w="41"/><text x="37.2168%" y="751.50"></text></g><g><title>rand::rng::Rng::gen_range (41 samples, 0.13%)</title><rect x="36.9668%" y="725" width="0.1289%" height="15" fill="rgb(214,216,36)" fg:x="11761" fg:w="41"/><text x="37.2168%" y="735.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distributions::uniform::SampleRange&lt;T&gt;&gt;::sample_single (41 samples, 0.13%)</title><rect x="36.9668%" y="709" width="0.1289%" height="15" fill="rgb(220,221,8)" fg:x="11761" fg:w="41"/><text x="37.2168%" y="719.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u32&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single (41 samples, 0.13%)</title><rect x="36.9668%" y="693" width="0.1289%" height="15" fill="rgb(240,216,3)" fg:x="11761" fg:w="41"/><text x="37.2168%" y="703.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u32&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single_inclusive (41 samples, 0.13%)</title><rect x="36.9668%" y="677" width="0.1289%" height="15" fill="rgb(232,218,17)" fg:x="11761" fg:w="41"/><text x="37.2168%" y="687.50"></text></g><g><title>rand::rng::Rng::gen (41 samples, 0.13%)</title><rect x="36.9668%" y="661" width="0.1289%" height="15" fill="rgb(229,163,45)" fg:x="11761" fg:w="41"/><text x="37.2168%" y="671.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u32&gt; for rand::distributions::Standard&gt;::sample (41 samples, 0.13%)</title><rect x="36.9668%" y="645" width="0.1289%" height="15" fill="rgb(231,110,42)" fg:x="11761" fg:w="41"/><text x="37.2168%" y="655.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (41 samples, 0.13%)</title><rect x="36.9668%" y="629" width="0.1289%" height="15" fill="rgb(208,170,48)" fg:x="11761" fg:w="41"/><text x="37.2168%" y="639.50"></text></g><g><title>&lt;rand::rngs::std::StdRng as rand_core::RngCore&gt;::next_u32 (41 samples, 0.13%)</title><rect x="36.9668%" y="613" width="0.1289%" height="15" fill="rgb(239,116,25)" fg:x="11761" fg:w="41"/><text x="37.2168%" y="623.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Rng as rand_core::RngCore&gt;::next_u32 (41 samples, 0.13%)</title><rect x="36.9668%" y="597" width="0.1289%" height="15" fill="rgb(219,200,50)" fg:x="11761" fg:w="41"/><text x="37.2168%" y="607.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (41 samples, 0.13%)</title><rect x="36.9668%" y="581" width="0.1289%" height="15" fill="rgb(245,200,0)" fg:x="11761" fg:w="41"/><text x="37.2168%" y="591.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (41 samples, 0.13%)</title><rect x="36.9668%" y="565" width="0.1289%" height="15" fill="rgb(245,119,33)" fg:x="11761" fg:w="41"/><text x="37.2168%" y="575.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (41 samples, 0.13%)</title><rect x="36.9668%" y="549" width="0.1289%" height="15" fill="rgb(231,125,12)" fg:x="11761" fg:w="41"/><text x="37.2168%" y="559.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (41 samples, 0.13%)</title><rect x="36.9668%" y="533" width="0.1289%" height="15" fill="rgb(216,96,41)" fg:x="11761" fg:w="41"/><text x="37.2168%" y="543.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (37 samples, 0.12%)</title><rect x="36.9794%" y="517" width="0.1163%" height="15" fill="rgb(248,43,45)" fg:x="11765" fg:w="37"/><text x="37.2294%" y="527.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (37 samples, 0.12%)</title><rect x="36.9794%" y="501" width="0.1163%" height="15" fill="rgb(217,222,7)" fg:x="11765" fg:w="37"/><text x="37.2294%" y="511.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (37 samples, 0.12%)</title><rect x="36.9794%" y="485" width="0.1163%" height="15" fill="rgb(233,28,6)" fg:x="11765" fg:w="37"/><text x="37.2294%" y="495.50"></text></g><g><title>rand_chacha::guts::round (37 samples, 0.12%)</title><rect x="36.9794%" y="469" width="0.1163%" height="15" fill="rgb(231,218,15)" fg:x="11765" fg:w="37"/><text x="37.2294%" y="479.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (37 samples, 0.12%)</title><rect x="36.9794%" y="453" width="0.1163%" height="15" fill="rgb(226,171,48)" fg:x="11765" fg:w="37"/><text x="37.2294%" y="463.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (37 samples, 0.12%)</title><rect x="36.9794%" y="437" width="0.1163%" height="15" fill="rgb(235,201,9)" fg:x="11765" fg:w="37"/><text x="37.2294%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (37 samples, 0.12%)</title><rect x="36.9794%" y="421" width="0.1163%" height="15" fill="rgb(217,80,15)" fg:x="11765" fg:w="37"/><text x="37.2294%" y="431.50"></text></g><g><title>&lt;briolette_sim::simulator::Simulator as absim::Simulation&gt;::generate (7,048 samples, 22.15%)</title><rect x="14.9552%" y="773" width="22.1531%" height="15" fill="rgb(219,152,8)" fg:x="4758" fg:w="7048"/><text x="15.2052%" y="783.50">&lt;briolette_sim::simulator::Simulato..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.01%)</title><rect x="37.0957%" y="757" width="0.0126%" height="15" fill="rgb(243,107,38)" fg:x="11802" fg:w="4"/><text x="37.3457%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (4 samples, 0.01%)</title><rect x="37.0957%" y="741" width="0.0126%" height="15" fill="rgb(231,17,5)" fg:x="11802" fg:w="4"/><text x="37.3457%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.01%)</title><rect x="37.0957%" y="725" width="0.0126%" height="15" fill="rgb(209,25,54)" fg:x="11802" fg:w="4"/><text x="37.3457%" y="735.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.01%)</title><rect x="37.0957%" y="709" width="0.0126%" height="15" fill="rgb(219,0,2)" fg:x="11802" fg:w="4"/><text x="37.3457%" y="719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.01%)</title><rect x="37.0957%" y="693" width="0.0126%" height="15" fill="rgb(246,9,5)" fg:x="11802" fg:w="4"/><text x="37.3457%" y="703.50"></text></g><g><title>&lt;absim::clients::LocalSimulationClient&lt;S&gt; as absim::SimulationClient&lt;S&gt;&gt;::run::{{closure}} (7,051 samples, 22.16%)</title><rect x="14.9552%" y="789" width="22.1625%" height="15" fill="rgb(226,159,4)" fg:x="4758" fg:w="7051"/><text x="15.2052%" y="799.50">&lt;absim::clients::LocalSimulationCli..</text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.02%)</title><rect x="37.1177%" y="757" width="0.0157%" height="15" fill="rgb(219,175,34)" fg:x="11809" fg:w="5"/><text x="37.3677%" y="767.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (5 samples, 0.02%)</title><rect x="37.1177%" y="741" width="0.0157%" height="15" fill="rgb(236,10,46)" fg:x="11809" fg:w="5"/><text x="37.3677%" y="751.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (5 samples, 0.02%)</title><rect x="37.1177%" y="725" width="0.0157%" height="15" fill="rgb(240,211,16)" fg:x="11809" fg:w="5"/><text x="37.3677%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.02%)</title><rect x="37.1177%" y="709" width="0.0157%" height="15" fill="rgb(205,3,43)" fg:x="11809" fg:w="5"/><text x="37.3677%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.02%)</title><rect x="37.1177%" y="693" width="0.0157%" height="15" fill="rgb(245,7,22)" fg:x="11809" fg:w="5"/><text x="37.3677%" y="703.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.02%)</title><rect x="37.1177%" y="677" width="0.0157%" height="15" fill="rgb(239,132,32)" fg:x="11809" fg:w="5"/><text x="37.3677%" y="687.50"></text></g><g><title>__rust_alloc (5 samples, 0.02%)</title><rect x="37.1177%" y="661" width="0.0157%" height="15" fill="rgb(228,202,34)" fg:x="11809" fg:w="5"/><text x="37.3677%" y="671.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (5 samples, 0.02%)</title><rect x="37.1177%" y="645" width="0.0157%" height="15" fill="rgb(254,200,22)" fg:x="11809" fg:w="5"/><text x="37.3677%" y="655.50"></text></g><g><title>dhat::new_backtrace_inner (5 samples, 0.02%)</title><rect x="37.1177%" y="629" width="0.0157%" height="15" fill="rgb(219,10,39)" fg:x="11809" fg:w="5"/><text x="37.3677%" y="639.50"></text></g><g><title>backtrace::backtrace::trace (5 samples, 0.02%)</title><rect x="37.1177%" y="613" width="0.0157%" height="15" fill="rgb(226,210,39)" fg:x="11809" fg:w="5"/><text x="37.3677%" y="623.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (5 samples, 0.02%)</title><rect x="37.1177%" y="597" width="0.0157%" height="15" fill="rgb(208,219,16)" fg:x="11809" fg:w="5"/><text x="37.3677%" y="607.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (5 samples, 0.02%)</title><rect x="37.1177%" y="581" width="0.0157%" height="15" fill="rgb(216,158,51)" fg:x="11809" fg:w="5"/><text x="37.3677%" y="591.50"></text></g><g><title>_Unwind_Backtrace (5 samples, 0.02%)</title><rect x="37.1177%" y="565" width="0.0157%" height="15" fill="rgb(233,14,44)" fg:x="11809" fg:w="5"/><text x="37.3677%" y="575.50"></text></g><g><title>backtrace::backtrace::libunwind::trace::trace_fn (5 samples, 0.02%)</title><rect x="37.1177%" y="549" width="0.0157%" height="15" fill="rgb(237,97,39)" fg:x="11809" fg:w="5"/><text x="37.3677%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (5 samples, 0.02%)</title><rect x="37.1177%" y="533" width="0.0157%" height="15" fill="rgb(218,198,43)" fg:x="11809" fg:w="5"/><text x="37.3677%" y="543.50"></text></g><g><title>dhat::new_backtrace_inner::{{closure}} (5 samples, 0.02%)</title><rect x="37.1177%" y="517" width="0.0157%" height="15" fill="rgb(231,104,20)" fg:x="11809" fg:w="5"/><text x="37.3677%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.02%)</title><rect x="37.1177%" y="501" width="0.0157%" height="15" fill="rgb(254,36,13)" fg:x="11809" fg:w="5"/><text x="37.3677%" y="511.50"></text></g><g><title>core::ptr::write (5 samples, 0.02%)</title><rect x="37.1177%" y="485" width="0.0157%" height="15" fill="rgb(248,14,50)" fg:x="11809" fg:w="5"/><text x="37.3677%" y="495.50"></text></g><g><title>&lt;briolette_sim::SimulatorHelpers as core::clone::Clone&gt;::clone (8 samples, 0.03%)</title><rect x="37.1177%" y="773" width="0.0251%" height="15" fill="rgb(217,107,29)" fg:x="11809" fg:w="8"/><text x="37.3677%" y="783.50"></text></g><g><title>dhat::Globals::record_block (5 samples, 0.02%)</title><rect x="37.1429%" y="661" width="0.0157%" height="15" fill="rgb(251,169,33)" fg:x="11817" fg:w="5"/><text x="37.3929%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (5 samples, 0.02%)</title><rect x="37.1429%" y="645" width="0.0157%" height="15" fill="rgb(217,108,32)" fg:x="11817" fg:w="5"/><text x="37.3929%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.02%)</title><rect x="37.1429%" y="629" width="0.0157%" height="15" fill="rgb(219,66,42)" fg:x="11817" fg:w="5"/><text x="37.3929%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (5 samples, 0.02%)</title><rect x="37.1429%" y="613" width="0.0157%" height="15" fill="rgb(206,180,7)" fg:x="11817" fg:w="5"/><text x="37.3929%" y="623.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (5 samples, 0.02%)</title><rect x="37.1429%" y="597" width="0.0157%" height="15" fill="rgb(208,226,31)" fg:x="11817" fg:w="5"/><text x="37.3929%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (5 samples, 0.02%)</title><rect x="37.1429%" y="581" width="0.0157%" height="15" fill="rgb(218,26,49)" fg:x="11817" fg:w="5"/><text x="37.3929%" y="591.50"></text></g><g><title>core::ptr::write (5 samples, 0.02%)</title><rect x="37.1429%" y="565" width="0.0157%" height="15" fill="rgb(233,197,48)" fg:x="11817" fg:w="5"/><text x="37.3929%" y="575.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (8 samples, 0.03%)</title><rect x="37.1429%" y="773" width="0.0251%" height="15" fill="rgb(252,181,51)" fg:x="11817" fg:w="8"/><text x="37.3929%" y="783.50"></text></g><g><title>alloc::alloc::exchange_malloc (8 samples, 0.03%)</title><rect x="37.1429%" y="757" width="0.0251%" height="15" fill="rgb(253,90,19)" fg:x="11817" fg:w="8"/><text x="37.3929%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.03%)</title><rect x="37.1429%" y="741" width="0.0251%" height="15" fill="rgb(215,171,30)" fg:x="11817" fg:w="8"/><text x="37.3929%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.03%)</title><rect x="37.1429%" y="725" width="0.0251%" height="15" fill="rgb(214,222,9)" fg:x="11817" fg:w="8"/><text x="37.3929%" y="735.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.03%)</title><rect x="37.1429%" y="709" width="0.0251%" height="15" fill="rgb(223,3,22)" fg:x="11817" fg:w="8"/><text x="37.3929%" y="719.50"></text></g><g><title>__rust_alloc (8 samples, 0.03%)</title><rect x="37.1429%" y="693" width="0.0251%" height="15" fill="rgb(225,196,46)" fg:x="11817" fg:w="8"/><text x="37.3929%" y="703.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (8 samples, 0.03%)</title><rect x="37.1429%" y="677" width="0.0251%" height="15" fill="rgb(209,110,37)" fg:x="11817" fg:w="8"/><text x="37.3929%" y="687.50"></text></g><g><title>&lt;briolette_sim::simulator::Simulator as core::clone::Clone&gt;::clone (18 samples, 0.06%)</title><rect x="37.1177%" y="789" width="0.0566%" height="15" fill="rgb(249,89,12)" fg:x="11809" fg:w="18"/><text x="37.3677%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;absim::graph_utils::SimulationGraph&gt; (17 samples, 0.05%)</title><rect x="37.1743%" y="789" width="0.0534%" height="15" fill="rgb(226,27,33)" fg:x="11827" fg:w="17"/><text x="37.4243%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;usize&gt;&gt;&gt; (16 samples, 0.05%)</title><rect x="37.1774%" y="773" width="0.0503%" height="15" fill="rgb(213,82,22)" fg:x="11828" fg:w="16"/><text x="37.4274%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.05%)</title><rect x="37.1774%" y="757" width="0.0503%" height="15" fill="rgb(248,140,0)" fg:x="11828" fg:w="16"/><text x="37.4274%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;usize&gt;]&gt; (16 samples, 0.05%)</title><rect x="37.1774%" y="741" width="0.0503%" height="15" fill="rgb(228,106,3)" fg:x="11828" fg:w="16"/><text x="37.4274%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (16 samples, 0.05%)</title><rect x="37.1774%" y="725" width="0.0503%" height="15" fill="rgb(209,23,37)" fg:x="11828" fg:w="16"/><text x="37.4274%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (16 samples, 0.05%)</title><rect x="37.1774%" y="709" width="0.0503%" height="15" fill="rgb(241,93,50)" fg:x="11828" fg:w="16"/><text x="37.4274%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.05%)</title><rect x="37.1774%" y="693" width="0.0503%" height="15" fill="rgb(253,46,43)" fg:x="11828" fg:w="16"/><text x="37.4274%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (16 samples, 0.05%)</title><rect x="37.1774%" y="677" width="0.0503%" height="15" fill="rgb(226,206,43)" fg:x="11828" fg:w="16"/><text x="37.4274%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.05%)</title><rect x="37.1774%" y="661" width="0.0503%" height="15" fill="rgb(217,54,7)" fg:x="11828" fg:w="16"/><text x="37.4274%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.05%)</title><rect x="37.1774%" y="645" width="0.0503%" height="15" fill="rgb(223,5,52)" fg:x="11828" fg:w="16"/><text x="37.4274%" y="655.50"></text></g><g><title>__rust_dealloc (16 samples, 0.05%)</title><rect x="37.1774%" y="629" width="0.0503%" height="15" fill="rgb(206,52,46)" fg:x="11828" fg:w="16"/><text x="37.4274%" y="639.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::dealloc (16 samples, 0.05%)</title><rect x="37.1774%" y="613" width="0.0503%" height="15" fill="rgb(253,136,11)" fg:x="11828" fg:w="16"/><text x="37.4274%" y="623.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (16 samples, 0.05%)</title><rect x="37.1774%" y="597" width="0.0503%" height="15" fill="rgb(208,106,33)" fg:x="11828" fg:w="16"/><text x="37.4274%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (16 samples, 0.05%)</title><rect x="37.1774%" y="581" width="0.0503%" height="15" fill="rgb(206,54,4)" fg:x="11828" fg:w="16"/><text x="37.4274%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (14 samples, 0.04%)</title><rect x="37.1837%" y="565" width="0.0440%" height="15" fill="rgb(213,3,15)" fg:x="11830" fg:w="14"/><text x="37.4337%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (14 samples, 0.04%)</title><rect x="37.1837%" y="549" width="0.0440%" height="15" fill="rgb(252,211,39)" fg:x="11830" fg:w="14"/><text x="37.4337%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove (14 samples, 0.04%)</title><rect x="37.1837%" y="533" width="0.0440%" height="15" fill="rgb(223,6,36)" fg:x="11830" fg:w="14"/><text x="37.4337%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::erase_no_drop (14 samples, 0.04%)</title><rect x="37.1837%" y="517" width="0.0440%" height="15" fill="rgb(252,169,45)" fg:x="11830" fg:w="14"/><text x="37.4337%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner::erase (14 samples, 0.04%)</title><rect x="37.1837%" y="501" width="0.0440%" height="15" fill="rgb(212,48,26)" fg:x="11830" fg:w="14"/><text x="37.4337%" y="511.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (14 samples, 0.04%)</title><rect x="37.1837%" y="485" width="0.0440%" height="15" fill="rgb(251,102,48)" fg:x="11830" fg:w="14"/><text x="37.4337%" y="495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (14 samples, 0.04%)</title><rect x="37.1837%" y="469" width="0.0440%" height="15" fill="rgb(243,208,16)" fg:x="11830" fg:w="14"/><text x="37.4337%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14 samples, 0.04%)</title><rect x="37.1837%" y="453" width="0.0440%" height="15" fill="rgb(219,96,24)" fg:x="11830" fg:w="14"/><text x="37.4337%" y="463.50"></text></g><g><title>&lt;absim::clients::LocalSimulationClient&lt;S&gt; as absim::SimulationClient&lt;S&gt;&gt;::run (7,289 samples, 22.91%)</title><rect x="14.3297%" y="805" width="22.9106%" height="15" fill="rgb(219,33,29)" fg:x="4559" fg:w="7289"/><text x="14.5797%" y="815.50">&lt;absim::clients::LocalSimulationClie..</text></g><g><title>core::ptr::drop_in_place&lt;briolette_sim::simulator::Simulator&gt; (4 samples, 0.01%)</title><rect x="37.2277%" y="789" width="0.0126%" height="15" fill="rgb(223,176,5)" fg:x="11844" fg:w="4"/><text x="37.4777%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;briolette_sim::SimulatorHelpers&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="37.2277%" y="773" width="0.0126%" height="15" fill="rgb(228,140,14)" fg:x="11844" fg:w="4"/><text x="37.4777%" y="783.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="37.2277%" y="757" width="0.0126%" height="15" fill="rgb(217,179,31)" fg:x="11844" fg:w="4"/><text x="37.4777%" y="767.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (4 samples, 0.01%)</title><rect x="37.2277%" y="741" width="0.0126%" height="15" fill="rgb(230,9,30)" fg:x="11844" fg:w="4"/><text x="37.4777%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLock&lt;briolette_sim::SimulatorHelpers&gt;&gt; (4 samples, 0.01%)</title><rect x="37.2277%" y="725" width="0.0126%" height="15" fill="rgb(230,136,20)" fg:x="11844" fg:w="4"/><text x="37.4777%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;briolette_sim::SimulatorHelpers&gt;&gt; (4 samples, 0.01%)</title><rect x="37.2277%" y="709" width="0.0126%" height="15" fill="rgb(215,210,22)" fg:x="11844" fg:w="4"/><text x="37.4777%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;briolette_sim::SimulatorHelpers&gt; (4 samples, 0.01%)</title><rect x="37.2277%" y="693" width="0.0126%" height="15" fill="rgb(218,43,5)" fg:x="11844" fg:w="4"/><text x="37.4777%" y="703.50"></text></g><g><title>&lt;absim::extras::SimulationPopulation&lt;S&gt; as absim::Population&lt;S&gt;&gt;::get_mut (109 samples, 0.34%)</title><rect x="37.2403%" y="805" width="0.3426%" height="15" fill="rgb(216,11,5)" fg:x="11848" fg:w="109"/><text x="37.4903%" y="815.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (109 samples, 0.34%)</title><rect x="37.2403%" y="789" width="0.3426%" height="15" fill="rgb(209,82,29)" fg:x="11848" fg:w="109"/><text x="37.4903%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (109 samples, 0.34%)</title><rect x="37.2403%" y="773" width="0.3426%" height="15" fill="rgb(244,115,12)" fg:x="11848" fg:w="109"/><text x="37.4903%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (109 samples, 0.34%)</title><rect x="37.2403%" y="757" width="0.3426%" height="15" fill="rgb(222,82,18)" fg:x="11848" fg:w="109"/><text x="37.4903%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (109 samples, 0.34%)</title><rect x="37.2403%" y="741" width="0.3426%" height="15" fill="rgb(249,227,8)" fg:x="11848" fg:w="109"/><text x="37.4903%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (109 samples, 0.34%)</title><rect x="37.2403%" y="725" width="0.3426%" height="15" fill="rgb(253,141,45)" fg:x="11848" fg:w="109"/><text x="37.4903%" y="735.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (109 samples, 0.34%)</title><rect x="37.2403%" y="709" width="0.3426%" height="15" fill="rgb(234,184,4)" fg:x="11848" fg:w="109"/><text x="37.4903%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (109 samples, 0.34%)</title><rect x="37.2403%" y="693" width="0.3426%" height="15" fill="rgb(218,194,23)" fg:x="11848" fg:w="109"/><text x="37.4903%" y="703.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (109 samples, 0.34%)</title><rect x="37.2403%" y="677" width="0.3426%" height="15" fill="rgb(235,66,41)" fg:x="11848" fg:w="109"/><text x="37.4903%" y="687.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (109 samples, 0.34%)</title><rect x="37.2403%" y="661" width="0.3426%" height="15" fill="rgb(245,217,1)" fg:x="11848" fg:w="109"/><text x="37.4903%" y="671.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (109 samples, 0.34%)</title><rect x="37.2403%" y="645" width="0.3426%" height="15" fill="rgb(229,91,1)" fg:x="11848" fg:w="109"/><text x="37.4903%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (109 samples, 0.34%)</title><rect x="37.2403%" y="629" width="0.3426%" height="15" fill="rgb(207,101,30)" fg:x="11848" fg:w="109"/><text x="37.4903%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.05%)</title><rect x="37.5955%" y="389" width="0.0471%" height="15" fill="rgb(223,82,49)" fg:x="11961" fg:w="15"/><text x="37.8455%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[backtrace::capture::BacktraceFrame]&gt; (15 samples, 0.05%)</title><rect x="37.5955%" y="373" width="0.0471%" height="15" fill="rgb(218,167,17)" fg:x="11961" fg:w="15"/><text x="37.8455%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;backtrace::capture::BacktraceFrame&gt; (15 samples, 0.05%)</title><rect x="37.5955%" y="357" width="0.0471%" height="15" fill="rgb(208,103,14)" fg:x="11961" fg:w="15"/><text x="37.8455%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;backtrace::capture::BacktraceSymbol&gt;&gt;&gt; (15 samples, 0.05%)</title><rect x="37.5955%" y="341" width="0.0471%" height="15" fill="rgb(238,20,8)" fg:x="11961" fg:w="15"/><text x="37.8455%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;dhat::Backtrace&gt; (18 samples, 0.06%)</title><rect x="37.5955%" y="437" width="0.0566%" height="15" fill="rgb(218,80,54)" fg:x="11961" fg:w="18"/><text x="37.8455%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;backtrace::capture::Backtrace&gt; (18 samples, 0.06%)</title><rect x="37.5955%" y="421" width="0.0566%" height="15" fill="rgb(240,144,17)" fg:x="11961" fg:w="18"/><text x="37.8455%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;backtrace::capture::BacktraceFrame&gt;&gt; (18 samples, 0.06%)</title><rect x="37.5955%" y="405" width="0.0566%" height="15" fill="rgb(245,27,50)" fg:x="11961" fg:w="18"/><text x="37.8455%" y="415.50"></text></g><g><title>dhat::Globals::get_pp_info (84 samples, 0.26%)</title><rect x="37.5892%" y="485" width="0.2640%" height="15" fill="rgb(251,51,7)" fg:x="11959" fg:w="84"/><text x="37.8392%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (82 samples, 0.26%)</title><rect x="37.5955%" y="469" width="0.2577%" height="15" fill="rgb(245,217,29)" fg:x="11961" fg:w="82"/><text x="37.8455%" y="479.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (82 samples, 0.26%)</title><rect x="37.5955%" y="453" width="0.2577%" height="15" fill="rgb(221,176,29)" fg:x="11961" fg:w="82"/><text x="37.8455%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (64 samples, 0.20%)</title><rect x="37.6521%" y="437" width="0.2012%" height="15" fill="rgb(212,180,24)" fg:x="11979" fg:w="64"/><text x="37.9021%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (64 samples, 0.20%)</title><rect x="37.6521%" y="421" width="0.2012%" height="15" fill="rgb(254,24,2)" fg:x="11979" fg:w="64"/><text x="37.9021%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (64 samples, 0.20%)</title><rect x="37.6521%" y="405" width="0.2012%" height="15" fill="rgb(230,100,2)" fg:x="11979" fg:w="64"/><text x="37.9021%" y="415.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (64 samples, 0.20%)</title><rect x="37.6521%" y="389" width="0.2012%" height="15" fill="rgb(219,142,25)" fg:x="11979" fg:w="64"/><text x="37.9021%" y="399.50"></text></g><g><title>&lt;dhat::Backtrace as core::cmp::PartialEq&gt;::eq (64 samples, 0.20%)</title><rect x="37.6521%" y="373" width="0.2012%" height="15" fill="rgb(240,73,43)" fg:x="11979" fg:w="64"/><text x="37.9021%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (64 samples, 0.20%)</title><rect x="37.6521%" y="357" width="0.2012%" height="15" fill="rgb(214,114,15)" fg:x="11979" fg:w="64"/><text x="37.9021%" y="367.50"></text></g><g><title>&lt;dhat::Backtrace as core::cmp::PartialEq&gt;::eq::{{closure}} (64 samples, 0.20%)</title><rect x="37.6521%" y="341" width="0.2012%" height="15" fill="rgb(207,130,4)" fg:x="11979" fg:w="64"/><text x="37.9021%" y="351.50"></text></g><g><title>backtrace::capture::BacktraceFrame::ip (12 samples, 0.04%)</title><rect x="37.8155%" y="325" width="0.0377%" height="15" fill="rgb(221,25,40)" fg:x="12031" fg:w="12"/><text x="38.0655%" y="335.50"></text></g><g><title>backtrace::capture::Frame::ip (12 samples, 0.04%)</title><rect x="37.8155%" y="309" width="0.0377%" height="15" fill="rgb(241,184,7)" fg:x="12031" fg:w="12"/><text x="38.0655%" y="319.50"></text></g><g><title>backtrace::backtrace::Frame::ip (12 samples, 0.04%)</title><rect x="37.8155%" y="293" width="0.0377%" height="15" fill="rgb(235,159,4)" fg:x="12031" fg:w="12"/><text x="38.0655%" y="303.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::ip (12 samples, 0.04%)</title><rect x="37.8155%" y="277" width="0.0377%" height="15" fill="rgb(214,87,48)" fg:x="12031" fg:w="12"/><text x="38.0655%" y="287.50"></text></g><g><title>dhat::Globals::record_block (38 samples, 0.12%)</title><rect x="37.8532%" y="485" width="0.1194%" height="15" fill="rgb(246,198,24)" fg:x="12043" fg:w="38"/><text x="38.1032%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (38 samples, 0.12%)</title><rect x="37.8532%" y="469" width="0.1194%" height="15" fill="rgb(209,66,40)" fg:x="12043" fg:w="38"/><text x="38.1032%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (38 samples, 0.12%)</title><rect x="37.8532%" y="453" width="0.1194%" height="15" fill="rgb(233,147,39)" fg:x="12043" fg:w="38"/><text x="38.1032%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (38 samples, 0.12%)</title><rect x="37.8532%" y="437" width="0.1194%" height="15" fill="rgb(231,145,52)" fg:x="12043" fg:w="38"/><text x="38.1032%" y="447.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (38 samples, 0.12%)</title><rect x="37.8532%" y="421" width="0.1194%" height="15" fill="rgb(206,20,26)" fg:x="12043" fg:w="38"/><text x="38.1032%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (38 samples, 0.12%)</title><rect x="37.8532%" y="405" width="0.1194%" height="15" fill="rgb(238,220,4)" fg:x="12043" fg:w="38"/><text x="38.1032%" y="415.50"></text></g><g><title>core::ptr::write (38 samples, 0.12%)</title><rect x="37.8532%" y="389" width="0.1194%" height="15" fill="rgb(252,195,42)" fg:x="12043" fg:w="38"/><text x="38.1032%" y="399.50"></text></g><g><title>Unknown (19 samples, 0.06%)</title><rect x="38.0575%" y="389" width="0.0597%" height="15" fill="rgb(209,10,6)" fg:x="12108" fg:w="19"/><text x="38.3075%" y="399.50"></text></g><g><title>_Unwind_Find_FDE (65 samples, 0.20%)</title><rect x="38.0575%" y="405" width="0.2043%" height="15" fill="rgb(229,3,52)" fg:x="12108" fg:w="65"/><text x="38.3075%" y="415.50"></text></g><g><title>__GI__dl_find_object (46 samples, 0.14%)</title><rect x="38.1172%" y="389" width="0.1446%" height="15" fill="rgb(253,49,37)" fg:x="12127" fg:w="46"/><text x="38.3672%" y="399.50"></text></g><g><title>_dlfo_lookup (12 samples, 0.04%)</title><rect x="38.2241%" y="373" width="0.0377%" height="15" fill="rgb(240,103,49)" fg:x="12161" fg:w="12"/><text x="38.4741%" y="383.50"></text></g><g><title>Unknown (9 samples, 0.03%)</title><rect x="38.5039%" y="277" width="0.0283%" height="15" fill="rgb(250,182,30)" fg:x="12250" fg:w="9"/><text x="38.7539%" y="287.50"></text></g><g><title>&lt;backtrace::backtrace::Frame as core::clone::Clone&gt;::clone (67 samples, 0.21%)</title><rect x="38.3750%" y="357" width="0.2106%" height="15" fill="rgb(248,8,30)" fg:x="12209" fg:w="67"/><text x="38.6250%" y="367.50"></text></g><g><title>&lt;backtrace::backtrace::libunwind::Frame as core::clone::Clone&gt;::clone (67 samples, 0.21%)</title><rect x="38.3750%" y="341" width="0.2106%" height="15" fill="rgb(237,120,30)" fg:x="12209" fg:w="67"/><text x="38.6250%" y="351.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::symbol_address (26 samples, 0.08%)</title><rect x="38.5039%" y="325" width="0.0817%" height="15" fill="rgb(221,146,34)" fg:x="12250" fg:w="26"/><text x="38.7539%" y="335.50"></text></g><g><title>_Unwind_FindEnclosingFunction (26 samples, 0.08%)</title><rect x="38.5039%" y="309" width="0.0817%" height="15" fill="rgb(242,55,13)" fg:x="12250" fg:w="26"/><text x="38.7539%" y="319.50"></text></g><g><title>_Unwind_Find_FDE (26 samples, 0.08%)</title><rect x="38.5039%" y="293" width="0.0817%" height="15" fill="rgb(242,112,31)" fg:x="12250" fg:w="26"/><text x="38.7539%" y="303.50"></text></g><g><title>__GI__dl_find_object (17 samples, 0.05%)</title><rect x="38.5321%" y="277" width="0.0534%" height="15" fill="rgb(249,192,27)" fg:x="12259" fg:w="17"/><text x="38.7821%" y="287.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (12 samples, 0.04%)</title><rect x="38.5887%" y="293" width="0.0377%" height="15" fill="rgb(208,204,44)" fg:x="12277" fg:w="12"/><text x="38.8387%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (7 samples, 0.02%)</title><rect x="38.6296%" y="277" width="0.0220%" height="15" fill="rgb(208,93,54)" fg:x="12290" fg:w="7"/><text x="38.8796%" y="287.50"></text></g><g><title>alloc::alloc::Global::grow_impl (7 samples, 0.02%)</title><rect x="38.6296%" y="261" width="0.0220%" height="15" fill="rgb(242,1,31)" fg:x="12290" fg:w="7"/><text x="38.8796%" y="271.50"></text></g><g><title>alloc::alloc::realloc (7 samples, 0.02%)</title><rect x="38.6296%" y="245" width="0.0220%" height="15" fill="rgb(241,83,25)" fg:x="12290" fg:w="7"/><text x="38.8796%" y="255.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::realloc (7 samples, 0.02%)</title><rect x="38.6296%" y="229" width="0.0220%" height="15" fill="rgb(205,169,50)" fg:x="12290" fg:w="7"/><text x="38.8796%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (30 samples, 0.09%)</title><rect x="38.5856%" y="357" width="0.0943%" height="15" fill="rgb(239,186,37)" fg:x="12276" fg:w="30"/><text x="38.8356%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (30 samples, 0.09%)</title><rect x="38.5856%" y="341" width="0.0943%" height="15" fill="rgb(205,221,10)" fg:x="12276" fg:w="30"/><text x="38.8356%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (30 samples, 0.09%)</title><rect x="38.5856%" y="325" width="0.0943%" height="15" fill="rgb(218,196,15)" fg:x="12276" fg:w="30"/><text x="38.8356%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (30 samples, 0.09%)</title><rect x="38.5856%" y="309" width="0.0943%" height="15" fill="rgb(218,196,35)" fg:x="12276" fg:w="30"/><text x="38.8356%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (17 samples, 0.05%)</title><rect x="38.6264%" y="293" width="0.0534%" height="15" fill="rgb(233,63,24)" fg:x="12289" fg:w="17"/><text x="38.8764%" y="303.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (5 samples, 0.02%)</title><rect x="38.6642%" y="277" width="0.0157%" height="15" fill="rgb(225,8,4)" fg:x="12301" fg:w="5"/><text x="38.9142%" y="287.50"></text></g><g><title>backtrace::backtrace::Frame::ip (9 samples, 0.03%)</title><rect x="38.6799%" y="357" width="0.0283%" height="15" fill="rgb(234,105,35)" fg:x="12306" fg:w="9"/><text x="38.9299%" y="367.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::ip (9 samples, 0.03%)</title><rect x="38.6799%" y="341" width="0.0283%" height="15" fill="rgb(236,21,32)" fg:x="12306" fg:w="9"/><text x="38.9299%" y="351.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (368 samples, 1.16%)</title><rect x="38.0512%" y="453" width="1.1567%" height="15" fill="rgb(228,109,6)" fg:x="12106" fg:w="368"/><text x="38.3012%" y="463.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (368 samples, 1.16%)</title><rect x="38.0512%" y="437" width="1.1567%" height="15" fill="rgb(229,215,31)" fg:x="12106" fg:w="368"/><text x="38.3012%" y="447.50"></text></g><g><title>_Unwind_Backtrace (368 samples, 1.16%)</title><rect x="38.0512%" y="421" width="1.1567%" height="15" fill="rgb(221,52,54)" fg:x="12106" fg:w="368"/><text x="38.3012%" y="431.50"></text></g><g><title>backtrace::backtrace::libunwind::trace::trace_fn (301 samples, 0.95%)</title><rect x="38.2618%" y="405" width="0.9461%" height="15" fill="rgb(252,129,43)" fg:x="12173" fg:w="301"/><text x="38.5118%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (288 samples, 0.91%)</title><rect x="38.3027%" y="389" width="0.9052%" height="15" fill="rgb(248,183,27)" fg:x="12186" fg:w="288"/><text x="38.5527%" y="399.50"></text></g><g><title>dhat::new_backtrace_inner::{{closure}} (277 samples, 0.87%)</title><rect x="38.3373%" y="373" width="0.8707%" height="15" fill="rgb(250,0,22)" fg:x="12197" fg:w="277"/><text x="38.5873%" y="383.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (159 samples, 0.50%)</title><rect x="38.7082%" y="357" width="0.4998%" height="15" fill="rgb(213,166,10)" fg:x="12315" fg:w="159"/><text x="38.9582%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (159 samples, 0.50%)</title><rect x="38.7082%" y="341" width="0.4998%" height="15" fill="rgb(207,163,36)" fg:x="12315" fg:w="159"/><text x="38.9582%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (159 samples, 0.50%)</title><rect x="38.7082%" y="325" width="0.4998%" height="15" fill="rgb(208,122,22)" fg:x="12315" fg:w="159"/><text x="38.9582%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (159 samples, 0.50%)</title><rect x="38.7082%" y="309" width="0.4998%" height="15" fill="rgb(207,104,49)" fg:x="12315" fg:w="159"/><text x="38.9582%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (159 samples, 0.50%)</title><rect x="38.7082%" y="293" width="0.4998%" height="15" fill="rgb(248,211,50)" fg:x="12315" fg:w="159"/><text x="38.9582%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (159 samples, 0.50%)</title><rect x="38.7082%" y="277" width="0.4998%" height="15" fill="rgb(217,13,45)" fg:x="12315" fg:w="159"/><text x="38.9582%" y="287.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (159 samples, 0.50%)</title><rect x="38.7082%" y="261" width="0.4998%" height="15" fill="rgb(211,216,49)" fg:x="12315" fg:w="159"/><text x="38.9582%" y="271.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (159 samples, 0.50%)</title><rect x="38.7082%" y="245" width="0.4998%" height="15" fill="rgb(221,58,53)" fg:x="12315" fg:w="159"/><text x="38.9582%" y="255.50"></text></g><g><title>dhat::new_backtrace_inner (397 samples, 1.25%)</title><rect x="37.9789%" y="485" width="1.2478%" height="15" fill="rgb(220,112,41)" fg:x="12083" fg:w="397"/><text x="38.2289%" y="495.50"></text></g><g><title>backtrace::backtrace::trace (392 samples, 1.23%)</title><rect x="37.9947%" y="469" width="1.2321%" height="15" fill="rgb(236,38,28)" fg:x="12088" fg:w="392"/><text x="38.2447%" y="479.50"></text></g><g><title>backtrace::lock::lock (6 samples, 0.02%)</title><rect x="39.2079%" y="453" width="0.0189%" height="15" fill="rgb(227,195,22)" fg:x="12474" fg:w="6"/><text x="39.4579%" y="463.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (6 samples, 0.02%)</title><rect x="39.2079%" y="437" width="0.0189%" height="15" fill="rgb(214,55,33)" fg:x="12474" fg:w="6"/><text x="39.4579%" y="447.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (6 samples, 0.02%)</title><rect x="39.2079%" y="421" width="0.0189%" height="15" fill="rgb(248,80,13)" fg:x="12474" fg:w="6"/><text x="39.4579%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (6 samples, 0.02%)</title><rect x="39.2079%" y="405" width="0.0189%" height="15" fill="rgb(238,52,6)" fg:x="12474" fg:w="6"/><text x="39.4579%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.02%)</title><rect x="39.2079%" y="389" width="0.0189%" height="15" fill="rgb(224,198,47)" fg:x="12474" fg:w="6"/><text x="39.4579%" y="399.50"></text></g><g><title>mintex::Mutex&lt;T&gt;::lock (10 samples, 0.03%)</title><rect x="39.2268%" y="485" width="0.0314%" height="15" fill="rgb(233,171,20)" fg:x="12480" fg:w="10"/><text x="39.4768%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (10 samples, 0.03%)</title><rect x="39.2268%" y="469" width="0.0314%" height="15" fill="rgb(241,30,25)" fg:x="12480" fg:w="10"/><text x="39.4768%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (10 samples, 0.03%)</title><rect x="39.2268%" y="453" width="0.0314%" height="15" fill="rgb(207,171,38)" fg:x="12480" fg:w="10"/><text x="39.4768%" y="463.50"></text></g><g><title>&lt;absim::graph_utils::Vertex as core::clone::Clone&gt;::clone (536 samples, 1.68%)</title><rect x="37.5829%" y="709" width="1.6847%" height="15" fill="rgb(234,70,1)" fg:x="11957" fg:w="536"/><text x="37.8329%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (536 samples, 1.68%)</title><rect x="37.5829%" y="693" width="1.6847%" height="15" fill="rgb(232,178,18)" fg:x="11957" fg:w="536"/><text x="37.8329%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (536 samples, 1.68%)</title><rect x="37.5829%" y="677" width="1.6847%" height="15" fill="rgb(241,78,40)" fg:x="11957" fg:w="536"/><text x="37.8329%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (536 samples, 1.68%)</title><rect x="37.5829%" y="661" width="1.6847%" height="15" fill="rgb(222,35,25)" fg:x="11957" fg:w="536"/><text x="37.8329%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (536 samples, 1.68%)</title><rect x="37.5829%" y="645" width="1.6847%" height="15" fill="rgb(207,92,16)" fg:x="11957" fg:w="536"/><text x="37.8329%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (536 samples, 1.68%)</title><rect x="37.5829%" y="629" width="1.6847%" height="15" fill="rgb(216,59,51)" fg:x="11957" fg:w="536"/><text x="37.8329%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (536 samples, 1.68%)</title><rect x="37.5829%" y="613" width="1.6847%" height="15" fill="rgb(213,80,28)" fg:x="11957" fg:w="536"/><text x="37.8329%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (536 samples, 1.68%)</title><rect x="37.5829%" y="597" width="1.6847%" height="15" fill="rgb(220,93,7)" fg:x="11957" fg:w="536"/><text x="37.8329%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (536 samples, 1.68%)</title><rect x="37.5829%" y="581" width="1.6847%" height="15" fill="rgb(225,24,44)" fg:x="11957" fg:w="536"/><text x="37.8329%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (536 samples, 1.68%)</title><rect x="37.5829%" y="565" width="1.6847%" height="15" fill="rgb(243,74,40)" fg:x="11957" fg:w="536"/><text x="37.8329%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (536 samples, 1.68%)</title><rect x="37.5829%" y="549" width="1.6847%" height="15" fill="rgb(228,39,7)" fg:x="11957" fg:w="536"/><text x="37.8329%" y="559.50"></text></g><g><title>alloc::alloc::alloc (536 samples, 1.68%)</title><rect x="37.5829%" y="533" width="1.6847%" height="15" fill="rgb(227,79,8)" fg:x="11957" fg:w="536"/><text x="37.8329%" y="543.50"></text></g><g><title>__rust_alloc (536 samples, 1.68%)</title><rect x="37.5829%" y="517" width="1.6847%" height="15" fill="rgb(236,58,11)" fg:x="11957" fg:w="536"/><text x="37.8329%" y="527.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (535 samples, 1.68%)</title><rect x="37.5860%" y="501" width="1.6816%" height="15" fill="rgb(249,63,35)" fg:x="11958" fg:w="535"/><text x="37.8360%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.03%)</title><rect x="39.3494%" y="405" width="0.0283%" height="15" fill="rgb(252,114,16)" fg:x="12519" fg:w="9"/><text x="39.5994%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[backtrace::capture::BacktraceFrame]&gt; (9 samples, 0.03%)</title><rect x="39.3494%" y="389" width="0.0283%" height="15" fill="rgb(254,151,24)" fg:x="12519" fg:w="9"/><text x="39.5994%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;backtrace::capture::BacktraceFrame&gt; (9 samples, 0.03%)</title><rect x="39.3494%" y="373" width="0.0283%" height="15" fill="rgb(253,54,39)" fg:x="12519" fg:w="9"/><text x="39.5994%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;backtrace::capture::BacktraceSymbol&gt;&gt;&gt; (9 samples, 0.03%)</title><rect x="39.3494%" y="357" width="0.0283%" height="15" fill="rgb(243,25,45)" fg:x="12519" fg:w="9"/><text x="39.5994%" y="367.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::dealloc (6 samples, 0.02%)</title><rect x="39.3777%" y="325" width="0.0189%" height="15" fill="rgb(234,134,9)" fg:x="12528" fg:w="6"/><text x="39.6277%" y="335.50"></text></g><g><title>dhat::IgnoreAllocs::new (6 samples, 0.02%)</title><rect x="39.3777%" y="309" width="0.0189%" height="15" fill="rgb(227,166,31)" fg:x="12528" fg:w="6"/><text x="39.6277%" y="319.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6 samples, 0.02%)</title><rect x="39.3777%" y="293" width="0.0189%" height="15" fill="rgb(245,143,41)" fg:x="12528" fg:w="6"/><text x="39.6277%" y="303.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.02%)</title><rect x="39.3777%" y="277" width="0.0189%" height="15" fill="rgb(238,181,32)" fg:x="12528" fg:w="6"/><text x="39.6277%" y="287.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.02%)</title><rect x="39.3777%" y="261" width="0.0189%" height="15" fill="rgb(224,113,18)" fg:x="12528" fg:w="6"/><text x="39.6277%" y="271.50"></text></g><g><title>dhat::IGNORE_ALLOCS::{{constant}}::{{closure}} (6 samples, 0.02%)</title><rect x="39.3777%" y="245" width="0.0189%" height="15" fill="rgb(240,229,28)" fg:x="12528" fg:w="6"/><text x="39.6277%" y="255.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (6 samples, 0.02%)</title><rect x="39.3777%" y="229" width="0.0189%" height="15" fill="rgb(250,185,3)" fg:x="12528" fg:w="6"/><text x="39.6277%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;dhat::Backtrace&gt; (16 samples, 0.05%)</title><rect x="39.3494%" y="453" width="0.0503%" height="15" fill="rgb(212,59,25)" fg:x="12519" fg:w="16"/><text x="39.5994%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;backtrace::capture::Backtrace&gt; (16 samples, 0.05%)</title><rect x="39.3494%" y="437" width="0.0503%" height="15" fill="rgb(221,87,20)" fg:x="12519" fg:w="16"/><text x="39.5994%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;backtrace::capture::BacktraceFrame&gt;&gt; (16 samples, 0.05%)</title><rect x="39.3494%" y="421" width="0.0503%" height="15" fill="rgb(213,74,28)" fg:x="12519" fg:w="16"/><text x="39.5994%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;backtrace::capture::BacktraceFrame&gt;&gt; (7 samples, 0.02%)</title><rect x="39.3777%" y="405" width="0.0220%" height="15" fill="rgb(224,132,34)" fg:x="12528" fg:w="7"/><text x="39.6277%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="39.3777%" y="389" width="0.0220%" height="15" fill="rgb(222,101,24)" fg:x="12528" fg:w="7"/><text x="39.6277%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (7 samples, 0.02%)</title><rect x="39.3777%" y="373" width="0.0220%" height="15" fill="rgb(254,142,4)" fg:x="12528" fg:w="7"/><text x="39.6277%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.02%)</title><rect x="39.3777%" y="357" width="0.0220%" height="15" fill="rgb(230,229,49)" fg:x="12528" fg:w="7"/><text x="39.6277%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.02%)</title><rect x="39.3777%" y="341" width="0.0220%" height="15" fill="rgb(238,70,47)" fg:x="12528" fg:w="7"/><text x="39.6277%" y="351.50"></text></g><g><title>hashbrown::map::make_hash (46 samples, 0.14%)</title><rect x="39.3997%" y="453" width="0.1446%" height="15" fill="rgb(231,160,17)" fg:x="12535" fg:w="46"/><text x="39.6497%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (46 samples, 0.14%)</title><rect x="39.3997%" y="437" width="0.1446%" height="15" fill="rgb(218,68,53)" fg:x="12535" fg:w="46"/><text x="39.6497%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (46 samples, 0.14%)</title><rect x="39.3997%" y="421" width="0.1446%" height="15" fill="rgb(236,111,10)" fg:x="12535" fg:w="46"/><text x="39.6497%" y="431.50"></text></g><g><title>&lt;dhat::Backtrace as core::hash::Hash&gt;::hash (46 samples, 0.14%)</title><rect x="39.3997%" y="405" width="0.1446%" height="15" fill="rgb(224,34,41)" fg:x="12535" fg:w="46"/><text x="39.6497%" y="415.50"></text></g><g><title>dhat::Globals::get_pp_info (85 samples, 0.27%)</title><rect x="39.3462%" y="501" width="0.2672%" height="15" fill="rgb(241,118,19)" fg:x="12518" fg:w="85"/><text x="39.5962%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (84 samples, 0.26%)</title><rect x="39.3494%" y="485" width="0.2640%" height="15" fill="rgb(238,129,25)" fg:x="12519" fg:w="84"/><text x="39.5994%" y="495.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (84 samples, 0.26%)</title><rect x="39.3494%" y="469" width="0.2640%" height="15" fill="rgb(238,22,31)" fg:x="12519" fg:w="84"/><text x="39.5994%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (22 samples, 0.07%)</title><rect x="39.5442%" y="453" width="0.0691%" height="15" fill="rgb(222,174,48)" fg:x="12581" fg:w="22"/><text x="39.7942%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (22 samples, 0.07%)</title><rect x="39.5442%" y="437" width="0.0691%" height="15" fill="rgb(206,152,40)" fg:x="12581" fg:w="22"/><text x="39.7942%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (22 samples, 0.07%)</title><rect x="39.5442%" y="421" width="0.0691%" height="15" fill="rgb(218,99,54)" fg:x="12581" fg:w="22"/><text x="39.7942%" y="431.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (22 samples, 0.07%)</title><rect x="39.5442%" y="405" width="0.0691%" height="15" fill="rgb(220,174,26)" fg:x="12581" fg:w="22"/><text x="39.7942%" y="415.50"></text></g><g><title>&lt;dhat::Backtrace as core::cmp::PartialEq&gt;::eq (22 samples, 0.07%)</title><rect x="39.5442%" y="389" width="0.0691%" height="15" fill="rgb(245,116,9)" fg:x="12581" fg:w="22"/><text x="39.7942%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (22 samples, 0.07%)</title><rect x="39.5442%" y="373" width="0.0691%" height="15" fill="rgb(209,72,35)" fg:x="12581" fg:w="22"/><text x="39.7942%" y="383.50"></text></g><g><title>&lt;dhat::Backtrace as core::cmp::PartialEq&gt;::eq::{{closure}} (22 samples, 0.07%)</title><rect x="39.5442%" y="357" width="0.0691%" height="15" fill="rgb(226,126,21)" fg:x="12581" fg:w="22"/><text x="39.7942%" y="367.50"></text></g><g><title>backtrace::capture::BacktraceFrame::ip (10 samples, 0.03%)</title><rect x="39.5820%" y="341" width="0.0314%" height="15" fill="rgb(227,192,1)" fg:x="12593" fg:w="10"/><text x="39.8320%" y="351.50"></text></g><g><title>backtrace::capture::Frame::ip (10 samples, 0.03%)</title><rect x="39.5820%" y="325" width="0.0314%" height="15" fill="rgb(237,180,29)" fg:x="12593" fg:w="10"/><text x="39.8320%" y="335.50"></text></g><g><title>backtrace::backtrace::Frame::ip (10 samples, 0.03%)</title><rect x="39.5820%" y="309" width="0.0314%" height="15" fill="rgb(230,197,35)" fg:x="12593" fg:w="10"/><text x="39.8320%" y="319.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::ip (10 samples, 0.03%)</title><rect x="39.5820%" y="293" width="0.0314%" height="15" fill="rgb(246,193,31)" fg:x="12593" fg:w="10"/><text x="39.8320%" y="303.50"></text></g><g><title>dhat::Globals::record_block (141 samples, 0.44%)</title><rect x="39.6134%" y="501" width="0.4432%" height="15" fill="rgb(241,36,4)" fg:x="12603" fg:w="141"/><text x="39.8634%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (141 samples, 0.44%)</title><rect x="39.6134%" y="485" width="0.4432%" height="15" fill="rgb(241,130,17)" fg:x="12603" fg:w="141"/><text x="39.8634%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (141 samples, 0.44%)</title><rect x="39.6134%" y="469" width="0.4432%" height="15" fill="rgb(206,137,32)" fg:x="12603" fg:w="141"/><text x="39.8634%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (141 samples, 0.44%)</title><rect x="39.6134%" y="453" width="0.4432%" height="15" fill="rgb(237,228,51)" fg:x="12603" fg:w="141"/><text x="39.8634%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (141 samples, 0.44%)</title><rect x="39.6134%" y="437" width="0.4432%" height="15" fill="rgb(243,6,42)" fg:x="12603" fg:w="141"/><text x="39.8634%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (141 samples, 0.44%)</title><rect x="39.6134%" y="421" width="0.4432%" height="15" fill="rgb(251,74,28)" fg:x="12603" fg:w="141"/><text x="39.8634%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (141 samples, 0.44%)</title><rect x="39.6134%" y="405" width="0.4432%" height="15" fill="rgb(218,20,49)" fg:x="12603" fg:w="141"/><text x="39.8634%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (141 samples, 0.44%)</title><rect x="39.6134%" y="389" width="0.4432%" height="15" fill="rgb(238,28,14)" fg:x="12603" fg:w="141"/><text x="39.8634%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (141 samples, 0.44%)</title><rect x="39.6134%" y="373" width="0.4432%" height="15" fill="rgb(229,40,46)" fg:x="12603" fg:w="141"/><text x="39.8634%" y="383.50"></text></g><g><title>&lt;backtrace::lock::LockGuard as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="40.2043%" y="469" width="0.0126%" height="15" fill="rgb(244,195,20)" fg:x="12791" fg:w="4"/><text x="40.4543%" y="479.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.01%)</title><rect x="40.2043%" y="453" width="0.0126%" height="15" fill="rgb(253,56,35)" fg:x="12791" fg:w="4"/><text x="40.4543%" y="463.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.01%)</title><rect x="40.2043%" y="437" width="0.0126%" height="15" fill="rgb(210,149,44)" fg:x="12791" fg:w="4"/><text x="40.4543%" y="447.50"></text></g><g><title>&lt;backtrace::lock::LockGuard as core::ops::drop::Drop&gt;::drop::{{closure}} (4 samples, 0.01%)</title><rect x="40.2043%" y="421" width="0.0126%" height="15" fill="rgb(240,135,12)" fg:x="12791" fg:w="4"/><text x="40.4543%" y="431.50"></text></g><g><title>Unknown (18 samples, 0.06%)</title><rect x="40.2200%" y="405" width="0.0566%" height="15" fill="rgb(251,24,50)" fg:x="12796" fg:w="18"/><text x="40.4700%" y="415.50"></text></g><g><title>_Unwind_Find_FDE (26 samples, 0.08%)</title><rect x="40.2200%" y="421" width="0.0817%" height="15" fill="rgb(243,200,47)" fg:x="12796" fg:w="26"/><text x="40.4700%" y="431.50"></text></g><g><title>__GI__dl_find_object (8 samples, 0.03%)</title><rect x="40.2766%" y="405" width="0.0251%" height="15" fill="rgb(224,166,26)" fg:x="12814" fg:w="8"/><text x="40.5266%" y="415.50"></text></g><g><title>Unknown (19 samples, 0.06%)</title><rect x="40.3960%" y="293" width="0.0597%" height="15" fill="rgb(233,0,47)" fg:x="12852" fg:w="19"/><text x="40.6460%" y="303.50"></text></g><g><title>_Unwind_FindEnclosingFunction (41 samples, 0.13%)</title><rect x="40.3960%" y="325" width="0.1289%" height="15" fill="rgb(253,80,5)" fg:x="12852" fg:w="41"/><text x="40.6460%" y="335.50"></text></g><g><title>_Unwind_Find_FDE (41 samples, 0.13%)</title><rect x="40.3960%" y="309" width="0.1289%" height="15" fill="rgb(214,133,25)" fg:x="12852" fg:w="41"/><text x="40.6460%" y="319.50"></text></g><g><title>__GI__dl_find_object (22 samples, 0.07%)</title><rect x="40.4558%" y="293" width="0.0691%" height="15" fill="rgb(209,27,14)" fg:x="12871" fg:w="22"/><text x="40.7058%" y="303.50"></text></g><g><title>&lt;backtrace::backtrace::Frame as core::clone::Clone&gt;::clone (70 samples, 0.22%)</title><rect x="40.3772%" y="373" width="0.2200%" height="15" fill="rgb(219,102,51)" fg:x="12846" fg:w="70"/><text x="40.6272%" y="383.50"></text></g><g><title>&lt;backtrace::backtrace::libunwind::Frame as core::clone::Clone&gt;::clone (64 samples, 0.20%)</title><rect x="40.3960%" y="357" width="0.2012%" height="15" fill="rgb(237,18,16)" fg:x="12852" fg:w="64"/><text x="40.6460%" y="367.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::symbol_address (64 samples, 0.20%)</title><rect x="40.3960%" y="341" width="0.2012%" height="15" fill="rgb(241,85,17)" fg:x="12852" fg:w="64"/><text x="40.6460%" y="351.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::ip (23 samples, 0.07%)</title><rect x="40.5249%" y="325" width="0.0723%" height="15" fill="rgb(236,90,42)" fg:x="12893" fg:w="23"/><text x="40.7749%" y="335.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (21 samples, 0.07%)</title><rect x="40.5972%" y="309" width="0.0660%" height="15" fill="rgb(249,57,21)" fg:x="12916" fg:w="21"/><text x="40.8472%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (7 samples, 0.02%)</title><rect x="40.6789%" y="293" width="0.0220%" height="15" fill="rgb(243,12,36)" fg:x="12942" fg:w="7"/><text x="40.9289%" y="303.50"></text></g><g><title>alloc::alloc::Global::grow_impl (7 samples, 0.02%)</title><rect x="40.6789%" y="277" width="0.0220%" height="15" fill="rgb(253,128,47)" fg:x="12942" fg:w="7"/><text x="40.9289%" y="287.50"></text></g><g><title>alloc::alloc::realloc (7 samples, 0.02%)</title><rect x="40.6789%" y="261" width="0.0220%" height="15" fill="rgb(207,33,20)" fg:x="12942" fg:w="7"/><text x="40.9289%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (34 samples, 0.11%)</title><rect x="40.5972%" y="357" width="0.1069%" height="15" fill="rgb(233,215,35)" fg:x="12916" fg:w="34"/><text x="40.8472%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (34 samples, 0.11%)</title><rect x="40.5972%" y="341" width="0.1069%" height="15" fill="rgb(249,188,52)" fg:x="12916" fg:w="34"/><text x="40.8472%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (34 samples, 0.11%)</title><rect x="40.5972%" y="325" width="0.1069%" height="15" fill="rgb(225,12,32)" fg:x="12916" fg:w="34"/><text x="40.8472%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (13 samples, 0.04%)</title><rect x="40.6632%" y="309" width="0.0409%" height="15" fill="rgb(247,98,14)" fg:x="12937" fg:w="13"/><text x="40.9132%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (198 samples, 0.62%)</title><rect x="40.5972%" y="373" width="0.6223%" height="15" fill="rgb(247,219,48)" fg:x="12916" fg:w="198"/><text x="40.8472%" y="383.50"></text></g><g><title>core::ptr::write (164 samples, 0.52%)</title><rect x="40.7041%" y="357" width="0.5155%" height="15" fill="rgb(253,60,48)" fg:x="12950" fg:w="164"/><text x="40.9541%" y="367.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (334 samples, 1.05%)</title><rect x="40.2169%" y="469" width="1.0498%" height="15" fill="rgb(245,15,52)" fg:x="12795" fg:w="334"/><text x="40.4669%" y="479.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (334 samples, 1.05%)</title><rect x="40.2169%" y="453" width="1.0498%" height="15" fill="rgb(220,133,28)" fg:x="12795" fg:w="334"/><text x="40.4669%" y="463.50"></text></g><g><title>_Unwind_Backtrace (334 samples, 1.05%)</title><rect x="40.2169%" y="437" width="1.0498%" height="15" fill="rgb(217,180,4)" fg:x="12795" fg:w="334"/><text x="40.4669%" y="447.50"></text></g><g><title>backtrace::backtrace::libunwind::trace::trace_fn (307 samples, 0.96%)</title><rect x="40.3017%" y="421" width="0.9650%" height="15" fill="rgb(251,24,1)" fg:x="12822" fg:w="307"/><text x="40.5517%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (307 samples, 0.96%)</title><rect x="40.3017%" y="405" width="0.9650%" height="15" fill="rgb(212,185,49)" fg:x="12822" fg:w="307"/><text x="40.5517%" y="415.50"></text></g><g><title>dhat::new_backtrace_inner::{{closure}} (283 samples, 0.89%)</title><rect x="40.3772%" y="389" width="0.8895%" height="15" fill="rgb(215,175,22)" fg:x="12846" fg:w="283"/><text x="40.6272%" y="399.50"></text></g><g><title>backtrace::backtrace::Frame::ip (15 samples, 0.05%)</title><rect x="41.2196%" y="373" width="0.0471%" height="15" fill="rgb(250,205,14)" fg:x="13114" fg:w="15"/><text x="41.4696%" y="383.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::ip (15 samples, 0.05%)</title><rect x="41.2196%" y="357" width="0.0471%" height="15" fill="rgb(225,211,22)" fg:x="13114" fg:w="15"/><text x="41.4696%" y="367.50"></text></g><g><title>dhat::new_backtrace_inner (389 samples, 1.22%)</title><rect x="40.0566%" y="501" width="1.2227%" height="15" fill="rgb(251,179,42)" fg:x="12744" fg:w="389"/><text x="40.3066%" y="511.50"></text></g><g><title>backtrace::backtrace::trace (359 samples, 1.13%)</title><rect x="40.1509%" y="485" width="1.1284%" height="15" fill="rgb(208,216,51)" fg:x="12774" fg:w="359"/><text x="40.4009%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (641 samples, 2.01%)</title><rect x="39.2676%" y="709" width="2.0148%" height="15" fill="rgb(235,36,11)" fg:x="12493" fg:w="641"/><text x="39.5176%" y="719.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (641 samples, 2.01%)</title><rect x="39.2676%" y="693" width="2.0148%" height="15" fill="rgb(213,189,28)" fg:x="12493" fg:w="641"/><text x="39.5176%" y="703.50">a..</text></g><g><title>alloc::slice::hack::to_vec (641 samples, 2.01%)</title><rect x="39.2676%" y="677" width="2.0148%" height="15" fill="rgb(227,203,42)" fg:x="12493" fg:w="641"/><text x="39.5176%" y="687.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (641 samples, 2.01%)</title><rect x="39.2676%" y="661" width="2.0148%" height="15" fill="rgb(244,72,36)" fg:x="12493" fg:w="641"/><text x="39.5176%" y="671.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (641 samples, 2.01%)</title><rect x="39.2676%" y="645" width="2.0148%" height="15" fill="rgb(213,53,17)" fg:x="12493" fg:w="641"/><text x="39.5176%" y="655.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (641 samples, 2.01%)</title><rect x="39.2676%" y="629" width="2.0148%" height="15" fill="rgb(207,167,3)" fg:x="12493" fg:w="641"/><text x="39.5176%" y="639.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (641 samples, 2.01%)</title><rect x="39.2676%" y="613" width="2.0148%" height="15" fill="rgb(216,98,30)" fg:x="12493" fg:w="641"/><text x="39.5176%" y="623.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (641 samples, 2.01%)</title><rect x="39.2676%" y="597" width="2.0148%" height="15" fill="rgb(236,123,15)" fg:x="12493" fg:w="641"/><text x="39.5176%" y="607.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (637 samples, 2.00%)</title><rect x="39.2802%" y="581" width="2.0022%" height="15" fill="rgb(248,81,50)" fg:x="12497" fg:w="637"/><text x="39.5302%" y="591.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (637 samples, 2.00%)</title><rect x="39.2802%" y="565" width="2.0022%" height="15" fill="rgb(214,120,4)" fg:x="12497" fg:w="637"/><text x="39.5302%" y="575.50">a..</text></g><g><title>alloc::alloc::alloc (637 samples, 2.00%)</title><rect x="39.2802%" y="549" width="2.0022%" height="15" fill="rgb(208,179,34)" fg:x="12497" fg:w="637"/><text x="39.5302%" y="559.50">a..</text></g><g><title>__rust_alloc (637 samples, 2.00%)</title><rect x="39.2802%" y="533" width="2.0022%" height="15" fill="rgb(227,140,7)" fg:x="12497" fg:w="637"/><text x="39.5302%" y="543.50">_..</text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (637 samples, 2.00%)</title><rect x="39.2802%" y="517" width="2.0022%" height="15" fill="rgb(214,22,6)" fg:x="12497" fg:w="637"/><text x="39.5302%" y="527.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.03%)</title><rect x="41.2824%" y="709" width="0.0346%" height="15" fill="rgb(207,137,27)" fg:x="13134" fg:w="11"/><text x="41.5324%" y="719.50"></text></g><g><title>_Unwind_Find_FDE (38 samples, 0.12%)</title><rect x="41.3264%" y="485" width="0.1194%" height="15" fill="rgb(210,8,46)" fg:x="13148" fg:w="38"/><text x="41.5764%" y="495.50"></text></g><g><title>__GI__dl_find_object (38 samples, 0.12%)</title><rect x="41.3264%" y="469" width="0.1194%" height="15" fill="rgb(240,16,54)" fg:x="13148" fg:w="38"/><text x="41.5764%" y="479.50"></text></g><g><title>&lt;absim::graph_utils::SimulationGraph as core::clone::Clone&gt;::clone (1,230 samples, 3.87%)</title><rect x="37.5829%" y="789" width="3.8661%" height="15" fill="rgb(211,209,29)" fg:x="11957" fg:w="1230"/><text x="37.8329%" y="799.50">&lt;abs..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,230 samples, 3.87%)</title><rect x="37.5829%" y="773" width="3.8661%" height="15" fill="rgb(226,228,24)" fg:x="11957" fg:w="1230"/><text x="37.8329%" y="783.50">&lt;all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,230 samples, 3.87%)</title><rect x="37.5829%" y="757" width="3.8661%" height="15" fill="rgb(222,84,9)" fg:x="11957" fg:w="1230"/><text x="37.8329%" y="767.50">allo..</text></g><g><title>alloc::slice::hack::to_vec (1,230 samples, 3.87%)</title><rect x="37.5829%" y="741" width="3.8661%" height="15" fill="rgb(234,203,30)" fg:x="11957" fg:w="1230"/><text x="37.8329%" y="751.50">allo..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,230 samples, 3.87%)</title><rect x="37.5829%" y="725" width="3.8661%" height="15" fill="rgb(238,109,14)" fg:x="11957" fg:w="1230"/><text x="37.8329%" y="735.50">&lt;T a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (42 samples, 0.13%)</title><rect x="41.3170%" y="709" width="0.1320%" height="15" fill="rgb(233,206,34)" fg:x="13145" fg:w="42"/><text x="41.5670%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (42 samples, 0.13%)</title><rect x="41.3170%" y="693" width="0.1320%" height="15" fill="rgb(220,167,47)" fg:x="13145" fg:w="42"/><text x="41.5670%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (42 samples, 0.13%)</title><rect x="41.3170%" y="677" width="0.1320%" height="15" fill="rgb(238,105,10)" fg:x="13145" fg:w="42"/><text x="41.5670%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (42 samples, 0.13%)</title><rect x="41.3170%" y="661" width="0.1320%" height="15" fill="rgb(213,227,17)" fg:x="13145" fg:w="42"/><text x="41.5670%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (42 samples, 0.13%)</title><rect x="41.3170%" y="645" width="0.1320%" height="15" fill="rgb(217,132,38)" fg:x="13145" fg:w="42"/><text x="41.5670%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (42 samples, 0.13%)</title><rect x="41.3170%" y="629" width="0.1320%" height="15" fill="rgb(242,146,4)" fg:x="13145" fg:w="42"/><text x="41.5670%" y="639.50"></text></g><g><title>alloc::alloc::alloc (42 samples, 0.13%)</title><rect x="41.3170%" y="613" width="0.1320%" height="15" fill="rgb(212,61,9)" fg:x="13145" fg:w="42"/><text x="41.5670%" y="623.50"></text></g><g><title>__rust_alloc (42 samples, 0.13%)</title><rect x="41.3170%" y="597" width="0.1320%" height="15" fill="rgb(247,126,22)" fg:x="13145" fg:w="42"/><text x="41.5670%" y="607.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (42 samples, 0.13%)</title><rect x="41.3170%" y="581" width="0.1320%" height="15" fill="rgb(220,196,2)" fg:x="13145" fg:w="42"/><text x="41.5670%" y="591.50"></text></g><g><title>dhat::new_backtrace_inner (39 samples, 0.12%)</title><rect x="41.3264%" y="565" width="0.1226%" height="15" fill="rgb(208,46,4)" fg:x="13148" fg:w="39"/><text x="41.5764%" y="575.50"></text></g><g><title>backtrace::backtrace::trace (39 samples, 0.12%)</title><rect x="41.3264%" y="549" width="0.1226%" height="15" fill="rgb(252,104,46)" fg:x="13148" fg:w="39"/><text x="41.5764%" y="559.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (39 samples, 0.12%)</title><rect x="41.3264%" y="533" width="0.1226%" height="15" fill="rgb(237,152,48)" fg:x="13148" fg:w="39"/><text x="41.5764%" y="543.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (39 samples, 0.12%)</title><rect x="41.3264%" y="517" width="0.1226%" height="15" fill="rgb(221,59,37)" fg:x="13148" fg:w="39"/><text x="41.5764%" y="527.50"></text></g><g><title>_Unwind_Backtrace (39 samples, 0.12%)</title><rect x="41.3264%" y="501" width="0.1226%" height="15" fill="rgb(209,202,51)" fg:x="13148" fg:w="39"/><text x="41.5764%" y="511.50"></text></g><g><title>_Unwind_Find_FDE (4 samples, 0.01%)</title><rect x="41.4584%" y="421" width="0.0126%" height="15" fill="rgb(228,81,30)" fg:x="13190" fg:w="4"/><text x="41.7084%" y="431.50"></text></g><g><title>__GI__dl_find_object (4 samples, 0.01%)</title><rect x="41.4584%" y="405" width="0.0126%" height="15" fill="rgb(227,42,39)" fg:x="13190" fg:w="4"/><text x="41.7084%" y="415.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (9 samples, 0.03%)</title><rect x="41.4584%" y="469" width="0.0283%" height="15" fill="rgb(221,26,2)" fg:x="13190" fg:w="9"/><text x="41.7084%" y="479.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (9 samples, 0.03%)</title><rect x="41.4584%" y="453" width="0.0283%" height="15" fill="rgb(254,61,31)" fg:x="13190" fg:w="9"/><text x="41.7084%" y="463.50"></text></g><g><title>_Unwind_Backtrace (9 samples, 0.03%)</title><rect x="41.4584%" y="437" width="0.0283%" height="15" fill="rgb(222,173,38)" fg:x="13190" fg:w="9"/><text x="41.7084%" y="447.50"></text></g><g><title>backtrace::backtrace::libunwind::trace::trace_fn (5 samples, 0.02%)</title><rect x="41.4710%" y="421" width="0.0157%" height="15" fill="rgb(218,50,12)" fg:x="13194" fg:w="5"/><text x="41.7210%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (5 samples, 0.02%)</title><rect x="41.4710%" y="405" width="0.0157%" height="15" fill="rgb(223,88,40)" fg:x="13194" fg:w="5"/><text x="41.7210%" y="415.50"></text></g><g><title>dhat::new_backtrace_inner::{{closure}} (4 samples, 0.01%)</title><rect x="41.4741%" y="389" width="0.0126%" height="15" fill="rgb(237,54,19)" fg:x="13195" fg:w="4"/><text x="41.7241%" y="399.50"></text></g><g><title>dhat::new_backtrace_inner (11 samples, 0.03%)</title><rect x="41.4553%" y="501" width="0.0346%" height="15" fill="rgb(251,129,25)" fg:x="13189" fg:w="11"/><text x="41.7053%" y="511.50"></text></g><g><title>backtrace::backtrace::trace (11 samples, 0.03%)</title><rect x="41.4553%" y="485" width="0.0346%" height="15" fill="rgb(238,97,19)" fg:x="13189" fg:w="11"/><text x="41.7053%" y="495.50"></text></g><g><title>&lt;briolette_sim::SyncState as core::clone::Clone&gt;::clone (16 samples, 0.05%)</title><rect x="41.4490%" y="725" width="0.0503%" height="15" fill="rgb(240,169,18)" fg:x="13187" fg:w="16"/><text x="41.6990%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16 samples, 0.05%)</title><rect x="41.4490%" y="709" width="0.0503%" height="15" fill="rgb(230,187,49)" fg:x="13187" fg:w="16"/><text x="41.6990%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16 samples, 0.05%)</title><rect x="41.4490%" y="693" width="0.0503%" height="15" fill="rgb(209,44,26)" fg:x="13187" fg:w="16"/><text x="41.6990%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (16 samples, 0.05%)</title><rect x="41.4490%" y="677" width="0.0503%" height="15" fill="rgb(244,0,6)" fg:x="13187" fg:w="16"/><text x="41.6990%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16 samples, 0.05%)</title><rect x="41.4490%" y="661" width="0.0503%" height="15" fill="rgb(248,18,21)" fg:x="13187" fg:w="16"/><text x="41.6990%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (16 samples, 0.05%)</title><rect x="41.4490%" y="645" width="0.0503%" height="15" fill="rgb(245,180,19)" fg:x="13187" fg:w="16"/><text x="41.6990%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (16 samples, 0.05%)</title><rect x="41.4490%" y="629" width="0.0503%" height="15" fill="rgb(252,118,36)" fg:x="13187" fg:w="16"/><text x="41.6990%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (16 samples, 0.05%)</title><rect x="41.4490%" y="613" width="0.0503%" height="15" fill="rgb(210,224,19)" fg:x="13187" fg:w="16"/><text x="41.6990%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (16 samples, 0.05%)</title><rect x="41.4490%" y="597" width="0.0503%" height="15" fill="rgb(218,30,24)" fg:x="13187" fg:w="16"/><text x="41.6990%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.05%)</title><rect x="41.4490%" y="581" width="0.0503%" height="15" fill="rgb(219,75,50)" fg:x="13187" fg:w="16"/><text x="41.6990%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.05%)</title><rect x="41.4490%" y="565" width="0.0503%" height="15" fill="rgb(234,72,50)" fg:x="13187" fg:w="16"/><text x="41.6990%" y="575.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.05%)</title><rect x="41.4490%" y="549" width="0.0503%" height="15" fill="rgb(219,100,48)" fg:x="13187" fg:w="16"/><text x="41.6990%" y="559.50"></text></g><g><title>__rust_alloc (16 samples, 0.05%)</title><rect x="41.4490%" y="533" width="0.0503%" height="15" fill="rgb(253,5,41)" fg:x="13187" fg:w="16"/><text x="41.6990%" y="543.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (16 samples, 0.05%)</title><rect x="41.4490%" y="517" width="0.0503%" height="15" fill="rgb(247,181,11)" fg:x="13187" fg:w="16"/><text x="41.6990%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (33 samples, 0.10%)</title><rect x="41.4490%" y="789" width="0.1037%" height="15" fill="rgb(222,223,25)" fg:x="13187" fg:w="33"/><text x="41.6990%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (33 samples, 0.10%)</title><rect x="41.4490%" y="773" width="0.1037%" height="15" fill="rgb(214,198,28)" fg:x="13187" fg:w="33"/><text x="41.6990%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (33 samples, 0.10%)</title><rect x="41.4490%" y="757" width="0.1037%" height="15" fill="rgb(230,46,43)" fg:x="13187" fg:w="33"/><text x="41.6990%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (33 samples, 0.10%)</title><rect x="41.4490%" y="741" width="0.1037%" height="15" fill="rgb(233,65,53)" fg:x="13187" fg:w="33"/><text x="41.6990%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (17 samples, 0.05%)</title><rect x="41.4993%" y="725" width="0.0534%" height="15" fill="rgb(221,121,27)" fg:x="13203" fg:w="17"/><text x="41.7493%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (17 samples, 0.05%)</title><rect x="41.4993%" y="709" width="0.0534%" height="15" fill="rgb(247,70,47)" fg:x="13203" fg:w="17"/><text x="41.7493%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (17 samples, 0.05%)</title><rect x="41.4993%" y="693" width="0.0534%" height="15" fill="rgb(228,85,35)" fg:x="13203" fg:w="17"/><text x="41.7493%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (17 samples, 0.05%)</title><rect x="41.4993%" y="677" width="0.0534%" height="15" fill="rgb(209,50,18)" fg:x="13203" fg:w="17"/><text x="41.7493%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.05%)</title><rect x="41.4993%" y="661" width="0.0534%" height="15" fill="rgb(250,19,35)" fg:x="13203" fg:w="17"/><text x="41.7493%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.05%)</title><rect x="41.4993%" y="645" width="0.0534%" height="15" fill="rgb(253,107,29)" fg:x="13203" fg:w="17"/><text x="41.7493%" y="655.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.05%)</title><rect x="41.4993%" y="629" width="0.0534%" height="15" fill="rgb(252,179,29)" fg:x="13203" fg:w="17"/><text x="41.7493%" y="639.50"></text></g><g><title>__rust_alloc (17 samples, 0.05%)</title><rect x="41.4993%" y="613" width="0.0534%" height="15" fill="rgb(238,194,6)" fg:x="13203" fg:w="17"/><text x="41.7493%" y="623.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (17 samples, 0.05%)</title><rect x="41.4993%" y="597" width="0.0534%" height="15" fill="rgb(238,164,29)" fg:x="13203" fg:w="17"/><text x="41.7493%" y="607.50"></text></g><g><title>dhat::new_backtrace_inner (13 samples, 0.04%)</title><rect x="41.5119%" y="581" width="0.0409%" height="15" fill="rgb(224,25,9)" fg:x="13207" fg:w="13"/><text x="41.7619%" y="591.50"></text></g><g><title>backtrace::backtrace::trace (13 samples, 0.04%)</title><rect x="41.5119%" y="565" width="0.0409%" height="15" fill="rgb(244,153,23)" fg:x="13207" fg:w="13"/><text x="41.7619%" y="575.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (13 samples, 0.04%)</title><rect x="41.5119%" y="549" width="0.0409%" height="15" fill="rgb(212,203,14)" fg:x="13207" fg:w="13"/><text x="41.7619%" y="559.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (13 samples, 0.04%)</title><rect x="41.5119%" y="533" width="0.0409%" height="15" fill="rgb(220,164,20)" fg:x="13207" fg:w="13"/><text x="41.7619%" y="543.50"></text></g><g><title>_Unwind_Backtrace (13 samples, 0.04%)</title><rect x="41.5119%" y="517" width="0.0409%" height="15" fill="rgb(222,203,48)" fg:x="13207" fg:w="13"/><text x="41.7619%" y="527.50"></text></g><g><title>backtrace::backtrace::libunwind::trace::trace_fn (13 samples, 0.04%)</title><rect x="41.5119%" y="501" width="0.0409%" height="15" fill="rgb(215,159,22)" fg:x="13207" fg:w="13"/><text x="41.7619%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (13 samples, 0.04%)</title><rect x="41.5119%" y="485" width="0.0409%" height="15" fill="rgb(216,183,47)" fg:x="13207" fg:w="13"/><text x="41.7619%" y="495.50"></text></g><g><title>dhat::new_backtrace_inner::{{closure}} (13 samples, 0.04%)</title><rect x="41.5119%" y="469" width="0.0409%" height="15" fill="rgb(229,195,25)" fg:x="13207" fg:w="13"/><text x="41.7619%" y="479.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (8 samples, 0.03%)</title><rect x="41.5276%" y="453" width="0.0251%" height="15" fill="rgb(224,132,51)" fg:x="13212" fg:w="8"/><text x="41.7776%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (8 samples, 0.03%)</title><rect x="41.5276%" y="437" width="0.0251%" height="15" fill="rgb(240,63,7)" fg:x="13212" fg:w="8"/><text x="41.7776%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (8 samples, 0.03%)</title><rect x="41.5276%" y="421" width="0.0251%" height="15" fill="rgb(249,182,41)" fg:x="13212" fg:w="8"/><text x="41.7776%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (8 samples, 0.03%)</title><rect x="41.5276%" y="405" width="0.0251%" height="15" fill="rgb(243,47,26)" fg:x="13212" fg:w="8"/><text x="41.7776%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8 samples, 0.03%)</title><rect x="41.5276%" y="389" width="0.0251%" height="15" fill="rgb(233,48,2)" fg:x="13212" fg:w="8"/><text x="41.7776%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (8 samples, 0.03%)</title><rect x="41.5276%" y="373" width="0.0251%" height="15" fill="rgb(244,165,34)" fg:x="13212" fg:w="8"/><text x="41.7776%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.03%)</title><rect x="41.5276%" y="357" width="0.0251%" height="15" fill="rgb(207,89,7)" fg:x="13212" fg:w="8"/><text x="41.7776%" y="367.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (8 samples, 0.03%)</title><rect x="41.5276%" y="341" width="0.0251%" height="15" fill="rgb(244,117,36)" fg:x="13212" fg:w="8"/><text x="41.7776%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.08%)</title><rect x="41.6250%" y="469" width="0.0817%" height="15" fill="rgb(226,144,34)" fg:x="13243" fg:w="26"/><text x="41.8750%" y="479.50"></text></g><g><title>dhat::Globals::get_pp_info (36 samples, 0.11%)</title><rect x="41.5999%" y="565" width="0.1132%" height="15" fill="rgb(213,23,19)" fg:x="13235" fg:w="36"/><text x="41.8499%" y="575.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (28 samples, 0.09%)</title><rect x="41.6250%" y="549" width="0.0880%" height="15" fill="rgb(217,75,12)" fg:x="13243" fg:w="28"/><text x="41.8750%" y="559.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (28 samples, 0.09%)</title><rect x="41.6250%" y="533" width="0.0880%" height="15" fill="rgb(224,159,17)" fg:x="13243" fg:w="28"/><text x="41.8750%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;dhat::Backtrace&gt; (28 samples, 0.09%)</title><rect x="41.6250%" y="517" width="0.0880%" height="15" fill="rgb(217,118,1)" fg:x="13243" fg:w="28"/><text x="41.8750%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;backtrace::capture::Backtrace&gt; (28 samples, 0.09%)</title><rect x="41.6250%" y="501" width="0.0880%" height="15" fill="rgb(232,180,48)" fg:x="13243" fg:w="28"/><text x="41.8750%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;backtrace::capture::BacktraceFrame&gt;&gt; (28 samples, 0.09%)</title><rect x="41.6250%" y="485" width="0.0880%" height="15" fill="rgb(230,27,33)" fg:x="13243" fg:w="28"/><text x="41.8750%" y="495.50"></text></g><g><title>dhat::Globals::update_counts_for_alloc (7 samples, 0.02%)</title><rect x="41.7130%" y="565" width="0.0220%" height="15" fill="rgb(205,31,21)" fg:x="13271" fg:w="7"/><text x="41.9630%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (7 samples, 0.02%)</title><rect x="41.7130%" y="549" width="0.0220%" height="15" fill="rgb(253,59,4)" fg:x="13271" fg:w="7"/><text x="41.9630%" y="559.50"></text></g><g><title>_Unwind_Find_FDE (35 samples, 0.11%)</title><rect x="41.7476%" y="485" width="0.1100%" height="15" fill="rgb(224,201,9)" fg:x="13282" fg:w="35"/><text x="41.9976%" y="495.50"></text></g><g><title>Unknown (35 samples, 0.11%)</title><rect x="41.7476%" y="469" width="0.1100%" height="15" fill="rgb(229,206,30)" fg:x="13282" fg:w="35"/><text x="41.9976%" y="479.50"></text></g><g><title>&lt;backtrace::backtrace::Frame as core::clone::Clone&gt;::clone (40 samples, 0.13%)</title><rect x="41.9613%" y="437" width="0.1257%" height="15" fill="rgb(212,67,47)" fg:x="13350" fg:w="40"/><text x="42.2113%" y="447.50"></text></g><g><title>&lt;backtrace::backtrace::libunwind::Frame as core::clone::Clone&gt;::clone (40 samples, 0.13%)</title><rect x="41.9613%" y="421" width="0.1257%" height="15" fill="rgb(211,96,50)" fg:x="13350" fg:w="40"/><text x="42.2113%" y="431.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::symbol_address (40 samples, 0.13%)</title><rect x="41.9613%" y="405" width="0.1257%" height="15" fill="rgb(252,114,18)" fg:x="13350" fg:w="40"/><text x="42.2113%" y="415.50"></text></g><g><title>_Unwind_FindEnclosingFunction (40 samples, 0.13%)</title><rect x="41.9613%" y="389" width="0.1257%" height="15" fill="rgb(223,58,37)" fg:x="13350" fg:w="40"/><text x="42.2113%" y="399.50"></text></g><g><title>_Unwind_Find_FDE (40 samples, 0.13%)</title><rect x="41.9613%" y="373" width="0.1257%" height="15" fill="rgb(237,70,4)" fg:x="13350" fg:w="40"/><text x="42.2113%" y="383.50"></text></g><g><title>Unknown (40 samples, 0.13%)</title><rect x="41.9613%" y="357" width="0.1257%" height="15" fill="rgb(244,85,46)" fg:x="13350" fg:w="40"/><text x="42.2113%" y="367.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::realloc (8 samples, 0.03%)</title><rect x="42.1122%" y="309" width="0.0251%" height="15" fill="rgb(223,39,52)" fg:x="13398" fg:w="8"/><text x="42.3622%" y="319.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (8 samples, 0.03%)</title><rect x="42.1122%" y="293" width="0.0251%" height="15" fill="rgb(218,200,14)" fg:x="13398" fg:w="8"/><text x="42.3622%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (11 samples, 0.03%)</title><rect x="42.1122%" y="357" width="0.0346%" height="15" fill="rgb(208,171,16)" fg:x="13398" fg:w="11"/><text x="42.3622%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (11 samples, 0.03%)</title><rect x="42.1122%" y="341" width="0.0346%" height="15" fill="rgb(234,200,18)" fg:x="13398" fg:w="11"/><text x="42.3622%" y="351.50"></text></g><g><title>alloc::alloc::realloc (11 samples, 0.03%)</title><rect x="42.1122%" y="325" width="0.0346%" height="15" fill="rgb(228,45,11)" fg:x="13398" fg:w="11"/><text x="42.3622%" y="335.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (146 samples, 0.46%)</title><rect x="41.7350%" y="533" width="0.4589%" height="15" fill="rgb(237,182,11)" fg:x="13278" fg:w="146"/><text x="41.9850%" y="543.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (146 samples, 0.46%)</title><rect x="41.7350%" y="517" width="0.4589%" height="15" fill="rgb(241,175,49)" fg:x="13278" fg:w="146"/><text x="41.9850%" y="527.50"></text></g><g><title>_Unwind_Backtrace (146 samples, 0.46%)</title><rect x="41.7350%" y="501" width="0.4589%" height="15" fill="rgb(247,38,35)" fg:x="13278" fg:w="146"/><text x="41.9850%" y="511.50"></text></g><g><title>backtrace::backtrace::libunwind::trace::trace_fn (107 samples, 0.34%)</title><rect x="41.8576%" y="485" width="0.3363%" height="15" fill="rgb(228,39,49)" fg:x="13317" fg:w="107"/><text x="42.1076%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (107 samples, 0.34%)</title><rect x="41.8576%" y="469" width="0.3363%" height="15" fill="rgb(226,101,26)" fg:x="13317" fg:w="107"/><text x="42.1076%" y="479.50"></text></g><g><title>dhat::new_backtrace_inner::{{closure}} (74 samples, 0.23%)</title><rect x="41.9613%" y="453" width="0.2326%" height="15" fill="rgb(206,141,19)" fg:x="13350" fg:w="74"/><text x="42.2113%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (34 samples, 0.11%)</title><rect x="42.0871%" y="437" width="0.1069%" height="15" fill="rgb(211,200,13)" fg:x="13390" fg:w="34"/><text x="42.3371%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (34 samples, 0.11%)</title><rect x="42.0871%" y="421" width="0.1069%" height="15" fill="rgb(241,121,6)" fg:x="13390" fg:w="34"/><text x="42.3371%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (34 samples, 0.11%)</title><rect x="42.0871%" y="405" width="0.1069%" height="15" fill="rgb(234,221,29)" fg:x="13390" fg:w="34"/><text x="42.3371%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (34 samples, 0.11%)</title><rect x="42.0871%" y="389" width="0.1069%" height="15" fill="rgb(229,136,5)" fg:x="13390" fg:w="34"/><text x="42.3371%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (29 samples, 0.09%)</title><rect x="42.1028%" y="373" width="0.0912%" height="15" fill="rgb(238,36,11)" fg:x="13395" fg:w="29"/><text x="42.3528%" y="383.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (15 samples, 0.05%)</title><rect x="42.1468%" y="357" width="0.0471%" height="15" fill="rgb(251,55,41)" fg:x="13409" fg:w="15"/><text x="42.3968%" y="367.50"></text></g><g><title>dhat::IgnoreAllocs::new (15 samples, 0.05%)</title><rect x="42.1468%" y="341" width="0.0471%" height="15" fill="rgb(242,34,40)" fg:x="13409" fg:w="15"/><text x="42.3968%" y="351.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (15 samples, 0.05%)</title><rect x="42.1468%" y="325" width="0.0471%" height="15" fill="rgb(215,42,17)" fg:x="13409" fg:w="15"/><text x="42.3968%" y="335.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (15 samples, 0.05%)</title><rect x="42.1468%" y="309" width="0.0471%" height="15" fill="rgb(207,44,46)" fg:x="13409" fg:w="15"/><text x="42.3968%" y="319.50"></text></g><g><title>core::ops::function::FnOnce::call_once (15 samples, 0.05%)</title><rect x="42.1468%" y="293" width="0.0471%" height="15" fill="rgb(211,206,28)" fg:x="13409" fg:w="15"/><text x="42.3968%" y="303.50"></text></g><g><title>dhat::IGNORE_ALLOCS::{{constant}}::{{closure}} (15 samples, 0.05%)</title><rect x="42.1468%" y="277" width="0.0471%" height="15" fill="rgb(237,167,16)" fg:x="13409" fg:w="15"/><text x="42.3968%" y="287.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (15 samples, 0.05%)</title><rect x="42.1468%" y="261" width="0.0471%" height="15" fill="rgb(233,66,6)" fg:x="13409" fg:w="15"/><text x="42.3968%" y="271.50"></text></g><g><title>dhat::new_backtrace_inner (155 samples, 0.49%)</title><rect x="41.7350%" y="565" width="0.4872%" height="15" fill="rgb(246,123,29)" fg:x="13278" fg:w="155"/><text x="41.9850%" y="575.50"></text></g><g><title>backtrace::backtrace::trace (155 samples, 0.49%)</title><rect x="41.7350%" y="549" width="0.4872%" height="15" fill="rgb(209,62,40)" fg:x="13278" fg:w="155"/><text x="41.9850%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;backtrace::lock::LockGuard&gt; (9 samples, 0.03%)</title><rect x="42.1939%" y="533" width="0.0283%" height="15" fill="rgb(218,4,25)" fg:x="13424" fg:w="9"/><text x="42.4439%" y="543.50"></text></g><g><title>&lt;backtrace::lock::LockGuard as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="42.2065%" y="517" width="0.0157%" height="15" fill="rgb(253,91,49)" fg:x="13428" fg:w="5"/><text x="42.4565%" y="527.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (7 samples, 0.02%)</title><rect x="42.2222%" y="565" width="0.0220%" height="15" fill="rgb(228,155,29)" fg:x="13433" fg:w="7"/><text x="42.4722%" y="575.50"></text></g><g><title>&lt;briolette_sim::Coin as core::clone::Clone&gt;::clone (228 samples, 0.72%)</title><rect x="41.5527%" y="789" width="0.7166%" height="15" fill="rgb(243,57,37)" fg:x="13220" fg:w="228"/><text x="41.8027%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (228 samples, 0.72%)</title><rect x="41.5527%" y="773" width="0.7166%" height="15" fill="rgb(244,167,17)" fg:x="13220" fg:w="228"/><text x="41.8027%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (228 samples, 0.72%)</title><rect x="41.5527%" y="757" width="0.7166%" height="15" fill="rgb(207,181,38)" fg:x="13220" fg:w="228"/><text x="41.8027%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (228 samples, 0.72%)</title><rect x="41.5527%" y="741" width="0.7166%" height="15" fill="rgb(211,8,23)" fg:x="13220" fg:w="228"/><text x="41.8027%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (228 samples, 0.72%)</title><rect x="41.5527%" y="725" width="0.7166%" height="15" fill="rgb(235,11,44)" fg:x="13220" fg:w="228"/><text x="41.8027%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (228 samples, 0.72%)</title><rect x="41.5527%" y="709" width="0.7166%" height="15" fill="rgb(248,18,52)" fg:x="13220" fg:w="228"/><text x="41.8027%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (228 samples, 0.72%)</title><rect x="41.5527%" y="693" width="0.7166%" height="15" fill="rgb(208,4,7)" fg:x="13220" fg:w="228"/><text x="41.8027%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (228 samples, 0.72%)</title><rect x="41.5527%" y="677" width="0.7166%" height="15" fill="rgb(240,17,39)" fg:x="13220" fg:w="228"/><text x="41.8027%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (228 samples, 0.72%)</title><rect x="41.5527%" y="661" width="0.7166%" height="15" fill="rgb(207,170,3)" fg:x="13220" fg:w="228"/><text x="41.8027%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (228 samples, 0.72%)</title><rect x="41.5527%" y="645" width="0.7166%" height="15" fill="rgb(236,100,52)" fg:x="13220" fg:w="228"/><text x="41.8027%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (228 samples, 0.72%)</title><rect x="41.5527%" y="629" width="0.7166%" height="15" fill="rgb(246,78,51)" fg:x="13220" fg:w="228"/><text x="41.8027%" y="639.50"></text></g><g><title>alloc::alloc::alloc (228 samples, 0.72%)</title><rect x="41.5527%" y="613" width="0.7166%" height="15" fill="rgb(211,17,15)" fg:x="13220" fg:w="228"/><text x="41.8027%" y="623.50"></text></g><g><title>__rust_alloc (228 samples, 0.72%)</title><rect x="41.5527%" y="597" width="0.7166%" height="15" fill="rgb(209,59,46)" fg:x="13220" fg:w="228"/><text x="41.8027%" y="607.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (221 samples, 0.69%)</title><rect x="41.5747%" y="581" width="0.6946%" height="15" fill="rgb(210,92,25)" fg:x="13227" fg:w="221"/><text x="41.8247%" y="591.50"></text></g><g><title>std::time::Instant::now (8 samples, 0.03%)</title><rect x="42.2442%" y="565" width="0.0251%" height="15" fill="rgb(238,174,52)" fg:x="13440" fg:w="8"/><text x="42.4942%" y="575.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (8 samples, 0.03%)</title><rect x="42.2442%" y="549" width="0.0251%" height="15" fill="rgb(230,73,7)" fg:x="13440" fg:w="8"/><text x="42.4942%" y="559.50"></text></g><g><title>&lt;briolette_sim::Statistics as core::default::Default&gt;::default (509 samples, 1.60%)</title><rect x="42.2694%" y="789" width="1.5999%" height="15" fill="rgb(243,124,40)" fg:x="13448" fg:w="509"/><text x="42.5194%" y="799.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (277 samples, 0.87%)</title><rect x="43.9227%" y="501" width="0.8707%" height="15" fill="rgb(244,170,11)" fg:x="13974" fg:w="277"/><text x="44.1727%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (277 samples, 0.87%)</title><rect x="43.9227%" y="485" width="0.8707%" height="15" fill="rgb(207,114,54)" fg:x="13974" fg:w="277"/><text x="44.1727%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (277 samples, 0.87%)</title><rect x="43.9227%" y="469" width="0.8707%" height="15" fill="rgb(205,42,20)" fg:x="13974" fg:w="277"/><text x="44.1727%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (277 samples, 0.87%)</title><rect x="43.9227%" y="453" width="0.8707%" height="15" fill="rgb(230,30,28)" fg:x="13974" fg:w="277"/><text x="44.1727%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (277 samples, 0.87%)</title><rect x="43.9227%" y="437" width="0.8707%" height="15" fill="rgb(205,73,54)" fg:x="13974" fg:w="277"/><text x="44.1727%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (277 samples, 0.87%)</title><rect x="43.9227%" y="421" width="0.8707%" height="15" fill="rgb(254,227,23)" fg:x="13974" fg:w="277"/><text x="44.1727%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (277 samples, 0.87%)</title><rect x="43.9227%" y="405" width="0.8707%" height="15" fill="rgb(228,202,34)" fg:x="13974" fg:w="277"/><text x="44.1727%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (277 samples, 0.87%)</title><rect x="43.9227%" y="389" width="0.8707%" height="15" fill="rgb(222,225,37)" fg:x="13974" fg:w="277"/><text x="44.1727%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (277 samples, 0.87%)</title><rect x="43.9227%" y="373" width="0.8707%" height="15" fill="rgb(221,14,54)" fg:x="13974" fg:w="277"/><text x="44.1727%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;briolette_sim::TransactData&gt; (301 samples, 0.95%)</title><rect x="43.8692%" y="725" width="0.9461%" height="15" fill="rgb(254,102,2)" fg:x="13957" fg:w="301"/><text x="44.1192%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;briolette_sim::TransactionCoin&gt;&gt; (301 samples, 0.95%)</title><rect x="43.8692%" y="709" width="0.9461%" height="15" fill="rgb(232,104,17)" fg:x="13957" fg:w="301"/><text x="44.1192%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (301 samples, 0.95%)</title><rect x="43.8692%" y="693" width="0.9461%" height="15" fill="rgb(250,220,14)" fg:x="13957" fg:w="301"/><text x="44.1192%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;[briolette_sim::TransactionCoin]&gt; (301 samples, 0.95%)</title><rect x="43.8692%" y="677" width="0.9461%" height="15" fill="rgb(241,158,9)" fg:x="13957" fg:w="301"/><text x="44.1192%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;briolette_sim::TransactionCoin&gt; (301 samples, 0.95%)</title><rect x="43.8692%" y="661" width="0.9461%" height="15" fill="rgb(246,9,43)" fg:x="13957" fg:w="301"/><text x="44.1192%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;briolette_sim::Coin&gt; (301 samples, 0.95%)</title><rect x="43.8692%" y="645" width="0.9461%" height="15" fill="rgb(206,73,33)" fg:x="13957" fg:w="301"/><text x="44.1192%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (301 samples, 0.95%)</title><rect x="43.8692%" y="629" width="0.9461%" height="15" fill="rgb(222,79,8)" fg:x="13957" fg:w="301"/><text x="44.1192%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (301 samples, 0.95%)</title><rect x="43.8692%" y="613" width="0.9461%" height="15" fill="rgb(234,8,54)" fg:x="13957" fg:w="301"/><text x="44.1192%" y="623.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (301 samples, 0.95%)</title><rect x="43.8692%" y="597" width="0.9461%" height="15" fill="rgb(209,134,38)" fg:x="13957" fg:w="301"/><text x="44.1192%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (301 samples, 0.95%)</title><rect x="43.8692%" y="581" width="0.9461%" height="15" fill="rgb(230,127,29)" fg:x="13957" fg:w="301"/><text x="44.1192%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (301 samples, 0.95%)</title><rect x="43.8692%" y="565" width="0.9461%" height="15" fill="rgb(242,44,41)" fg:x="13957" fg:w="301"/><text x="44.1192%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (301 samples, 0.95%)</title><rect x="43.8692%" y="549" width="0.9461%" height="15" fill="rgb(222,56,43)" fg:x="13957" fg:w="301"/><text x="44.1192%" y="559.50"></text></g><g><title>__rust_dealloc (301 samples, 0.95%)</title><rect x="43.8692%" y="533" width="0.9461%" height="15" fill="rgb(238,39,47)" fg:x="13957" fg:w="301"/><text x="44.1192%" y="543.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::dealloc (295 samples, 0.93%)</title><rect x="43.8881%" y="517" width="0.9272%" height="15" fill="rgb(226,79,43)" fg:x="13963" fg:w="295"/><text x="44.1381%" y="527.50"></text></g><g><title>std::time::Instant::elapsed (7 samples, 0.02%)</title><rect x="44.7933%" y="501" width="0.0220%" height="15" fill="rgb(242,105,53)" fg:x="14251" fg:w="7"/><text x="45.0433%" y="511.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (7 samples, 0.02%)</title><rect x="44.7933%" y="485" width="0.0220%" height="15" fill="rgb(251,132,46)" fg:x="14251" fg:w="7"/><text x="45.0433%" y="495.50"></text></g><g><title>std::time::Instant::duration_since (7 samples, 0.02%)</title><rect x="44.7933%" y="469" width="0.0220%" height="15" fill="rgb(231,77,14)" fg:x="14251" fg:w="7"/><text x="45.0433%" y="479.50"></text></g><g><title>std::time::Instant::checked_duration_since (7 samples, 0.02%)</title><rect x="44.7933%" y="453" width="0.0220%" height="15" fill="rgb(240,135,9)" fg:x="14251" fg:w="7"/><text x="45.0433%" y="463.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (7 samples, 0.02%)</title><rect x="44.7933%" y="437" width="0.0220%" height="15" fill="rgb(248,109,14)" fg:x="14251" fg:w="7"/><text x="45.0433%" y="447.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (7 samples, 0.02%)</title><rect x="44.7933%" y="421" width="0.0220%" height="15" fill="rgb(227,146,52)" fg:x="14251" fg:w="7"/><text x="45.0433%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (305 samples, 0.96%)</title><rect x="43.8692%" y="789" width="0.9587%" height="15" fill="rgb(232,54,3)" fg:x="13957" fg:w="305"/><text x="44.1192%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;[absim::Event&lt;briolette_sim::EventData&gt;]&gt; (305 samples, 0.96%)</title><rect x="43.8692%" y="773" width="0.9587%" height="15" fill="rgb(229,201,43)" fg:x="13957" fg:w="305"/><text x="44.1192%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;absim::Event&lt;briolette_sim::EventData&gt;&gt; (305 samples, 0.96%)</title><rect x="43.8692%" y="757" width="0.9587%" height="15" fill="rgb(252,161,33)" fg:x="13957" fg:w="305"/><text x="44.1192%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;briolette_sim::EventData&gt; (305 samples, 0.96%)</title><rect x="43.8692%" y="741" width="0.9587%" height="15" fill="rgb(226,146,40)" fg:x="13957" fg:w="305"/><text x="44.1192%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;briolette_sim::ValidateData&gt; (4 samples, 0.01%)</title><rect x="44.8153%" y="725" width="0.0126%" height="15" fill="rgb(219,47,25)" fg:x="14258" fg:w="4"/><text x="45.0653%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;briolette_sim::Coin&gt;&gt; (4 samples, 0.01%)</title><rect x="44.8153%" y="709" width="0.0126%" height="15" fill="rgb(250,135,13)" fg:x="14258" fg:w="4"/><text x="45.0653%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="44.8153%" y="693" width="0.0126%" height="15" fill="rgb(219,229,18)" fg:x="14258" fg:w="4"/><text x="45.0653%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;[briolette_sim::Coin]&gt; (4 samples, 0.01%)</title><rect x="44.8153%" y="677" width="0.0126%" height="15" fill="rgb(217,152,27)" fg:x="14258" fg:w="4"/><text x="45.0653%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;briolette_sim::Coin&gt; (4 samples, 0.01%)</title><rect x="44.8153%" y="661" width="0.0126%" height="15" fill="rgb(225,71,47)" fg:x="14258" fg:w="4"/><text x="45.0653%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (4 samples, 0.01%)</title><rect x="44.8153%" y="645" width="0.0126%" height="15" fill="rgb(220,139,14)" fg:x="14258" fg:w="4"/><text x="45.0653%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (4 samples, 0.01%)</title><rect x="44.8153%" y="629" width="0.0126%" height="15" fill="rgb(247,54,32)" fg:x="14258" fg:w="4"/><text x="45.0653%" y="639.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="44.8153%" y="613" width="0.0126%" height="15" fill="rgb(252,131,39)" fg:x="14258" fg:w="4"/><text x="45.0653%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (4 samples, 0.01%)</title><rect x="44.8153%" y="597" width="0.0126%" height="15" fill="rgb(210,108,39)" fg:x="14258" fg:w="4"/><text x="45.0653%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.01%)</title><rect x="44.8153%" y="581" width="0.0126%" height="15" fill="rgb(205,23,29)" fg:x="14258" fg:w="4"/><text x="45.0653%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.01%)</title><rect x="44.8153%" y="565" width="0.0126%" height="15" fill="rgb(246,139,46)" fg:x="14258" fg:w="4"/><text x="45.0653%" y="575.50"></text></g><g><title>__rust_dealloc (4 samples, 0.01%)</title><rect x="44.8153%" y="549" width="0.0126%" height="15" fill="rgb(250,81,26)" fg:x="14258" fg:w="4"/><text x="45.0653%" y="559.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::dealloc (4 samples, 0.01%)</title><rect x="44.8153%" y="533" width="0.0126%" height="15" fill="rgb(214,104,7)" fg:x="14258" fg:w="4"/><text x="45.0653%" y="543.50"></text></g><g><title>std::time::Instant::elapsed (4 samples, 0.01%)</title><rect x="44.8153%" y="517" width="0.0126%" height="15" fill="rgb(233,189,8)" fg:x="14258" fg:w="4"/><text x="45.0653%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 0.02%)</title><rect x="44.8279%" y="709" width="0.0189%" height="15" fill="rgb(228,141,17)" fg:x="14262" fg:w="6"/><text x="45.0779%" y="719.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 0.02%)</title><rect x="44.8279%" y="693" width="0.0189%" height="15" fill="rgb(247,157,1)" fg:x="14262" fg:w="6"/><text x="45.0779%" y="703.50"></text></g><g><title>alloc::alloc::realloc (6 samples, 0.02%)</title><rect x="44.8279%" y="677" width="0.0189%" height="15" fill="rgb(249,225,5)" fg:x="14262" fg:w="6"/><text x="45.0779%" y="687.50"></text></g><g><title>__rust_realloc (6 samples, 0.02%)</title><rect x="44.8279%" y="661" width="0.0189%" height="15" fill="rgb(242,55,13)" fg:x="14262" fg:w="6"/><text x="45.0779%" y="671.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::realloc (6 samples, 0.02%)</title><rect x="44.8279%" y="645" width="0.0189%" height="15" fill="rgb(230,49,50)" fg:x="14262" fg:w="6"/><text x="45.0779%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (10 samples, 0.03%)</title><rect x="44.8279%" y="789" width="0.0314%" height="15" fill="rgb(241,111,38)" fg:x="14262" fg:w="10"/><text x="45.0779%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (10 samples, 0.03%)</title><rect x="44.8279%" y="773" width="0.0314%" height="15" fill="rgb(252,155,4)" fg:x="14262" fg:w="10"/><text x="45.0779%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (10 samples, 0.03%)</title><rect x="44.8279%" y="757" width="0.0314%" height="15" fill="rgb(212,69,32)" fg:x="14262" fg:w="10"/><text x="45.0779%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (10 samples, 0.03%)</title><rect x="44.8279%" y="741" width="0.0314%" height="15" fill="rgb(243,107,47)" fg:x="14262" fg:w="10"/><text x="45.0779%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.03%)</title><rect x="44.8279%" y="725" width="0.0314%" height="15" fill="rgb(247,130,12)" fg:x="14262" fg:w="10"/><text x="45.0779%" y="735.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (4 samples, 0.01%)</title><rect x="44.8468%" y="709" width="0.0126%" height="15" fill="rgb(233,74,16)" fg:x="14268" fg:w="4"/><text x="45.0968%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;dhat::Backtrace&gt; (17 samples, 0.05%)</title><rect x="44.8593%" y="501" width="0.0534%" height="15" fill="rgb(208,58,18)" fg:x="14272" fg:w="17"/><text x="45.1093%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;backtrace::capture::Backtrace&gt; (17 samples, 0.05%)</title><rect x="44.8593%" y="485" width="0.0534%" height="15" fill="rgb(242,225,1)" fg:x="14272" fg:w="17"/><text x="45.1093%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;backtrace::capture::BacktraceFrame&gt;&gt; (17 samples, 0.05%)</title><rect x="44.8593%" y="469" width="0.0534%" height="15" fill="rgb(249,39,40)" fg:x="14272" fg:w="17"/><text x="45.1093%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;backtrace::capture::BacktraceFrame&gt;&gt; (17 samples, 0.05%)</title><rect x="44.8593%" y="453" width="0.0534%" height="15" fill="rgb(207,72,44)" fg:x="14272" fg:w="17"/><text x="45.1093%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.05%)</title><rect x="44.8593%" y="437" width="0.0534%" height="15" fill="rgb(215,193,12)" fg:x="14272" fg:w="17"/><text x="45.1093%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (17 samples, 0.05%)</title><rect x="44.8593%" y="421" width="0.0534%" height="15" fill="rgb(248,41,39)" fg:x="14272" fg:w="17"/><text x="45.1093%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.05%)</title><rect x="44.8593%" y="405" width="0.0534%" height="15" fill="rgb(253,85,4)" fg:x="14272" fg:w="17"/><text x="45.1093%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (17 samples, 0.05%)</title><rect x="44.8593%" y="389" width="0.0534%" height="15" fill="rgb(243,70,31)" fg:x="14272" fg:w="17"/><text x="45.1093%" y="399.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::dealloc (17 samples, 0.05%)</title><rect x="44.8593%" y="373" width="0.0534%" height="15" fill="rgb(253,195,26)" fg:x="14272" fg:w="17"/><text x="45.1093%" y="383.50"></text></g><g><title>dhat::IgnoreAllocs::new (17 samples, 0.05%)</title><rect x="44.8593%" y="357" width="0.0534%" height="15" fill="rgb(243,42,11)" fg:x="14272" fg:w="17"/><text x="45.1093%" y="367.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (17 samples, 0.05%)</title><rect x="44.8593%" y="341" width="0.0534%" height="15" fill="rgb(239,66,17)" fg:x="14272" fg:w="17"/><text x="45.1093%" y="351.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (17 samples, 0.05%)</title><rect x="44.8593%" y="325" width="0.0534%" height="15" fill="rgb(217,132,21)" fg:x="14272" fg:w="17"/><text x="45.1093%" y="335.50"></text></g><g><title>core::ops::function::FnOnce::call_once (17 samples, 0.05%)</title><rect x="44.8593%" y="309" width="0.0534%" height="15" fill="rgb(252,202,21)" fg:x="14272" fg:w="17"/><text x="45.1093%" y="319.50"></text></g><g><title>dhat::IGNORE_ALLOCS::{{constant}}::{{closure}} (17 samples, 0.05%)</title><rect x="44.8593%" y="293" width="0.0534%" height="15" fill="rgb(233,98,36)" fg:x="14272" fg:w="17"/><text x="45.1093%" y="303.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (17 samples, 0.05%)</title><rect x="44.8593%" y="277" width="0.0534%" height="15" fill="rgb(216,153,54)" fg:x="14272" fg:w="17"/><text x="45.1093%" y="287.50"></text></g><g><title>dhat::Globals::get_pp_info (204 samples, 0.64%)</title><rect x="44.8593%" y="549" width="0.6412%" height="15" fill="rgb(250,99,7)" fg:x="14272" fg:w="204"/><text x="45.1093%" y="559.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (204 samples, 0.64%)</title><rect x="44.8593%" y="533" width="0.6412%" height="15" fill="rgb(207,56,50)" fg:x="14272" fg:w="204"/><text x="45.1093%" y="543.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (204 samples, 0.64%)</title><rect x="44.8593%" y="517" width="0.6412%" height="15" fill="rgb(244,61,34)" fg:x="14272" fg:w="204"/><text x="45.1093%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (187 samples, 0.59%)</title><rect x="44.9128%" y="501" width="0.5878%" height="15" fill="rgb(241,50,38)" fg:x="14289" fg:w="187"/><text x="45.1628%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (187 samples, 0.59%)</title><rect x="44.9128%" y="485" width="0.5878%" height="15" fill="rgb(212,166,30)" fg:x="14289" fg:w="187"/><text x="45.1628%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (187 samples, 0.59%)</title><rect x="44.9128%" y="469" width="0.5878%" height="15" fill="rgb(249,127,32)" fg:x="14289" fg:w="187"/><text x="45.1628%" y="479.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (187 samples, 0.59%)</title><rect x="44.9128%" y="453" width="0.5878%" height="15" fill="rgb(209,103,0)" fg:x="14289" fg:w="187"/><text x="45.1628%" y="463.50"></text></g><g><title>&lt;dhat::Backtrace as core::cmp::PartialEq&gt;::eq (187 samples, 0.59%)</title><rect x="44.9128%" y="437" width="0.5878%" height="15" fill="rgb(238,209,51)" fg:x="14289" fg:w="187"/><text x="45.1628%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (187 samples, 0.59%)</title><rect x="44.9128%" y="421" width="0.5878%" height="15" fill="rgb(237,56,23)" fg:x="14289" fg:w="187"/><text x="45.1628%" y="431.50"></text></g><g><title>&lt;dhat::Backtrace as core::cmp::PartialEq&gt;::eq::{{closure}} (187 samples, 0.59%)</title><rect x="44.9128%" y="405" width="0.5878%" height="15" fill="rgb(215,153,46)" fg:x="14289" fg:w="187"/><text x="45.1628%" y="415.50"></text></g><g><title>backtrace::capture::BacktraceFrame::ip (44 samples, 0.14%)</title><rect x="45.3623%" y="389" width="0.1383%" height="15" fill="rgb(224,49,31)" fg:x="14432" fg:w="44"/><text x="45.6123%" y="399.50"></text></g><g><title>backtrace::capture::Frame::ip (44 samples, 0.14%)</title><rect x="45.3623%" y="373" width="0.1383%" height="15" fill="rgb(250,18,42)" fg:x="14432" fg:w="44"/><text x="45.6123%" y="383.50"></text></g><g><title>backtrace::backtrace::Frame::ip (44 samples, 0.14%)</title><rect x="45.3623%" y="357" width="0.1383%" height="15" fill="rgb(215,176,39)" fg:x="14432" fg:w="44"/><text x="45.6123%" y="367.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::ip (44 samples, 0.14%)</title><rect x="45.3623%" y="341" width="0.1383%" height="15" fill="rgb(223,77,29)" fg:x="14432" fg:w="44"/><text x="45.6123%" y="351.50"></text></g><g><title>dhat::Globals::record_block (515 samples, 1.62%)</title><rect x="45.5006%" y="549" width="1.6187%" height="15" fill="rgb(234,94,52)" fg:x="14476" fg:w="515"/><text x="45.7506%" y="559.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (515 samples, 1.62%)</title><rect x="45.5006%" y="533" width="1.6187%" height="15" fill="rgb(220,154,50)" fg:x="14476" fg:w="515"/><text x="45.7506%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (515 samples, 1.62%)</title><rect x="45.5006%" y="517" width="1.6187%" height="15" fill="rgb(212,11,10)" fg:x="14476" fg:w="515"/><text x="45.7506%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (515 samples, 1.62%)</title><rect x="45.5006%" y="501" width="1.6187%" height="15" fill="rgb(205,166,19)" fg:x="14476" fg:w="515"/><text x="45.7506%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (515 samples, 1.62%)</title><rect x="45.5006%" y="485" width="1.6187%" height="15" fill="rgb(244,198,16)" fg:x="14476" fg:w="515"/><text x="45.7506%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (515 samples, 1.62%)</title><rect x="45.5006%" y="469" width="1.6187%" height="15" fill="rgb(219,69,12)" fg:x="14476" fg:w="515"/><text x="45.7506%" y="479.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (515 samples, 1.62%)</title><rect x="45.5006%" y="453" width="1.6187%" height="15" fill="rgb(245,30,7)" fg:x="14476" fg:w="515"/><text x="45.7506%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (515 samples, 1.62%)</title><rect x="45.5006%" y="437" width="1.6187%" height="15" fill="rgb(218,221,48)" fg:x="14476" fg:w="515"/><text x="45.7506%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (515 samples, 1.62%)</title><rect x="45.5006%" y="421" width="1.6187%" height="15" fill="rgb(216,66,15)" fg:x="14476" fg:w="515"/><text x="45.7506%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (90 samples, 0.28%)</title><rect x="47.1287%" y="533" width="0.2829%" height="15" fill="rgb(226,122,50)" fg:x="14994" fg:w="90"/><text x="47.3787%" y="543.50"></text></g><g><title>Unknown (9 samples, 0.03%)</title><rect x="47.5750%" y="453" width="0.0283%" height="15" fill="rgb(239,156,16)" fg:x="15136" fg:w="9"/><text x="47.8250%" y="463.50"></text></g><g><title>_Unwind_Find_FDE (139 samples, 0.44%)</title><rect x="47.5750%" y="469" width="0.4369%" height="15" fill="rgb(224,27,38)" fg:x="15136" fg:w="139"/><text x="47.8250%" y="479.50"></text></g><g><title>__GI__dl_find_object (130 samples, 0.41%)</title><rect x="47.6033%" y="453" width="0.4086%" height="15" fill="rgb(224,39,27)" fg:x="15145" fg:w="130"/><text x="47.8533%" y="463.50"></text></g><g><title>_dlfo_lookup (26 samples, 0.08%)</title><rect x="47.9302%" y="437" width="0.0817%" height="15" fill="rgb(215,92,29)" fg:x="15249" fg:w="26"/><text x="48.1802%" y="447.50"></text></g><g><title>_Unwind_FindEnclosingFunction (61 samples, 0.19%)</title><rect x="48.2477%" y="373" width="0.1917%" height="15" fill="rgb(207,159,16)" fg:x="15350" fg:w="61"/><text x="48.4977%" y="383.50"></text></g><g><title>_Unwind_Find_FDE (61 samples, 0.19%)</title><rect x="48.2477%" y="357" width="0.1917%" height="15" fill="rgb(238,163,47)" fg:x="15350" fg:w="61"/><text x="48.4977%" y="367.50"></text></g><g><title>__GI__dl_find_object (61 samples, 0.19%)</title><rect x="48.2477%" y="341" width="0.1917%" height="15" fill="rgb(219,91,49)" fg:x="15350" fg:w="61"/><text x="48.4977%" y="351.50"></text></g><g><title>&lt;backtrace::backtrace::Frame as core::clone::Clone&gt;::clone (163 samples, 0.51%)</title><rect x="48.2477%" y="421" width="0.5123%" height="15" fill="rgb(227,167,31)" fg:x="15350" fg:w="163"/><text x="48.4977%" y="431.50"></text></g><g><title>&lt;backtrace::backtrace::libunwind::Frame as core::clone::Clone&gt;::clone (163 samples, 0.51%)</title><rect x="48.2477%" y="405" width="0.5123%" height="15" fill="rgb(234,80,54)" fg:x="15350" fg:w="163"/><text x="48.4977%" y="415.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::symbol_address (163 samples, 0.51%)</title><rect x="48.2477%" y="389" width="0.5123%" height="15" fill="rgb(212,114,2)" fg:x="15350" fg:w="163"/><text x="48.4977%" y="399.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::ip (102 samples, 0.32%)</title><rect x="48.4394%" y="373" width="0.3206%" height="15" fill="rgb(234,50,24)" fg:x="15411" fg:w="102"/><text x="48.6894%" y="383.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (39 samples, 0.12%)</title><rect x="48.7600%" y="357" width="0.1226%" height="15" fill="rgb(221,68,8)" fg:x="15513" fg:w="39"/><text x="49.0100%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (53 samples, 0.17%)</title><rect x="48.7600%" y="405" width="0.1666%" height="15" fill="rgb(254,180,31)" fg:x="15513" fg:w="53"/><text x="49.0100%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (53 samples, 0.17%)</title><rect x="48.7600%" y="389" width="0.1666%" height="15" fill="rgb(247,130,50)" fg:x="15513" fg:w="53"/><text x="49.0100%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (53 samples, 0.17%)</title><rect x="48.7600%" y="373" width="0.1666%" height="15" fill="rgb(211,109,4)" fg:x="15513" fg:w="53"/><text x="49.0100%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (14 samples, 0.04%)</title><rect x="48.8826%" y="357" width="0.0440%" height="15" fill="rgb(238,50,21)" fg:x="15552" fg:w="14"/><text x="49.1326%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (520 samples, 1.63%)</title><rect x="48.7600%" y="421" width="1.6344%" height="15" fill="rgb(225,57,45)" fg:x="15513" fg:w="520"/><text x="49.0100%" y="431.50"></text></g><g><title>core::ptr::write (467 samples, 1.47%)</title><rect x="48.9266%" y="405" width="1.4679%" height="15" fill="rgb(209,196,50)" fg:x="15566" fg:w="467"/><text x="49.1766%" y="415.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (928 samples, 2.92%)</title><rect x="47.5750%" y="517" width="2.9169%" height="15" fill="rgb(242,140,13)" fg:x="15136" fg:w="928"/><text x="47.8250%" y="527.50">ba..</text></g><g><title>backtrace::backtrace::libunwind::trace (928 samples, 2.92%)</title><rect x="47.5750%" y="501" width="2.9169%" height="15" fill="rgb(217,111,7)" fg:x="15136" fg:w="928"/><text x="47.8250%" y="511.50">ba..</text></g><g><title>_Unwind_Backtrace (928 samples, 2.92%)</title><rect x="47.5750%" y="485" width="2.9169%" height="15" fill="rgb(253,193,51)" fg:x="15136" fg:w="928"/><text x="47.8250%" y="495.50">_U..</text></g><g><title>backtrace::backtrace::libunwind::trace::trace_fn (789 samples, 2.48%)</title><rect x="48.0119%" y="469" width="2.4800%" height="15" fill="rgb(252,70,29)" fg:x="15275" fg:w="789"/><text x="48.2619%" y="479.50">ba..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (747 samples, 2.35%)</title><rect x="48.1440%" y="453" width="2.3479%" height="15" fill="rgb(232,127,12)" fg:x="15317" fg:w="747"/><text x="48.3940%" y="463.50">c..</text></g><g><title>dhat::new_backtrace_inner::{{closure}} (747 samples, 2.35%)</title><rect x="48.1440%" y="437" width="2.3479%" height="15" fill="rgb(211,180,21)" fg:x="15317" fg:w="747"/><text x="48.3940%" y="447.50">d..</text></g><g><title>backtrace::backtrace::Frame::ip (31 samples, 0.10%)</title><rect x="50.3945%" y="421" width="0.0974%" height="15" fill="rgb(229,72,13)" fg:x="16033" fg:w="31"/><text x="50.6445%" y="431.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::ip (31 samples, 0.10%)</title><rect x="50.3945%" y="405" width="0.0974%" height="15" fill="rgb(240,211,49)" fg:x="16033" fg:w="31"/><text x="50.6445%" y="415.50"></text></g><g><title>dhat::new_backtrace_inner (1,100 samples, 3.46%)</title><rect x="47.1193%" y="549" width="3.4575%" height="15" fill="rgb(219,149,40)" fg:x="14991" fg:w="1100"/><text x="47.3693%" y="559.50">dha..</text></g><g><title>backtrace::backtrace::trace (1,007 samples, 3.17%)</title><rect x="47.4116%" y="533" width="3.1652%" height="15" fill="rgb(210,127,46)" fg:x="15084" fg:w="1007"/><text x="47.6616%" y="543.50">bac..</text></g><g><title>backtrace::lock::lock (27 samples, 0.08%)</title><rect x="50.4919%" y="517" width="0.0849%" height="15" fill="rgb(220,106,7)" fg:x="16064" fg:w="27"/><text x="50.7419%" y="527.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (27 samples, 0.08%)</title><rect x="50.4919%" y="501" width="0.0849%" height="15" fill="rgb(249,31,22)" fg:x="16064" fg:w="27"/><text x="50.7419%" y="511.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (27 samples, 0.08%)</title><rect x="50.4919%" y="485" width="0.0849%" height="15" fill="rgb(253,1,49)" fg:x="16064" fg:w="27"/><text x="50.7419%" y="495.50"></text></g><g><title>core::ops::function::FnOnce::call_once (27 samples, 0.08%)</title><rect x="50.4919%" y="469" width="0.0849%" height="15" fill="rgb(227,144,33)" fg:x="16064" fg:w="27"/><text x="50.7419%" y="479.50"></text></g><g><title>backtrace::lock::LOCK_HELD::{{constant}}::{{closure}} (27 samples, 0.08%)</title><rect x="50.4919%" y="453" width="0.0849%" height="15" fill="rgb(249,163,44)" fg:x="16064" fg:w="27"/><text x="50.7419%" y="463.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (27 samples, 0.08%)</title><rect x="50.4919%" y="437" width="0.0849%" height="15" fill="rgb(234,15,39)" fg:x="16064" fg:w="27"/><text x="50.7419%" y="447.50"></text></g><g><title>&lt;briolette_sim::Coin as core::clone::Clone&gt;::clone (1,872 samples, 5.88%)</title><rect x="44.8593%" y="773" width="5.8840%" height="15" fill="rgb(207,66,16)" fg:x="14272" fg:w="1872"/><text x="45.1093%" y="783.50">&lt;briole..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,872 samples, 5.88%)</title><rect x="44.8593%" y="757" width="5.8840%" height="15" fill="rgb(233,112,24)" fg:x="14272" fg:w="1872"/><text x="45.1093%" y="767.50">&lt;alloc:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,872 samples, 5.88%)</title><rect x="44.8593%" y="741" width="5.8840%" height="15" fill="rgb(230,90,22)" fg:x="14272" fg:w="1872"/><text x="45.1093%" y="751.50">alloc::..</text></g><g><title>alloc::slice::hack::to_vec (1,872 samples, 5.88%)</title><rect x="44.8593%" y="725" width="5.8840%" height="15" fill="rgb(229,61,13)" fg:x="14272" fg:w="1872"/><text x="45.1093%" y="735.50">alloc::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,872 samples, 5.88%)</title><rect x="44.8593%" y="709" width="5.8840%" height="15" fill="rgb(225,57,24)" fg:x="14272" fg:w="1872"/><text x="45.1093%" y="719.50">&lt;T as a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,872 samples, 5.88%)</title><rect x="44.8593%" y="693" width="5.8840%" height="15" fill="rgb(208,169,48)" fg:x="14272" fg:w="1872"/><text x="45.1093%" y="703.50">alloc::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,872 samples, 5.88%)</title><rect x="44.8593%" y="677" width="5.8840%" height="15" fill="rgb(244,218,51)" fg:x="14272" fg:w="1872"/><text x="45.1093%" y="687.50">alloc::..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,872 samples, 5.88%)</title><rect x="44.8593%" y="661" width="5.8840%" height="15" fill="rgb(214,148,10)" fg:x="14272" fg:w="1872"/><text x="45.1093%" y="671.50">alloc::..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,872 samples, 5.88%)</title><rect x="44.8593%" y="645" width="5.8840%" height="15" fill="rgb(225,174,27)" fg:x="14272" fg:w="1872"/><text x="45.1093%" y="655.50">alloc::..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,872 samples, 5.88%)</title><rect x="44.8593%" y="629" width="5.8840%" height="15" fill="rgb(230,96,26)" fg:x="14272" fg:w="1872"/><text x="45.1093%" y="639.50">&lt;alloc:..</text></g><g><title>alloc::alloc::Global::alloc_impl (1,872 samples, 5.88%)</title><rect x="44.8593%" y="613" width="5.8840%" height="15" fill="rgb(232,10,30)" fg:x="14272" fg:w="1872"/><text x="45.1093%" y="623.50">alloc::..</text></g><g><title>alloc::alloc::alloc (1,872 samples, 5.88%)</title><rect x="44.8593%" y="597" width="5.8840%" height="15" fill="rgb(222,8,50)" fg:x="14272" fg:w="1872"/><text x="45.1093%" y="607.50">alloc::..</text></g><g><title>__rust_alloc (1,872 samples, 5.88%)</title><rect x="44.8593%" y="581" width="5.8840%" height="15" fill="rgb(213,81,27)" fg:x="14272" fg:w="1872"/><text x="45.1093%" y="591.50">__rust_..</text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (1,872 samples, 5.88%)</title><rect x="44.8593%" y="565" width="5.8840%" height="15" fill="rgb(245,50,10)" fg:x="14272" fg:w="1872"/><text x="45.1093%" y="575.50">&lt;dhat::..</text></g><g><title>mintex::Mutex&lt;T&gt;::lock (53 samples, 0.17%)</title><rect x="50.5768%" y="549" width="0.1666%" height="15" fill="rgb(216,100,18)" fg:x="16091" fg:w="53"/><text x="50.8268%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (53 samples, 0.17%)</title><rect x="50.5768%" y="533" width="0.1666%" height="15" fill="rgb(236,147,54)" fg:x="16091" fg:w="53"/><text x="50.8268%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (53 samples, 0.17%)</title><rect x="50.5768%" y="517" width="0.1666%" height="15" fill="rgb(205,143,26)" fg:x="16091" fg:w="53"/><text x="50.8268%" y="527.50"></text></g><g><title>&lt;dhat::TRI_GLOBALS as core::ops::deref::Deref&gt;::deref (36 samples, 0.11%)</title><rect x="50.7591%" y="613" width="0.1132%" height="15" fill="rgb(236,26,9)" fg:x="16149" fg:w="36"/><text x="51.0091%" y="623.50"></text></g><g><title>&lt;dhat::TRI_GLOBALS as core::ops::deref::Deref&gt;::deref::__stability (36 samples, 0.11%)</title><rect x="50.7591%" y="597" width="0.1132%" height="15" fill="rgb(221,165,53)" fg:x="16149" fg:w="36"/><text x="51.0091%" y="607.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (36 samples, 0.11%)</title><rect x="50.7591%" y="581" width="0.1132%" height="15" fill="rgb(214,110,17)" fg:x="16149" fg:w="36"/><text x="51.0091%" y="591.50"></text></g><g><title>std::sync::once::Once::call_once (36 samples, 0.11%)</title><rect x="50.7591%" y="565" width="0.1132%" height="15" fill="rgb(237,197,12)" fg:x="16149" fg:w="36"/><text x="51.0091%" y="575.50"></text></g><g><title>std::sys::sync::once::futex::Once::is_completed (36 samples, 0.11%)</title><rect x="50.7591%" y="549" width="0.1132%" height="15" fill="rgb(205,84,17)" fg:x="16149" fg:w="36"/><text x="51.0091%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (5 samples, 0.02%)</title><rect x="50.8722%" y="565" width="0.0157%" height="15" fill="rgb(237,18,45)" fg:x="16185" fg:w="5"/><text x="51.1222%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (5 samples, 0.02%)</title><rect x="50.8722%" y="549" width="0.0157%" height="15" fill="rgb(221,87,14)" fg:x="16185" fg:w="5"/><text x="51.1222%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (5 samples, 0.02%)</title><rect x="50.8722%" y="533" width="0.0157%" height="15" fill="rgb(238,186,15)" fg:x="16185" fg:w="5"/><text x="51.1222%" y="543.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (5 samples, 0.02%)</title><rect x="50.8722%" y="517" width="0.0157%" height="15" fill="rgb(208,115,11)" fg:x="16185" fg:w="5"/><text x="51.1222%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (5 samples, 0.02%)</title><rect x="50.8722%" y="501" width="0.0157%" height="15" fill="rgb(254,175,0)" fg:x="16185" fg:w="5"/><text x="51.1222%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.02%)</title><rect x="50.8722%" y="485" width="0.0157%" height="15" fill="rgb(227,24,42)" fg:x="16185" fg:w="5"/><text x="51.1222%" y="495.50"></text></g><g><title>dhat::Globals::record_block (103 samples, 0.32%)</title><rect x="50.8722%" y="613" width="0.3237%" height="15" fill="rgb(223,211,37)" fg:x="16185" fg:w="103"/><text x="51.1222%" y="623.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (103 samples, 0.32%)</title><rect x="50.8722%" y="597" width="0.3237%" height="15" fill="rgb(235,49,27)" fg:x="16185" fg:w="103"/><text x="51.1222%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (103 samples, 0.32%)</title><rect x="50.8722%" y="581" width="0.3237%" height="15" fill="rgb(254,97,51)" fg:x="16185" fg:w="103"/><text x="51.1222%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (98 samples, 0.31%)</title><rect x="50.8879%" y="565" width="0.3080%" height="15" fill="rgb(249,51,40)" fg:x="16190" fg:w="98"/><text x="51.1379%" y="575.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (98 samples, 0.31%)</title><rect x="50.8879%" y="549" width="0.3080%" height="15" fill="rgb(210,128,45)" fg:x="16190" fg:w="98"/><text x="51.1379%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (98 samples, 0.31%)</title><rect x="50.8879%" y="533" width="0.3080%" height="15" fill="rgb(224,137,50)" fg:x="16190" fg:w="98"/><text x="51.1379%" y="543.50"></text></g><g><title>core::ptr::write (98 samples, 0.31%)</title><rect x="50.8879%" y="517" width="0.3080%" height="15" fill="rgb(242,15,9)" fg:x="16190" fg:w="98"/><text x="51.1379%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (146 samples, 0.46%)</title><rect x="50.7559%" y="693" width="0.4589%" height="15" fill="rgb(233,187,41)" fg:x="16148" fg:w="146"/><text x="51.0059%" y="703.50"></text></g><g><title>alloc::alloc::Global::grow_impl (146 samples, 0.46%)</title><rect x="50.7559%" y="677" width="0.4589%" height="15" fill="rgb(227,2,29)" fg:x="16148" fg:w="146"/><text x="51.0059%" y="687.50"></text></g><g><title>alloc::alloc::realloc (146 samples, 0.46%)</title><rect x="50.7559%" y="661" width="0.4589%" height="15" fill="rgb(222,70,3)" fg:x="16148" fg:w="146"/><text x="51.0059%" y="671.50"></text></g><g><title>__rust_realloc (146 samples, 0.46%)</title><rect x="50.7559%" y="645" width="0.4589%" height="15" fill="rgb(213,11,42)" fg:x="16148" fg:w="146"/><text x="51.0059%" y="655.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::realloc (146 samples, 0.46%)</title><rect x="50.7559%" y="629" width="0.4589%" height="15" fill="rgb(225,150,9)" fg:x="16148" fg:w="146"/><text x="51.0059%" y="639.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (9 samples, 0.03%)</title><rect x="51.2211%" y="645" width="0.0283%" height="15" fill="rgb(230,162,45)" fg:x="16296" fg:w="9"/><text x="51.4711%" y="655.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (9 samples, 0.03%)</title><rect x="51.2211%" y="629" width="0.0283%" height="15" fill="rgb(222,14,52)" fg:x="16296" fg:w="9"/><text x="51.4711%" y="639.50"></text></g><g><title>_Unwind_Backtrace (9 samples, 0.03%)</title><rect x="51.2211%" y="613" width="0.0283%" height="15" fill="rgb(254,198,14)" fg:x="16296" fg:w="9"/><text x="51.4711%" y="623.50"></text></g><g><title>backtrace::backtrace::libunwind::trace::trace_fn (7 samples, 0.02%)</title><rect x="51.2274%" y="597" width="0.0220%" height="15" fill="rgb(220,217,30)" fg:x="16298" fg:w="7"/><text x="51.4774%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (7 samples, 0.02%)</title><rect x="51.2274%" y="581" width="0.0220%" height="15" fill="rgb(215,146,41)" fg:x="16298" fg:w="7"/><text x="51.4774%" y="591.50"></text></g><g><title>dhat::new_backtrace_inner::{{closure}} (7 samples, 0.02%)</title><rect x="51.2274%" y="565" width="0.0220%" height="15" fill="rgb(217,27,36)" fg:x="16298" fg:w="7"/><text x="51.4774%" y="575.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.02%)</title><rect x="51.2337%" y="549" width="0.0157%" height="15" fill="rgb(219,218,39)" fg:x="16300" fg:w="5"/><text x="51.4837%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (5 samples, 0.02%)</title><rect x="51.2337%" y="533" width="0.0157%" height="15" fill="rgb(219,4,42)" fg:x="16300" fg:w="5"/><text x="51.4837%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5 samples, 0.02%)</title><rect x="51.2337%" y="517" width="0.0157%" height="15" fill="rgb(249,119,36)" fg:x="16300" fg:w="5"/><text x="51.4837%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5 samples, 0.02%)</title><rect x="51.2337%" y="501" width="0.0157%" height="15" fill="rgb(209,23,33)" fg:x="16300" fg:w="5"/><text x="51.4837%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.02%)</title><rect x="51.2337%" y="485" width="0.0157%" height="15" fill="rgb(211,10,0)" fg:x="16300" fg:w="5"/><text x="51.4837%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (5 samples, 0.02%)</title><rect x="51.2337%" y="469" width="0.0157%" height="15" fill="rgb(208,99,37)" fg:x="16300" fg:w="5"/><text x="51.4837%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (5 samples, 0.02%)</title><rect x="51.2337%" y="453" width="0.0157%" height="15" fill="rgb(213,132,31)" fg:x="16300" fg:w="5"/><text x="51.4837%" y="463.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (5 samples, 0.02%)</title><rect x="51.2337%" y="437" width="0.0157%" height="15" fill="rgb(243,129,40)" fg:x="16300" fg:w="5"/><text x="51.4837%" y="447.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (5 samples, 0.02%)</title><rect x="51.2337%" y="421" width="0.0157%" height="15" fill="rgb(210,66,33)" fg:x="16300" fg:w="5"/><text x="51.4837%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (5 samples, 0.02%)</title><rect x="51.2337%" y="405" width="0.0157%" height="15" fill="rgb(209,189,4)" fg:x="16300" fg:w="5"/><text x="51.4837%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (5 samples, 0.02%)</title><rect x="51.2337%" y="389" width="0.0157%" height="15" fill="rgb(214,107,37)" fg:x="16300" fg:w="5"/><text x="51.4837%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (160 samples, 0.50%)</title><rect x="50.7496%" y="773" width="0.5029%" height="15" fill="rgb(245,88,54)" fg:x="16146" fg:w="160"/><text x="50.9996%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (160 samples, 0.50%)</title><rect x="50.7496%" y="757" width="0.5029%" height="15" fill="rgb(205,146,20)" fg:x="16146" fg:w="160"/><text x="50.9996%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (160 samples, 0.50%)</title><rect x="50.7496%" y="741" width="0.5029%" height="15" fill="rgb(220,161,25)" fg:x="16146" fg:w="160"/><text x="50.9996%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (160 samples, 0.50%)</title><rect x="50.7496%" y="725" width="0.5029%" height="15" fill="rgb(215,152,15)" fg:x="16146" fg:w="160"/><text x="50.9996%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (158 samples, 0.50%)</title><rect x="50.7559%" y="709" width="0.4966%" height="15" fill="rgb(233,192,44)" fg:x="16148" fg:w="158"/><text x="51.0059%" y="719.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (12 samples, 0.04%)</title><rect x="51.2148%" y="693" width="0.0377%" height="15" fill="rgb(240,170,46)" fg:x="16294" fg:w="12"/><text x="51.4648%" y="703.50"></text></g><g><title>dhat::new_backtrace_inner (10 samples, 0.03%)</title><rect x="51.2211%" y="677" width="0.0314%" height="15" fill="rgb(207,104,33)" fg:x="16296" fg:w="10"/><text x="51.4711%" y="687.50"></text></g><g><title>backtrace::backtrace::trace (10 samples, 0.03%)</title><rect x="51.2211%" y="661" width="0.0314%" height="15" fill="rgb(219,21,39)" fg:x="16296" fg:w="10"/><text x="51.4711%" y="671.50"></text></g><g><title>briolette_sim::simulator::&lt;impl absim::Enqueue&lt;briolette_sim::simulator::Simulator&gt; for alloc::vec::Vec&lt;absim::Event&lt;briolette_sim::EventData&gt;&gt;&gt;::enqueue (12 samples, 0.04%)</title><rect x="51.2526%" y="773" width="0.0377%" height="15" fill="rgb(214,133,29)" fg:x="16306" fg:w="12"/><text x="51.5026%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (10 samples, 0.03%)</title><rect x="51.2588%" y="757" width="0.0314%" height="15" fill="rgb(226,93,6)" fg:x="16308" fg:w="10"/><text x="51.5088%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (10 samples, 0.03%)</title><rect x="51.2588%" y="741" width="0.0314%" height="15" fill="rgb(252,222,34)" fg:x="16308" fg:w="10"/><text x="51.5088%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (10 samples, 0.03%)</title><rect x="51.2588%" y="725" width="0.0314%" height="15" fill="rgb(252,92,48)" fg:x="16308" fg:w="10"/><text x="51.5088%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (10 samples, 0.03%)</title><rect x="51.2588%" y="709" width="0.0314%" height="15" fill="rgb(245,223,24)" fg:x="16308" fg:w="10"/><text x="51.5088%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.03%)</title><rect x="51.2588%" y="693" width="0.0314%" height="15" fill="rgb(205,176,3)" fg:x="16308" fg:w="10"/><text x="51.5088%" y="703.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (10 samples, 0.03%)</title><rect x="51.2588%" y="677" width="0.0314%" height="15" fill="rgb(235,151,15)" fg:x="16308" fg:w="10"/><text x="51.5088%" y="687.50"></text></g><g><title>dhat::new_backtrace_inner (9 samples, 0.03%)</title><rect x="51.2620%" y="661" width="0.0283%" height="15" fill="rgb(237,209,11)" fg:x="16309" fg:w="9"/><text x="51.5120%" y="671.50"></text></g><g><title>backtrace::backtrace::trace (7 samples, 0.02%)</title><rect x="51.2683%" y="645" width="0.0220%" height="15" fill="rgb(243,227,24)" fg:x="16311" fg:w="7"/><text x="51.5183%" y="655.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (7 samples, 0.02%)</title><rect x="51.2683%" y="629" width="0.0220%" height="15" fill="rgb(239,193,16)" fg:x="16311" fg:w="7"/><text x="51.5183%" y="639.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (7 samples, 0.02%)</title><rect x="51.2683%" y="613" width="0.0220%" height="15" fill="rgb(231,27,9)" fg:x="16311" fg:w="7"/><text x="51.5183%" y="623.50"></text></g><g><title>_Unwind_Backtrace (7 samples, 0.02%)</title><rect x="51.2683%" y="597" width="0.0220%" height="15" fill="rgb(219,169,10)" fg:x="16311" fg:w="7"/><text x="51.5183%" y="607.50"></text></g><g><title>backtrace::backtrace::libunwind::trace::trace_fn (6 samples, 0.02%)</title><rect x="51.2714%" y="581" width="0.0189%" height="15" fill="rgb(244,229,43)" fg:x="16312" fg:w="6"/><text x="51.5214%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (6 samples, 0.02%)</title><rect x="51.2714%" y="565" width="0.0189%" height="15" fill="rgb(254,38,20)" fg:x="16312" fg:w="6"/><text x="51.5214%" y="575.50"></text></g><g><title>dhat::new_backtrace_inner::{{closure}} (5 samples, 0.02%)</title><rect x="51.2746%" y="549" width="0.0157%" height="15" fill="rgb(250,47,30)" fg:x="16313" fg:w="5"/><text x="51.5246%" y="559.50"></text></g><g><title>briolette_sim::simulator::Simulator::do_transaction (2,049 samples, 6.44%)</title><rect x="44.8593%" y="789" width="6.4404%" height="15" fill="rgb(224,124,36)" fg:x="14272" fg:w="2049"/><text x="45.1093%" y="799.50">briolett..</text></g><g><title>core::cmp::PartialEq::ne (11 samples, 0.03%)</title><rect x="51.2997%" y="789" width="0.0346%" height="15" fill="rgb(246,68,51)" fg:x="16321" fg:w="11"/><text x="51.5497%" y="799.50"></text></g><g><title>&lt;briolette_sim::Statistics as core::cmp::PartialEq&gt;::eq (11 samples, 0.03%)</title><rect x="51.2997%" y="773" width="0.0346%" height="15" fill="rgb(253,43,49)" fg:x="16321" fg:w="11"/><text x="51.5497%" y="783.50"></text></g><g><title>dhat::Globals::get_pp_info (131 samples, 0.41%)</title><rect x="51.5103%" y="405" width="0.4118%" height="15" fill="rgb(219,54,36)" fg:x="16388" fg:w="131"/><text x="51.7603%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (130 samples, 0.41%)</title><rect x="51.5134%" y="389" width="0.4086%" height="15" fill="rgb(227,133,34)" fg:x="16389" fg:w="130"/><text x="51.7634%" y="399.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (129 samples, 0.41%)</title><rect x="51.5166%" y="373" width="0.4055%" height="15" fill="rgb(247,227,15)" fg:x="16390" fg:w="129"/><text x="51.7666%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (128 samples, 0.40%)</title><rect x="51.5197%" y="357" width="0.4023%" height="15" fill="rgb(229,96,14)" fg:x="16391" fg:w="128"/><text x="51.7697%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (128 samples, 0.40%)</title><rect x="51.5197%" y="341" width="0.4023%" height="15" fill="rgb(220,79,17)" fg:x="16391" fg:w="128"/><text x="51.7697%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (128 samples, 0.40%)</title><rect x="51.5197%" y="325" width="0.4023%" height="15" fill="rgb(205,131,53)" fg:x="16391" fg:w="128"/><text x="51.7697%" y="335.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (128 samples, 0.40%)</title><rect x="51.5197%" y="309" width="0.4023%" height="15" fill="rgb(209,50,29)" fg:x="16391" fg:w="128"/><text x="51.7697%" y="319.50"></text></g><g><title>&lt;dhat::Backtrace as core::cmp::PartialEq&gt;::eq (128 samples, 0.40%)</title><rect x="51.5197%" y="293" width="0.4023%" height="15" fill="rgb(245,86,46)" fg:x="16391" fg:w="128"/><text x="51.7697%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (41 samples, 0.13%)</title><rect x="51.7932%" y="277" width="0.1289%" height="15" fill="rgb(235,66,46)" fg:x="16478" fg:w="41"/><text x="52.0432%" y="287.50"></text></g><g><title>&lt;dhat::Backtrace as core::cmp::PartialEq&gt;::eq::{{closure}} (41 samples, 0.13%)</title><rect x="51.7932%" y="261" width="0.1289%" height="15" fill="rgb(232,148,31)" fg:x="16478" fg:w="41"/><text x="52.0432%" y="271.50"></text></g><g><title>backtrace::capture::BacktraceFrame::ip (21 samples, 0.07%)</title><rect x="51.8560%" y="245" width="0.0660%" height="15" fill="rgb(217,149,8)" fg:x="16498" fg:w="21"/><text x="52.1060%" y="255.50"></text></g><g><title>backtrace::capture::Frame::ip (21 samples, 0.07%)</title><rect x="51.8560%" y="229" width="0.0660%" height="15" fill="rgb(209,183,11)" fg:x="16498" fg:w="21"/><text x="52.1060%" y="239.50"></text></g><g><title>backtrace::backtrace::Frame::ip (21 samples, 0.07%)</title><rect x="51.8560%" y="213" width="0.0660%" height="15" fill="rgb(208,55,20)" fg:x="16498" fg:w="21"/><text x="52.1060%" y="223.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::ip (21 samples, 0.07%)</title><rect x="51.8560%" y="197" width="0.0660%" height="15" fill="rgb(218,39,14)" fg:x="16498" fg:w="21"/><text x="52.1060%" y="207.50"></text></g><g><title>dhat::Globals::record_block (305 samples, 0.96%)</title><rect x="51.9220%" y="405" width="0.9587%" height="15" fill="rgb(216,169,33)" fg:x="16519" fg:w="305"/><text x="52.1720%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (305 samples, 0.96%)</title><rect x="51.9220%" y="389" width="0.9587%" height="15" fill="rgb(233,80,24)" fg:x="16519" fg:w="305"/><text x="52.1720%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (305 samples, 0.96%)</title><rect x="51.9220%" y="373" width="0.9587%" height="15" fill="rgb(213,179,31)" fg:x="16519" fg:w="305"/><text x="52.1720%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (305 samples, 0.96%)</title><rect x="51.9220%" y="357" width="0.9587%" height="15" fill="rgb(209,19,5)" fg:x="16519" fg:w="305"/><text x="52.1720%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (305 samples, 0.96%)</title><rect x="51.9220%" y="341" width="0.9587%" height="15" fill="rgb(219,18,35)" fg:x="16519" fg:w="305"/><text x="52.1720%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (305 samples, 0.96%)</title><rect x="51.9220%" y="325" width="0.9587%" height="15" fill="rgb(209,169,16)" fg:x="16519" fg:w="305"/><text x="52.1720%" y="335.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (305 samples, 0.96%)</title><rect x="51.9220%" y="309" width="0.9587%" height="15" fill="rgb(245,90,51)" fg:x="16519" fg:w="305"/><text x="52.1720%" y="319.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (305 samples, 0.96%)</title><rect x="51.9220%" y="293" width="0.9587%" height="15" fill="rgb(220,99,45)" fg:x="16519" fg:w="305"/><text x="52.1720%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (305 samples, 0.96%)</title><rect x="51.9220%" y="277" width="0.9587%" height="15" fill="rgb(249,89,25)" fg:x="16519" fg:w="305"/><text x="52.1720%" y="287.50"></text></g><g><title>dhat::Globals::update_counts_for_alloc (5 samples, 0.02%)</title><rect x="52.8807%" y="405" width="0.0157%" height="15" fill="rgb(239,193,0)" fg:x="16824" fg:w="5"/><text x="53.1307%" y="415.50"></text></g><g><title>dhat::PpInfo::update_counts_for_alloc (5 samples, 0.02%)</title><rect x="52.8807%" y="389" width="0.0157%" height="15" fill="rgb(231,126,1)" fg:x="16824" fg:w="5"/><text x="53.1307%" y="399.50"></text></g><g><title>dhat::IgnoreAllocs::new (22 samples, 0.07%)</title><rect x="52.8964%" y="405" width="0.0691%" height="15" fill="rgb(243,166,3)" fg:x="16829" fg:w="22"/><text x="53.1464%" y="415.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (22 samples, 0.07%)</title><rect x="52.8964%" y="389" width="0.0691%" height="15" fill="rgb(223,22,34)" fg:x="16829" fg:w="22"/><text x="53.1464%" y="399.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (22 samples, 0.07%)</title><rect x="52.8964%" y="373" width="0.0691%" height="15" fill="rgb(251,52,51)" fg:x="16829" fg:w="22"/><text x="53.1464%" y="383.50"></text></g><g><title>core::ops::function::FnOnce::call_once (22 samples, 0.07%)</title><rect x="52.8964%" y="357" width="0.0691%" height="15" fill="rgb(221,165,28)" fg:x="16829" fg:w="22"/><text x="53.1464%" y="367.50"></text></g><g><title>dhat::IGNORE_ALLOCS::{{constant}}::{{closure}} (22 samples, 0.07%)</title><rect x="52.8964%" y="341" width="0.0691%" height="15" fill="rgb(218,121,47)" fg:x="16829" fg:w="22"/><text x="53.1464%" y="351.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (22 samples, 0.07%)</title><rect x="52.8964%" y="325" width="0.0691%" height="15" fill="rgb(209,120,9)" fg:x="16829" fg:w="22"/><text x="53.1464%" y="335.50"></text></g><g><title>Unknown (22 samples, 0.07%)</title><rect x="53.0725%" y="309" width="0.0691%" height="15" fill="rgb(236,68,12)" fg:x="16885" fg:w="22"/><text x="53.3225%" y="319.50"></text></g><g><title>_Unwind_Find_FDE (84 samples, 0.26%)</title><rect x="53.0725%" y="325" width="0.2640%" height="15" fill="rgb(225,194,26)" fg:x="16885" fg:w="84"/><text x="53.3225%" y="335.50"></text></g><g><title>__GI__dl_find_object (62 samples, 0.19%)</title><rect x="53.1416%" y="309" width="0.1949%" height="15" fill="rgb(231,84,39)" fg:x="16907" fg:w="62"/><text x="53.3916%" y="319.50"></text></g><g><title>Unknown (21 samples, 0.07%)</title><rect x="53.4025%" y="197" width="0.0660%" height="15" fill="rgb(210,11,45)" fg:x="16990" fg:w="21"/><text x="53.6525%" y="207.50"></text></g><g><title>&lt;backtrace::backtrace::Frame as core::clone::Clone&gt;::clone (69 samples, 0.22%)</title><rect x="53.4025%" y="277" width="0.2169%" height="15" fill="rgb(224,54,52)" fg:x="16990" fg:w="69"/><text x="53.6525%" y="287.50"></text></g><g><title>&lt;backtrace::backtrace::libunwind::Frame as core::clone::Clone&gt;::clone (69 samples, 0.22%)</title><rect x="53.4025%" y="261" width="0.2169%" height="15" fill="rgb(238,102,14)" fg:x="16990" fg:w="69"/><text x="53.6525%" y="271.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::symbol_address (69 samples, 0.22%)</title><rect x="53.4025%" y="245" width="0.2169%" height="15" fill="rgb(243,160,52)" fg:x="16990" fg:w="69"/><text x="53.6525%" y="255.50"></text></g><g><title>_Unwind_FindEnclosingFunction (69 samples, 0.22%)</title><rect x="53.4025%" y="229" width="0.2169%" height="15" fill="rgb(216,114,19)" fg:x="16990" fg:w="69"/><text x="53.6525%" y="239.50"></text></g><g><title>_Unwind_Find_FDE (69 samples, 0.22%)</title><rect x="53.4025%" y="213" width="0.2169%" height="15" fill="rgb(244,166,37)" fg:x="16990" fg:w="69"/><text x="53.6525%" y="223.50"></text></g><g><title>__GI__dl_find_object (48 samples, 0.15%)</title><rect x="53.4685%" y="197" width="0.1509%" height="15" fill="rgb(246,29,44)" fg:x="17011" fg:w="48"/><text x="53.7185%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (8 samples, 0.03%)</title><rect x="53.6256%" y="197" width="0.0251%" height="15" fill="rgb(215,56,53)" fg:x="17061" fg:w="8"/><text x="53.8756%" y="207.50"></text></g><g><title>alloc::alloc::Global::grow_impl (8 samples, 0.03%)</title><rect x="53.6256%" y="181" width="0.0251%" height="15" fill="rgb(217,60,2)" fg:x="17061" fg:w="8"/><text x="53.8756%" y="191.50"></text></g><g><title>alloc::alloc::realloc (8 samples, 0.03%)</title><rect x="53.6256%" y="165" width="0.0251%" height="15" fill="rgb(207,26,24)" fg:x="17061" fg:w="8"/><text x="53.8756%" y="175.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::realloc (8 samples, 0.03%)</title><rect x="53.6256%" y="149" width="0.0251%" height="15" fill="rgb(252,210,15)" fg:x="17061" fg:w="8"/><text x="53.8756%" y="159.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (8 samples, 0.03%)</title><rect x="53.6256%" y="133" width="0.0251%" height="15" fill="rgb(253,209,26)" fg:x="17061" fg:w="8"/><text x="53.8756%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (20 samples, 0.06%)</title><rect x="53.6225%" y="213" width="0.0629%" height="15" fill="rgb(238,170,14)" fg:x="17060" fg:w="20"/><text x="53.8725%" y="223.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (10 samples, 0.03%)</title><rect x="53.6539%" y="197" width="0.0314%" height="15" fill="rgb(216,178,15)" fg:x="17070" fg:w="10"/><text x="53.9039%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (39 samples, 0.12%)</title><rect x="53.6194%" y="277" width="0.1226%" height="15" fill="rgb(250,197,2)" fg:x="17059" fg:w="39"/><text x="53.8694%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (39 samples, 0.12%)</title><rect x="53.6194%" y="261" width="0.1226%" height="15" fill="rgb(212,70,42)" fg:x="17059" fg:w="39"/><text x="53.8694%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (39 samples, 0.12%)</title><rect x="53.6194%" y="245" width="0.1226%" height="15" fill="rgb(227,213,9)" fg:x="17059" fg:w="39"/><text x="53.8694%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (39 samples, 0.12%)</title><rect x="53.6194%" y="229" width="0.1226%" height="15" fill="rgb(245,99,25)" fg:x="17059" fg:w="39"/><text x="53.8694%" y="239.50"></text></g><g><title>alloc::raw_vec::layout_array (18 samples, 0.06%)</title><rect x="53.6854%" y="213" width="0.0566%" height="15" fill="rgb(250,82,29)" fg:x="17080" fg:w="18"/><text x="53.9354%" y="223.50"></text></g><g><title>core::alloc::layout::Layout::repeat (18 samples, 0.06%)</title><rect x="53.6854%" y="197" width="0.0566%" height="15" fill="rgb(241,226,54)" fg:x="17080" fg:w="18"/><text x="53.9354%" y="207.50"></text></g><g><title>core::alloc::layout::Layout::repeat_packed (18 samples, 0.06%)</title><rect x="53.6854%" y="181" width="0.0566%" height="15" fill="rgb(221,99,41)" fg:x="17080" fg:w="18"/><text x="53.9354%" y="191.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (18 samples, 0.06%)</title><rect x="53.6854%" y="165" width="0.0566%" height="15" fill="rgb(213,90,21)" fg:x="17080" fg:w="18"/><text x="53.9354%" y="175.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (18 samples, 0.06%)</title><rect x="53.6854%" y="149" width="0.0566%" height="15" fill="rgb(205,208,24)" fg:x="17080" fg:w="18"/><text x="53.9354%" y="159.50"></text></g><g><title>backtrace::backtrace::Frame::ip (17 samples, 0.05%)</title><rect x="53.7419%" y="277" width="0.0534%" height="15" fill="rgb(246,31,12)" fg:x="17098" fg:w="17"/><text x="53.9919%" y="287.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::ip (17 samples, 0.05%)</title><rect x="53.7419%" y="261" width="0.0534%" height="15" fill="rgb(213,154,6)" fg:x="17098" fg:w="17"/><text x="53.9919%" y="271.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (555 samples, 1.74%)</title><rect x="53.0693%" y="373" width="1.7445%" height="15" fill="rgb(222,163,29)" fg:x="16884" fg:w="555"/><text x="53.3193%" y="383.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (555 samples, 1.74%)</title><rect x="53.0693%" y="357" width="1.7445%" height="15" fill="rgb(227,201,8)" fg:x="16884" fg:w="555"/><text x="53.3193%" y="367.50"></text></g><g><title>_Unwind_Backtrace (555 samples, 1.74%)</title><rect x="53.0693%" y="341" width="1.7445%" height="15" fill="rgb(233,9,32)" fg:x="16884" fg:w="555"/><text x="53.3193%" y="351.50"></text></g><g><title>backtrace::backtrace::libunwind::trace::trace_fn (470 samples, 1.48%)</title><rect x="53.3365%" y="325" width="1.4773%" height="15" fill="rgb(217,54,24)" fg:x="16969" fg:w="470"/><text x="53.5865%" y="335.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (449 samples, 1.41%)</title><rect x="53.4025%" y="309" width="1.4113%" height="15" fill="rgb(235,192,0)" fg:x="16990" fg:w="449"/><text x="53.6525%" y="319.50"></text></g><g><title>dhat::new_backtrace_inner::{{closure}} (449 samples, 1.41%)</title><rect x="53.4025%" y="293" width="1.4113%" height="15" fill="rgb(235,45,9)" fg:x="16990" fg:w="449"/><text x="53.6525%" y="303.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (324 samples, 1.02%)</title><rect x="53.7954%" y="277" width="1.0184%" height="15" fill="rgb(246,42,40)" fg:x="17115" fg:w="324"/><text x="54.0454%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (324 samples, 1.02%)</title><rect x="53.7954%" y="261" width="1.0184%" height="15" fill="rgb(248,111,24)" fg:x="17115" fg:w="324"/><text x="54.0454%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (324 samples, 1.02%)</title><rect x="53.7954%" y="245" width="1.0184%" height="15" fill="rgb(249,65,22)" fg:x="17115" fg:w="324"/><text x="54.0454%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (324 samples, 1.02%)</title><rect x="53.7954%" y="229" width="1.0184%" height="15" fill="rgb(238,111,51)" fg:x="17115" fg:w="324"/><text x="54.0454%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (324 samples, 1.02%)</title><rect x="53.7954%" y="213" width="1.0184%" height="15" fill="rgb(250,118,22)" fg:x="17115" fg:w="324"/><text x="54.0454%" y="223.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (324 samples, 1.02%)</title><rect x="53.7954%" y="197" width="1.0184%" height="15" fill="rgb(234,84,26)" fg:x="17115" fg:w="324"/><text x="54.0454%" y="207.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (324 samples, 1.02%)</title><rect x="53.7954%" y="181" width="1.0184%" height="15" fill="rgb(243,172,12)" fg:x="17115" fg:w="324"/><text x="54.0454%" y="191.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (324 samples, 1.02%)</title><rect x="53.7954%" y="165" width="1.0184%" height="15" fill="rgb(236,150,49)" fg:x="17115" fg:w="324"/><text x="54.0454%" y="175.50"></text></g><g><title>backtrace::lock::lock (9 samples, 0.03%)</title><rect x="54.8138%" y="373" width="0.0283%" height="15" fill="rgb(225,197,26)" fg:x="17439" fg:w="9"/><text x="55.0638%" y="383.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (9 samples, 0.03%)</title><rect x="54.8138%" y="357" width="0.0283%" height="15" fill="rgb(214,17,42)" fg:x="17439" fg:w="9"/><text x="55.0638%" y="367.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (9 samples, 0.03%)</title><rect x="54.8138%" y="341" width="0.0283%" height="15" fill="rgb(224,165,40)" fg:x="17439" fg:w="9"/><text x="55.0638%" y="351.50"></text></g><g><title>std::sync::poison::Flag::guard (9 samples, 0.03%)</title><rect x="54.8138%" y="325" width="0.0283%" height="15" fill="rgb(246,100,4)" fg:x="17439" fg:w="9"/><text x="55.0638%" y="335.50"></text></g><g><title>std::thread::panicking (9 samples, 0.03%)</title><rect x="54.8138%" y="309" width="0.0283%" height="15" fill="rgb(222,103,0)" fg:x="17439" fg:w="9"/><text x="55.0638%" y="319.50"></text></g><g><title>std::panicking::panicking (9 samples, 0.03%)</title><rect x="54.8138%" y="293" width="0.0283%" height="15" fill="rgb(227,189,26)" fg:x="17439" fg:w="9"/><text x="55.0638%" y="303.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (9 samples, 0.03%)</title><rect x="54.8138%" y="277" width="0.0283%" height="15" fill="rgb(214,202,17)" fg:x="17439" fg:w="9"/><text x="55.0638%" y="287.50"></text></g><g><title>&lt;backtrace::lock::LockGuard as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="54.8452%" y="357" width="0.0126%" height="15" fill="rgb(229,111,3)" fg:x="17449" fg:w="4"/><text x="55.0952%" y="367.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.01%)</title><rect x="54.8452%" y="341" width="0.0126%" height="15" fill="rgb(229,172,15)" fg:x="17449" fg:w="4"/><text x="55.0952%" y="351.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.01%)</title><rect x="54.8452%" y="325" width="0.0126%" height="15" fill="rgb(230,224,35)" fg:x="17449" fg:w="4"/><text x="55.0952%" y="335.50"></text></g><g><title>&lt;backtrace::lock::LockGuard as core::ops::drop::Drop&gt;::drop::{{closure}} (4 samples, 0.01%)</title><rect x="54.8452%" y="309" width="0.0126%" height="15" fill="rgb(251,141,6)" fg:x="17449" fg:w="4"/><text x="55.0952%" y="319.50"></text></g><g><title>dhat::new_backtrace_inner (632 samples, 1.99%)</title><rect x="52.9656%" y="405" width="1.9865%" height="15" fill="rgb(225,208,6)" fg:x="16851" fg:w="632"/><text x="53.2156%" y="415.50">d..</text></g><g><title>backtrace::backtrace::trace (599 samples, 1.88%)</title><rect x="53.0693%" y="389" width="1.8828%" height="15" fill="rgb(246,181,16)" fg:x="16884" fg:w="599"/><text x="53.3193%" y="399.50">b..</text></g><g><title>core::ptr::drop_in_place&lt;backtrace::lock::LockGuard&gt; (35 samples, 0.11%)</title><rect x="54.8421%" y="373" width="0.1100%" height="15" fill="rgb(227,129,36)" fg:x="17448" fg:w="35"/><text x="55.0921%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt;&gt; (30 samples, 0.09%)</title><rect x="54.8578%" y="357" width="0.0943%" height="15" fill="rgb(248,117,24)" fg:x="17453" fg:w="30"/><text x="55.1078%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (30 samples, 0.09%)</title><rect x="54.8578%" y="341" width="0.0943%" height="15" fill="rgb(214,185,35)" fg:x="17453" fg:w="30"/><text x="55.1078%" y="351.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.09%)</title><rect x="54.8578%" y="325" width="0.0943%" height="15" fill="rgb(236,150,34)" fg:x="17453" fg:w="30"/><text x="55.1078%" y="335.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (30 samples, 0.09%)</title><rect x="54.8578%" y="309" width="0.0943%" height="15" fill="rgb(243,228,27)" fg:x="17453" fg:w="30"/><text x="55.1078%" y="319.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (30 samples, 0.09%)</title><rect x="54.8578%" y="293" width="0.0943%" height="15" fill="rgb(245,77,44)" fg:x="17453" fg:w="30"/><text x="55.1078%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_swap (30 samples, 0.09%)</title><rect x="54.8578%" y="277" width="0.0943%" height="15" fill="rgb(235,214,42)" fg:x="17453" fg:w="30"/><text x="55.1078%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,152 samples, 3.62%)</title><rect x="51.3343%" y="693" width="3.6209%" height="15" fill="rgb(221,74,3)" fg:x="16332" fg:w="1152"/><text x="51.5843%" y="703.50">&lt;cor..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (1,152 samples, 3.62%)</title><rect x="51.3343%" y="677" width="3.6209%" height="15" fill="rgb(206,121,29)" fg:x="16332" fg:w="1152"/><text x="51.5843%" y="687.50">&lt;cor..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,099 samples, 3.45%)</title><rect x="51.5009%" y="661" width="3.4543%" height="15" fill="rgb(249,131,53)" fg:x="16385" fg:w="1099"/><text x="51.7509%" y="671.50">cor..</text></g><g><title>&lt;briolette_sim::simulator::Simulator as absim::Simulation&gt;::apply::{{closure}} (1,099 samples, 3.45%)</title><rect x="51.5009%" y="645" width="3.4543%" height="15" fill="rgb(236,170,29)" fg:x="16385" fg:w="1099"/><text x="51.7509%" y="655.50">&lt;br..</text></g><g><title>&lt;briolette_sim::Coin as core::clone::Clone&gt;::clone (1,099 samples, 3.45%)</title><rect x="51.5009%" y="629" width="3.4543%" height="15" fill="rgb(247,96,15)" fg:x="16385" fg:w="1099"/><text x="51.7509%" y="639.50">&lt;br..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,099 samples, 3.45%)</title><rect x="51.5009%" y="613" width="3.4543%" height="15" fill="rgb(211,210,7)" fg:x="16385" fg:w="1099"/><text x="51.7509%" y="623.50">&lt;al..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,099 samples, 3.45%)</title><rect x="51.5009%" y="597" width="3.4543%" height="15" fill="rgb(240,88,50)" fg:x="16385" fg:w="1099"/><text x="51.7509%" y="607.50">all..</text></g><g><title>alloc::slice::hack::to_vec (1,099 samples, 3.45%)</title><rect x="51.5009%" y="581" width="3.4543%" height="15" fill="rgb(209,229,26)" fg:x="16385" fg:w="1099"/><text x="51.7509%" y="591.50">all..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,099 samples, 3.45%)</title><rect x="51.5009%" y="565" width="3.4543%" height="15" fill="rgb(210,68,23)" fg:x="16385" fg:w="1099"/><text x="51.7509%" y="575.50">&lt;T ..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,099 samples, 3.45%)</title><rect x="51.5009%" y="549" width="3.4543%" height="15" fill="rgb(229,180,13)" fg:x="16385" fg:w="1099"/><text x="51.7509%" y="559.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,099 samples, 3.45%)</title><rect x="51.5009%" y="533" width="3.4543%" height="15" fill="rgb(236,53,44)" fg:x="16385" fg:w="1099"/><text x="51.7509%" y="543.50">all..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,099 samples, 3.45%)</title><rect x="51.5009%" y="517" width="3.4543%" height="15" fill="rgb(244,214,29)" fg:x="16385" fg:w="1099"/><text x="51.7509%" y="527.50">all..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,099 samples, 3.45%)</title><rect x="51.5009%" y="501" width="3.4543%" height="15" fill="rgb(220,75,29)" fg:x="16385" fg:w="1099"/><text x="51.7509%" y="511.50">all..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,099 samples, 3.45%)</title><rect x="51.5009%" y="485" width="3.4543%" height="15" fill="rgb(214,183,37)" fg:x="16385" fg:w="1099"/><text x="51.7509%" y="495.50">&lt;al..</text></g><g><title>alloc::alloc::Global::alloc_impl (1,099 samples, 3.45%)</title><rect x="51.5009%" y="469" width="3.4543%" height="15" fill="rgb(239,117,29)" fg:x="16385" fg:w="1099"/><text x="51.7509%" y="479.50">all..</text></g><g><title>alloc::alloc::alloc (1,099 samples, 3.45%)</title><rect x="51.5009%" y="453" width="3.4543%" height="15" fill="rgb(237,171,35)" fg:x="16385" fg:w="1099"/><text x="51.7509%" y="463.50">all..</text></g><g><title>__rust_alloc (1,099 samples, 3.45%)</title><rect x="51.5009%" y="437" width="3.4543%" height="15" fill="rgb(229,178,53)" fg:x="16385" fg:w="1099"/><text x="51.7509%" y="447.50">__r..</text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (1,097 samples, 3.45%)</title><rect x="51.5072%" y="421" width="3.4481%" height="15" fill="rgb(210,102,19)" fg:x="16387" fg:w="1097"/><text x="51.7572%" y="431.50">&lt;dh..</text></g><g><title>dhat::Globals::record_block (4 samples, 0.01%)</title><rect x="54.9584%" y="517" width="0.0126%" height="15" fill="rgb(235,127,22)" fg:x="17485" fg:w="4"/><text x="55.2084%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (4 samples, 0.01%)</title><rect x="54.9584%" y="501" width="0.0126%" height="15" fill="rgb(244,31,31)" fg:x="17485" fg:w="4"/><text x="55.2084%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.01%)</title><rect x="54.9584%" y="485" width="0.0126%" height="15" fill="rgb(231,43,21)" fg:x="17485" fg:w="4"/><text x="55.2084%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (4 samples, 0.01%)</title><rect x="54.9584%" y="469" width="0.0126%" height="15" fill="rgb(217,131,35)" fg:x="17485" fg:w="4"/><text x="55.2084%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (4 samples, 0.01%)</title><rect x="54.9584%" y="453" width="0.0126%" height="15" fill="rgb(221,149,4)" fg:x="17485" fg:w="4"/><text x="55.2084%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (4 samples, 0.01%)</title><rect x="54.9584%" y="437" width="0.0126%" height="15" fill="rgb(232,170,28)" fg:x="17485" fg:w="4"/><text x="55.2084%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (4 samples, 0.01%)</title><rect x="54.9584%" y="421" width="0.0126%" height="15" fill="rgb(238,56,10)" fg:x="17485" fg:w="4"/><text x="55.2084%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (4 samples, 0.01%)</title><rect x="54.9584%" y="405" width="0.0126%" height="15" fill="rgb(235,196,14)" fg:x="17485" fg:w="4"/><text x="55.2084%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.01%)</title><rect x="54.9584%" y="389" width="0.0126%" height="15" fill="rgb(216,45,48)" fg:x="17485" fg:w="4"/><text x="55.2084%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,160 samples, 3.65%)</title><rect x="51.3343%" y="725" width="3.6461%" height="15" fill="rgb(238,213,17)" fg:x="16332" fg:w="1160"/><text x="51.5843%" y="735.50">&lt;all..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,160 samples, 3.65%)</title><rect x="51.3343%" y="709" width="3.6461%" height="15" fill="rgb(212,13,2)" fg:x="16332" fg:w="1160"/><text x="51.5843%" y="719.50">allo..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (8 samples, 0.03%)</title><rect x="54.9552%" y="693" width="0.0251%" height="15" fill="rgb(240,114,20)" fg:x="17484" fg:w="8"/><text x="55.2052%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.03%)</title><rect x="54.9552%" y="677" width="0.0251%" height="15" fill="rgb(228,41,40)" fg:x="17484" fg:w="8"/><text x="55.2052%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (8 samples, 0.03%)</title><rect x="54.9552%" y="661" width="0.0251%" height="15" fill="rgb(244,132,35)" fg:x="17484" fg:w="8"/><text x="55.2052%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (8 samples, 0.03%)</title><rect x="54.9552%" y="645" width="0.0251%" height="15" fill="rgb(253,189,4)" fg:x="17484" fg:w="8"/><text x="55.2052%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (8 samples, 0.03%)</title><rect x="54.9552%" y="629" width="0.0251%" height="15" fill="rgb(224,37,19)" fg:x="17484" fg:w="8"/><text x="55.2052%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.03%)</title><rect x="54.9552%" y="613" width="0.0251%" height="15" fill="rgb(235,223,18)" fg:x="17484" fg:w="8"/><text x="55.2052%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (8 samples, 0.03%)</title><rect x="54.9552%" y="597" width="0.0251%" height="15" fill="rgb(235,163,25)" fg:x="17484" fg:w="8"/><text x="55.2052%" y="607.50"></text></g><g><title>alloc::alloc::Global::grow_impl (8 samples, 0.03%)</title><rect x="54.9552%" y="581" width="0.0251%" height="15" fill="rgb(217,145,28)" fg:x="17484" fg:w="8"/><text x="55.2052%" y="591.50"></text></g><g><title>alloc::alloc::realloc (8 samples, 0.03%)</title><rect x="54.9552%" y="565" width="0.0251%" height="15" fill="rgb(223,223,32)" fg:x="17484" fg:w="8"/><text x="55.2052%" y="575.50"></text></g><g><title>__rust_realloc (8 samples, 0.03%)</title><rect x="54.9552%" y="549" width="0.0251%" height="15" fill="rgb(227,189,39)" fg:x="17484" fg:w="8"/><text x="55.2052%" y="559.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::realloc (7 samples, 0.02%)</title><rect x="54.9584%" y="533" width="0.0220%" height="15" fill="rgb(248,10,22)" fg:x="17485" fg:w="7"/><text x="55.2084%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.06%)</title><rect x="55.0904%" y="341" width="0.0597%" height="15" fill="rgb(248,46,39)" fg:x="17527" fg:w="19"/><text x="55.3404%" y="351.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::dealloc (6 samples, 0.02%)</title><rect x="55.1501%" y="261" width="0.0189%" height="15" fill="rgb(248,113,48)" fg:x="17546" fg:w="6"/><text x="55.4001%" y="271.50"></text></g><g><title>dhat::IgnoreAllocs::new (6 samples, 0.02%)</title><rect x="55.1501%" y="245" width="0.0189%" height="15" fill="rgb(245,16,25)" fg:x="17546" fg:w="6"/><text x="55.4001%" y="255.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6 samples, 0.02%)</title><rect x="55.1501%" y="229" width="0.0189%" height="15" fill="rgb(249,152,16)" fg:x="17546" fg:w="6"/><text x="55.4001%" y="239.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.02%)</title><rect x="55.1501%" y="213" width="0.0189%" height="15" fill="rgb(250,16,1)" fg:x="17546" fg:w="6"/><text x="55.4001%" y="223.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.02%)</title><rect x="55.1501%" y="197" width="0.0189%" height="15" fill="rgb(249,138,3)" fg:x="17546" fg:w="6"/><text x="55.4001%" y="207.50"></text></g><g><title>dhat::IGNORE_ALLOCS::{{constant}}::{{closure}} (6 samples, 0.02%)</title><rect x="55.1501%" y="181" width="0.0189%" height="15" fill="rgb(227,71,41)" fg:x="17546" fg:w="6"/><text x="55.4001%" y="191.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (6 samples, 0.02%)</title><rect x="55.1501%" y="165" width="0.0189%" height="15" fill="rgb(209,184,23)" fg:x="17546" fg:w="6"/><text x="55.4001%" y="175.50"></text></g><g><title>dhat::Globals::get_pp_info (27 samples, 0.08%)</title><rect x="55.0904%" y="437" width="0.0849%" height="15" fill="rgb(223,215,31)" fg:x="17527" fg:w="27"/><text x="55.3404%" y="447.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (27 samples, 0.08%)</title><rect x="55.0904%" y="421" width="0.0849%" height="15" fill="rgb(210,146,28)" fg:x="17527" fg:w="27"/><text x="55.3404%" y="431.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (27 samples, 0.08%)</title><rect x="55.0904%" y="405" width="0.0849%" height="15" fill="rgb(209,183,41)" fg:x="17527" fg:w="27"/><text x="55.3404%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;dhat::Backtrace&gt; (27 samples, 0.08%)</title><rect x="55.0904%" y="389" width="0.0849%" height="15" fill="rgb(209,224,45)" fg:x="17527" fg:w="27"/><text x="55.3404%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;backtrace::capture::Backtrace&gt; (27 samples, 0.08%)</title><rect x="55.0904%" y="373" width="0.0849%" height="15" fill="rgb(224,209,51)" fg:x="17527" fg:w="27"/><text x="55.3404%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;backtrace::capture::BacktraceFrame&gt;&gt; (27 samples, 0.08%)</title><rect x="55.0904%" y="357" width="0.0849%" height="15" fill="rgb(223,17,39)" fg:x="17527" fg:w="27"/><text x="55.3404%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;backtrace::capture::BacktraceFrame&gt;&gt; (8 samples, 0.03%)</title><rect x="55.1501%" y="341" width="0.0251%" height="15" fill="rgb(234,204,37)" fg:x="17546" fg:w="8"/><text x="55.4001%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.03%)</title><rect x="55.1501%" y="325" width="0.0251%" height="15" fill="rgb(236,120,5)" fg:x="17546" fg:w="8"/><text x="55.4001%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (8 samples, 0.03%)</title><rect x="55.1501%" y="309" width="0.0251%" height="15" fill="rgb(248,97,27)" fg:x="17546" fg:w="8"/><text x="55.4001%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.03%)</title><rect x="55.1501%" y="293" width="0.0251%" height="15" fill="rgb(240,66,17)" fg:x="17546" fg:w="8"/><text x="55.4001%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.03%)</title><rect x="55.1501%" y="277" width="0.0251%" height="15" fill="rgb(210,79,3)" fg:x="17546" fg:w="8"/><text x="55.4001%" y="287.50"></text></g><g><title>_Unwind_Find_FDE (9 samples, 0.03%)</title><rect x="55.1752%" y="357" width="0.0283%" height="15" fill="rgb(214,176,27)" fg:x="17554" fg:w="9"/><text x="55.4252%" y="367.50"></text></g><g><title>__GI__dl_find_object (9 samples, 0.03%)</title><rect x="55.1752%" y="341" width="0.0283%" height="15" fill="rgb(235,185,3)" fg:x="17554" fg:w="9"/><text x="55.4252%" y="351.50"></text></g><g><title>_dlfo_lookup (9 samples, 0.03%)</title><rect x="55.1752%" y="325" width="0.0283%" height="15" fill="rgb(227,24,12)" fg:x="17554" fg:w="9"/><text x="55.4252%" y="335.50"></text></g><g><title>&lt;backtrace::backtrace::Frame as core::clone::Clone&gt;::clone (60 samples, 0.19%)</title><rect x="55.3261%" y="309" width="0.1886%" height="15" fill="rgb(252,169,48)" fg:x="17602" fg:w="60"/><text x="55.5761%" y="319.50"></text></g><g><title>&lt;backtrace::backtrace::libunwind::Frame as core::clone::Clone&gt;::clone (60 samples, 0.19%)</title><rect x="55.3261%" y="293" width="0.1886%" height="15" fill="rgb(212,65,1)" fg:x="17602" fg:w="60"/><text x="55.5761%" y="303.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::symbol_address (60 samples, 0.19%)</title><rect x="55.3261%" y="277" width="0.1886%" height="15" fill="rgb(242,39,24)" fg:x="17602" fg:w="60"/><text x="55.5761%" y="287.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::ip (60 samples, 0.19%)</title><rect x="55.3261%" y="261" width="0.1886%" height="15" fill="rgb(249,32,23)" fg:x="17602" fg:w="60"/><text x="55.5761%" y="271.50"></text></g><g><title>dhat::new_backtrace_inner (112 samples, 0.35%)</title><rect x="55.1752%" y="437" width="0.3520%" height="15" fill="rgb(251,195,23)" fg:x="17554" fg:w="112"/><text x="55.4252%" y="447.50"></text></g><g><title>backtrace::backtrace::trace (112 samples, 0.35%)</title><rect x="55.1752%" y="421" width="0.3520%" height="15" fill="rgb(236,174,8)" fg:x="17554" fg:w="112"/><text x="55.4252%" y="431.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (112 samples, 0.35%)</title><rect x="55.1752%" y="405" width="0.3520%" height="15" fill="rgb(220,197,8)" fg:x="17554" fg:w="112"/><text x="55.4252%" y="415.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (112 samples, 0.35%)</title><rect x="55.1752%" y="389" width="0.3520%" height="15" fill="rgb(240,108,37)" fg:x="17554" fg:w="112"/><text x="55.4252%" y="399.50"></text></g><g><title>_Unwind_Backtrace (112 samples, 0.35%)</title><rect x="55.1752%" y="373" width="0.3520%" height="15" fill="rgb(232,176,24)" fg:x="17554" fg:w="112"/><text x="55.4252%" y="383.50"></text></g><g><title>backtrace::backtrace::libunwind::trace::trace_fn (103 samples, 0.32%)</title><rect x="55.2035%" y="357" width="0.3237%" height="15" fill="rgb(243,35,29)" fg:x="17563" fg:w="103"/><text x="55.4535%" y="367.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (103 samples, 0.32%)</title><rect x="55.2035%" y="341" width="0.3237%" height="15" fill="rgb(210,37,18)" fg:x="17563" fg:w="103"/><text x="55.4535%" y="351.50"></text></g><g><title>dhat::new_backtrace_inner::{{closure}} (88 samples, 0.28%)</title><rect x="55.2507%" y="325" width="0.2766%" height="15" fill="rgb(224,184,40)" fg:x="17578" fg:w="88"/><text x="55.5007%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.01%)</title><rect x="55.5147%" y="309" width="0.0126%" height="15" fill="rgb(236,39,29)" fg:x="17662" fg:w="4"/><text x="55.7647%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (4 samples, 0.01%)</title><rect x="55.5147%" y="293" width="0.0126%" height="15" fill="rgb(232,48,39)" fg:x="17662" fg:w="4"/><text x="55.7647%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (4 samples, 0.01%)</title><rect x="55.5147%" y="277" width="0.0126%" height="15" fill="rgb(236,34,42)" fg:x="17662" fg:w="4"/><text x="55.7647%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (4 samples, 0.01%)</title><rect x="55.5147%" y="261" width="0.0126%" height="15" fill="rgb(243,106,37)" fg:x="17662" fg:w="4"/><text x="55.7647%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.01%)</title><rect x="55.5147%" y="245" width="0.0126%" height="15" fill="rgb(218,96,6)" fg:x="17662" fg:w="4"/><text x="55.7647%" y="255.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (4 samples, 0.01%)</title><rect x="55.5147%" y="229" width="0.0126%" height="15" fill="rgb(235,130,12)" fg:x="17662" fg:w="4"/><text x="55.7647%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (180 samples, 0.57%)</title><rect x="54.9804%" y="725" width="0.5658%" height="15" fill="rgb(231,95,0)" fg:x="17492" fg:w="180"/><text x="55.2304%" y="735.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (180 samples, 0.57%)</title><rect x="54.9804%" y="709" width="0.5658%" height="15" fill="rgb(228,12,23)" fg:x="17492" fg:w="180"/><text x="55.2304%" y="719.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (180 samples, 0.57%)</title><rect x="54.9804%" y="693" width="0.5658%" height="15" fill="rgb(216,12,1)" fg:x="17492" fg:w="180"/><text x="55.2304%" y="703.50"></text></g><g><title>&lt;briolette_sim::simulator::Simulator as absim::Simulation&gt;::apply::{{closure}} (180 samples, 0.57%)</title><rect x="54.9804%" y="677" width="0.5658%" height="15" fill="rgb(219,59,3)" fg:x="17492" fg:w="180"/><text x="55.2304%" y="687.50"></text></g><g><title>&lt;briolette_sim::Coin as core::clone::Clone&gt;::clone (145 samples, 0.46%)</title><rect x="55.0904%" y="661" width="0.4558%" height="15" fill="rgb(215,208,46)" fg:x="17527" fg:w="145"/><text x="55.3404%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (145 samples, 0.46%)</title><rect x="55.0904%" y="645" width="0.4558%" height="15" fill="rgb(254,224,29)" fg:x="17527" fg:w="145"/><text x="55.3404%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (145 samples, 0.46%)</title><rect x="55.0904%" y="629" width="0.4558%" height="15" fill="rgb(232,14,29)" fg:x="17527" fg:w="145"/><text x="55.3404%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (145 samples, 0.46%)</title><rect x="55.0904%" y="613" width="0.4558%" height="15" fill="rgb(208,45,52)" fg:x="17527" fg:w="145"/><text x="55.3404%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (145 samples, 0.46%)</title><rect x="55.0904%" y="597" width="0.4558%" height="15" fill="rgb(234,191,28)" fg:x="17527" fg:w="145"/><text x="55.3404%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (145 samples, 0.46%)</title><rect x="55.0904%" y="581" width="0.4558%" height="15" fill="rgb(244,67,43)" fg:x="17527" fg:w="145"/><text x="55.3404%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (145 samples, 0.46%)</title><rect x="55.0904%" y="565" width="0.4558%" height="15" fill="rgb(236,189,24)" fg:x="17527" fg:w="145"/><text x="55.3404%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (145 samples, 0.46%)</title><rect x="55.0904%" y="549" width="0.4558%" height="15" fill="rgb(239,214,33)" fg:x="17527" fg:w="145"/><text x="55.3404%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (145 samples, 0.46%)</title><rect x="55.0904%" y="533" width="0.4558%" height="15" fill="rgb(226,176,41)" fg:x="17527" fg:w="145"/><text x="55.3404%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (145 samples, 0.46%)</title><rect x="55.0904%" y="517" width="0.4558%" height="15" fill="rgb(248,47,8)" fg:x="17527" fg:w="145"/><text x="55.3404%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (145 samples, 0.46%)</title><rect x="55.0904%" y="501" width="0.4558%" height="15" fill="rgb(218,81,44)" fg:x="17527" fg:w="145"/><text x="55.3404%" y="511.50"></text></g><g><title>alloc::alloc::alloc (145 samples, 0.46%)</title><rect x="55.0904%" y="485" width="0.4558%" height="15" fill="rgb(213,98,6)" fg:x="17527" fg:w="145"/><text x="55.3404%" y="495.50"></text></g><g><title>__rust_alloc (145 samples, 0.46%)</title><rect x="55.0904%" y="469" width="0.4558%" height="15" fill="rgb(222,85,22)" fg:x="17527" fg:w="145"/><text x="55.3404%" y="479.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (145 samples, 0.46%)</title><rect x="55.0904%" y="453" width="0.4558%" height="15" fill="rgb(239,46,39)" fg:x="17527" fg:w="145"/><text x="55.3404%" y="463.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (6 samples, 0.02%)</title><rect x="55.5273%" y="437" width="0.0189%" height="15" fill="rgb(237,12,29)" fg:x="17666" fg:w="6"/><text x="55.7773%" y="447.50"></text></g><g><title>std::sys::pal::unix::cvt (6 samples, 0.02%)</title><rect x="55.5273%" y="421" width="0.0189%" height="15" fill="rgb(214,77,8)" fg:x="17666" fg:w="6"/><text x="55.7773%" y="431.50"></text></g><g><title>&lt;i32 as std::sys::pal::unix::IsMinusOne&gt;::is_minus_one (6 samples, 0.02%)</title><rect x="55.5273%" y="405" width="0.0189%" height="15" fill="rgb(217,168,37)" fg:x="17666" fg:w="6"/><text x="55.7773%" y="415.50"></text></g><g><title>dhat::Globals::get_pp_info (6 samples, 0.02%)</title><rect x="55.5461%" y="565" width="0.0189%" height="15" fill="rgb(221,217,23)" fg:x="17672" fg:w="6"/><text x="55.7961%" y="575.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (6 samples, 0.02%)</title><rect x="55.5461%" y="549" width="0.0189%" height="15" fill="rgb(243,229,36)" fg:x="17672" fg:w="6"/><text x="55.7961%" y="559.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (6 samples, 0.02%)</title><rect x="55.5461%" y="533" width="0.0189%" height="15" fill="rgb(251,163,40)" fg:x="17672" fg:w="6"/><text x="55.7961%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.02%)</title><rect x="55.5493%" y="517" width="0.0157%" height="15" fill="rgb(237,222,12)" fg:x="17673" fg:w="5"/><text x="55.7993%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (5 samples, 0.02%)</title><rect x="55.5493%" y="501" width="0.0157%" height="15" fill="rgb(248,132,6)" fg:x="17673" fg:w="5"/><text x="55.7993%" y="511.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (4 samples, 0.01%)</title><rect x="55.5524%" y="485" width="0.0126%" height="15" fill="rgb(227,167,50)" fg:x="17674" fg:w="4"/><text x="55.8024%" y="495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (4 samples, 0.01%)</title><rect x="55.5524%" y="469" width="0.0126%" height="15" fill="rgb(242,84,37)" fg:x="17674" fg:w="4"/><text x="55.8024%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.01%)</title><rect x="55.5524%" y="453" width="0.0126%" height="15" fill="rgb(212,4,50)" fg:x="17674" fg:w="4"/><text x="55.8024%" y="463.50"></text></g><g><title>_Unwind_Find_FDE (4 samples, 0.01%)</title><rect x="55.5776%" y="485" width="0.0126%" height="15" fill="rgb(230,228,32)" fg:x="17682" fg:w="4"/><text x="55.8276%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (12 samples, 0.04%)</title><rect x="55.6027%" y="437" width="0.0377%" height="15" fill="rgb(248,217,23)" fg:x="17690" fg:w="12"/><text x="55.8527%" y="447.50"></text></g><g><title>core::ptr::write (8 samples, 0.03%)</title><rect x="55.6153%" y="421" width="0.0251%" height="15" fill="rgb(238,197,32)" fg:x="17694" fg:w="8"/><text x="55.8653%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,371 samples, 4.31%)</title><rect x="51.3343%" y="789" width="4.3093%" height="15" fill="rgb(236,106,1)" fg:x="16332" fg:w="1371"/><text x="51.5843%" y="799.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,371 samples, 4.31%)</title><rect x="51.3343%" y="773" width="4.3093%" height="15" fill="rgb(219,228,13)" fg:x="16332" fg:w="1371"/><text x="51.5843%" y="783.50">&lt;allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,371 samples, 4.31%)</title><rect x="51.3343%" y="757" width="4.3093%" height="15" fill="rgb(238,30,35)" fg:x="16332" fg:w="1371"/><text x="51.5843%" y="767.50">&lt;allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,371 samples, 4.31%)</title><rect x="51.3343%" y="741" width="4.3093%" height="15" fill="rgb(236,70,23)" fg:x="16332" fg:w="1371"/><text x="51.5843%" y="751.50">&lt;allo..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (31 samples, 0.10%)</title><rect x="55.5461%" y="725" width="0.0974%" height="15" fill="rgb(249,104,48)" fg:x="17672" fg:w="31"/><text x="55.7961%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (31 samples, 0.10%)</title><rect x="55.5461%" y="709" width="0.0974%" height="15" fill="rgb(254,117,50)" fg:x="17672" fg:w="31"/><text x="55.7961%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (31 samples, 0.10%)</title><rect x="55.5461%" y="693" width="0.0974%" height="15" fill="rgb(223,152,4)" fg:x="17672" fg:w="31"/><text x="55.7961%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (31 samples, 0.10%)</title><rect x="55.5461%" y="677" width="0.0974%" height="15" fill="rgb(245,6,2)" fg:x="17672" fg:w="31"/><text x="55.7961%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (31 samples, 0.10%)</title><rect x="55.5461%" y="661" width="0.0974%" height="15" fill="rgb(249,150,24)" fg:x="17672" fg:w="31"/><text x="55.7961%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (31 samples, 0.10%)</title><rect x="55.5461%" y="645" width="0.0974%" height="15" fill="rgb(228,185,42)" fg:x="17672" fg:w="31"/><text x="55.7961%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (31 samples, 0.10%)</title><rect x="55.5461%" y="629" width="0.0974%" height="15" fill="rgb(226,39,33)" fg:x="17672" fg:w="31"/><text x="55.7961%" y="639.50"></text></g><g><title>alloc::alloc::alloc (31 samples, 0.10%)</title><rect x="55.5461%" y="613" width="0.0974%" height="15" fill="rgb(221,166,19)" fg:x="17672" fg:w="31"/><text x="55.7961%" y="623.50"></text></g><g><title>__rust_alloc (31 samples, 0.10%)</title><rect x="55.5461%" y="597" width="0.0974%" height="15" fill="rgb(209,109,2)" fg:x="17672" fg:w="31"/><text x="55.7961%" y="607.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (31 samples, 0.10%)</title><rect x="55.5461%" y="581" width="0.0974%" height="15" fill="rgb(252,216,26)" fg:x="17672" fg:w="31"/><text x="55.7961%" y="591.50"></text></g><g><title>dhat::new_backtrace_inner (23 samples, 0.07%)</title><rect x="55.5713%" y="565" width="0.0723%" height="15" fill="rgb(227,173,36)" fg:x="17680" fg:w="23"/><text x="55.8213%" y="575.50"></text></g><g><title>backtrace::backtrace::trace (22 samples, 0.07%)</title><rect x="55.5744%" y="549" width="0.0691%" height="15" fill="rgb(209,90,7)" fg:x="17681" fg:w="22"/><text x="55.8244%" y="559.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (21 samples, 0.07%)</title><rect x="55.5776%" y="533" width="0.0660%" height="15" fill="rgb(250,194,11)" fg:x="17682" fg:w="21"/><text x="55.8276%" y="543.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (21 samples, 0.07%)</title><rect x="55.5776%" y="517" width="0.0660%" height="15" fill="rgb(220,72,50)" fg:x="17682" fg:w="21"/><text x="55.8276%" y="527.50"></text></g><g><title>_Unwind_Backtrace (21 samples, 0.07%)</title><rect x="55.5776%" y="501" width="0.0660%" height="15" fill="rgb(222,106,48)" fg:x="17682" fg:w="21"/><text x="55.8276%" y="511.50"></text></g><g><title>backtrace::backtrace::libunwind::trace::trace_fn (17 samples, 0.05%)</title><rect x="55.5901%" y="485" width="0.0534%" height="15" fill="rgb(216,220,45)" fg:x="17686" fg:w="17"/><text x="55.8401%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (17 samples, 0.05%)</title><rect x="55.5901%" y="469" width="0.0534%" height="15" fill="rgb(234,112,18)" fg:x="17686" fg:w="17"/><text x="55.8401%" y="479.50"></text></g><g><title>dhat::new_backtrace_inner::{{closure}} (16 samples, 0.05%)</title><rect x="55.5933%" y="453" width="0.0503%" height="15" fill="rgb(206,179,9)" fg:x="17687" fg:w="16"/><text x="55.8433%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;briolette_sim::Coin&gt; (14 samples, 0.04%)</title><rect x="55.6436%" y="789" width="0.0440%" height="15" fill="rgb(215,115,40)" fg:x="17703" fg:w="14"/><text x="55.8936%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (14 samples, 0.04%)</title><rect x="55.6436%" y="773" width="0.0440%" height="15" fill="rgb(222,69,34)" fg:x="17703" fg:w="14"/><text x="55.8936%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (14 samples, 0.04%)</title><rect x="55.6436%" y="757" width="0.0440%" height="15" fill="rgb(209,161,10)" fg:x="17703" fg:w="14"/><text x="55.8936%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.04%)</title><rect x="55.6436%" y="741" width="0.0440%" height="15" fill="rgb(217,6,38)" fg:x="17703" fg:w="14"/><text x="55.8936%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (14 samples, 0.04%)</title><rect x="55.6436%" y="725" width="0.0440%" height="15" fill="rgb(229,229,48)" fg:x="17703" fg:w="14"/><text x="55.8936%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.04%)</title><rect x="55.6436%" y="709" width="0.0440%" height="15" fill="rgb(225,21,28)" fg:x="17703" fg:w="14"/><text x="55.8936%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.04%)</title><rect x="55.6436%" y="693" width="0.0440%" height="15" fill="rgb(206,33,13)" fg:x="17703" fg:w="14"/><text x="55.8936%" y="703.50"></text></g><g><title>__rust_dealloc (14 samples, 0.04%)</title><rect x="55.6436%" y="677" width="0.0440%" height="15" fill="rgb(242,178,17)" fg:x="17703" fg:w="14"/><text x="55.8936%" y="687.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::dealloc (14 samples, 0.04%)</title><rect x="55.6436%" y="661" width="0.0440%" height="15" fill="rgb(220,162,5)" fg:x="17703" fg:w="14"/><text x="55.8936%" y="671.50"></text></g><g><title>std::time::Instant::elapsed (10 samples, 0.03%)</title><rect x="55.6561%" y="645" width="0.0314%" height="15" fill="rgb(210,33,43)" fg:x="17707" fg:w="10"/><text x="55.9061%" y="655.50"></text></g><g><title>std::time::Instant::now (10 samples, 0.03%)</title><rect x="55.6561%" y="629" width="0.0314%" height="15" fill="rgb(216,116,54)" fg:x="17707" fg:w="10"/><text x="55.9061%" y="639.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (10 samples, 0.03%)</title><rect x="55.6561%" y="613" width="0.0314%" height="15" fill="rgb(249,92,24)" fg:x="17707" fg:w="10"/><text x="55.9061%" y="623.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (7 samples, 0.02%)</title><rect x="55.6656%" y="597" width="0.0220%" height="15" fill="rgb(231,189,14)" fg:x="17710" fg:w="7"/><text x="55.9156%" y="607.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (7 samples, 0.02%)</title><rect x="55.6656%" y="581" width="0.0220%" height="15" fill="rgb(230,8,41)" fg:x="17710" fg:w="7"/><text x="55.9156%" y="591.50"></text></g><g><title>dhat::Globals::check_for_global_peak (19 samples, 0.06%)</title><rect x="55.6907%" y="565" width="0.0597%" height="15" fill="rgb(249,7,27)" fg:x="17718" fg:w="19"/><text x="55.9407%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;absim::graph_utils::Vertex&gt;&gt; (32 samples, 0.10%)</title><rect x="55.6876%" y="757" width="0.1006%" height="15" fill="rgb(232,86,5)" fg:x="17717" fg:w="32"/><text x="55.9376%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.10%)</title><rect x="55.6876%" y="741" width="0.1006%" height="15" fill="rgb(224,175,18)" fg:x="17717" fg:w="32"/><text x="55.9376%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;[absim::graph_utils::Vertex]&gt; (32 samples, 0.10%)</title><rect x="55.6876%" y="725" width="0.1006%" height="15" fill="rgb(220,129,12)" fg:x="17717" fg:w="32"/><text x="55.9376%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;absim::graph_utils::Vertex&gt; (32 samples, 0.10%)</title><rect x="55.6876%" y="709" width="0.1006%" height="15" fill="rgb(210,19,36)" fg:x="17717" fg:w="32"/><text x="55.9376%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (32 samples, 0.10%)</title><rect x="55.6876%" y="693" width="0.1006%" height="15" fill="rgb(219,96,14)" fg:x="17717" fg:w="32"/><text x="55.9376%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (32 samples, 0.10%)</title><rect x="55.6876%" y="677" width="0.1006%" height="15" fill="rgb(249,106,1)" fg:x="17717" fg:w="32"/><text x="55.9376%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.10%)</title><rect x="55.6876%" y="661" width="0.1006%" height="15" fill="rgb(249,155,20)" fg:x="17717" fg:w="32"/><text x="55.9376%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (32 samples, 0.10%)</title><rect x="55.6876%" y="645" width="0.1006%" height="15" fill="rgb(244,168,9)" fg:x="17717" fg:w="32"/><text x="55.9376%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (32 samples, 0.10%)</title><rect x="55.6876%" y="629" width="0.1006%" height="15" fill="rgb(216,23,50)" fg:x="17717" fg:w="32"/><text x="55.9376%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (32 samples, 0.10%)</title><rect x="55.6876%" y="613" width="0.1006%" height="15" fill="rgb(224,219,20)" fg:x="17717" fg:w="32"/><text x="55.9376%" y="623.50"></text></g><g><title>__rust_dealloc (32 samples, 0.10%)</title><rect x="55.6876%" y="597" width="0.1006%" height="15" fill="rgb(222,156,15)" fg:x="17717" fg:w="32"/><text x="55.9376%" y="607.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::dealloc (31 samples, 0.10%)</title><rect x="55.6907%" y="581" width="0.0974%" height="15" fill="rgb(231,97,17)" fg:x="17718" fg:w="31"/><text x="55.9407%" y="591.50"></text></g><g><title>std::time::Instant::elapsed (12 samples, 0.04%)</title><rect x="55.7504%" y="565" width="0.0377%" height="15" fill="rgb(218,70,48)" fg:x="17737" fg:w="12"/><text x="56.0004%" y="575.50"></text></g><g><title>std::time::Instant::now (9 samples, 0.03%)</title><rect x="55.7599%" y="549" width="0.0283%" height="15" fill="rgb(212,196,52)" fg:x="17740" fg:w="9"/><text x="56.0099%" y="559.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (9 samples, 0.03%)</title><rect x="55.7599%" y="533" width="0.0283%" height="15" fill="rgb(243,203,18)" fg:x="17740" fg:w="9"/><text x="56.0099%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;briolette_sim::ViewData&gt; (107 samples, 0.34%)</title><rect x="55.6876%" y="789" width="0.3363%" height="15" fill="rgb(252,125,41)" fg:x="17717" fg:w="107"/><text x="55.9376%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;absim::graph_utils::SimulationGraph&gt; (107 samples, 0.34%)</title><rect x="55.6876%" y="773" width="0.3363%" height="15" fill="rgb(223,180,33)" fg:x="17717" fg:w="107"/><text x="55.9376%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;usize&gt;&gt;&gt; (75 samples, 0.24%)</title><rect x="55.7882%" y="757" width="0.2357%" height="15" fill="rgb(254,159,46)" fg:x="17749" fg:w="75"/><text x="56.0382%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (75 samples, 0.24%)</title><rect x="55.7882%" y="741" width="0.2357%" height="15" fill="rgb(254,38,10)" fg:x="17749" fg:w="75"/><text x="56.0382%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;usize&gt;]&gt; (75 samples, 0.24%)</title><rect x="55.7882%" y="725" width="0.2357%" height="15" fill="rgb(208,217,32)" fg:x="17749" fg:w="75"/><text x="56.0382%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (75 samples, 0.24%)</title><rect x="55.7882%" y="709" width="0.2357%" height="15" fill="rgb(221,120,13)" fg:x="17749" fg:w="75"/><text x="56.0382%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (75 samples, 0.24%)</title><rect x="55.7882%" y="693" width="0.2357%" height="15" fill="rgb(246,54,52)" fg:x="17749" fg:w="75"/><text x="56.0382%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (75 samples, 0.24%)</title><rect x="55.7882%" y="677" width="0.2357%" height="15" fill="rgb(242,34,25)" fg:x="17749" fg:w="75"/><text x="56.0382%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (75 samples, 0.24%)</title><rect x="55.7882%" y="661" width="0.2357%" height="15" fill="rgb(247,209,9)" fg:x="17749" fg:w="75"/><text x="56.0382%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (75 samples, 0.24%)</title><rect x="55.7882%" y="645" width="0.2357%" height="15" fill="rgb(228,71,26)" fg:x="17749" fg:w="75"/><text x="56.0382%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (75 samples, 0.24%)</title><rect x="55.7882%" y="629" width="0.2357%" height="15" fill="rgb(222,145,49)" fg:x="17749" fg:w="75"/><text x="56.0382%" y="639.50"></text></g><g><title>__rust_dealloc (75 samples, 0.24%)</title><rect x="55.7882%" y="613" width="0.2357%" height="15" fill="rgb(218,121,17)" fg:x="17749" fg:w="75"/><text x="56.0382%" y="623.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::dealloc (75 samples, 0.24%)</title><rect x="55.7882%" y="597" width="0.2357%" height="15" fill="rgb(244,50,7)" fg:x="17749" fg:w="75"/><text x="56.0382%" y="607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (75 samples, 0.24%)</title><rect x="55.7882%" y="581" width="0.2357%" height="15" fill="rgb(246,229,37)" fg:x="17749" fg:w="75"/><text x="56.0382%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (75 samples, 0.24%)</title><rect x="55.7882%" y="565" width="0.2357%" height="15" fill="rgb(225,18,5)" fg:x="17749" fg:w="75"/><text x="56.0382%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (75 samples, 0.24%)</title><rect x="55.7882%" y="549" width="0.2357%" height="15" fill="rgb(213,204,8)" fg:x="17749" fg:w="75"/><text x="56.0382%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (75 samples, 0.24%)</title><rect x="55.7882%" y="533" width="0.2357%" height="15" fill="rgb(238,103,6)" fg:x="17749" fg:w="75"/><text x="56.0382%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (75 samples, 0.24%)</title><rect x="55.7882%" y="517" width="0.2357%" height="15" fill="rgb(222,25,35)" fg:x="17749" fg:w="75"/><text x="56.0382%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (75 samples, 0.24%)</title><rect x="55.7882%" y="501" width="0.2357%" height="15" fill="rgb(213,203,35)" fg:x="17749" fg:w="75"/><text x="56.0382%" y="511.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (75 samples, 0.24%)</title><rect x="55.7882%" y="485" width="0.2357%" height="15" fill="rgb(221,79,53)" fg:x="17749" fg:w="75"/><text x="56.0382%" y="495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (75 samples, 0.24%)</title><rect x="55.7882%" y="469" width="0.2357%" height="15" fill="rgb(243,200,35)" fg:x="17749" fg:w="75"/><text x="56.0382%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (75 samples, 0.24%)</title><rect x="55.7882%" y="453" width="0.2357%" height="15" fill="rgb(248,60,25)" fg:x="17749" fg:w="75"/><text x="56.0382%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (881 samples, 2.77%)</title><rect x="56.2188%" y="629" width="2.7691%" height="15" fill="rgb(227,53,46)" fg:x="17886" fg:w="881"/><text x="56.4688%" y="639.50">st..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (881 samples, 2.77%)</title><rect x="56.2188%" y="613" width="2.7691%" height="15" fill="rgb(216,120,32)" fg:x="17886" fg:w="881"/><text x="56.4688%" y="623.50">ha..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (881 samples, 2.77%)</title><rect x="56.2188%" y="597" width="2.7691%" height="15" fill="rgb(220,134,1)" fg:x="17886" fg:w="881"/><text x="56.4688%" y="607.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (881 samples, 2.77%)</title><rect x="56.2188%" y="581" width="2.7691%" height="15" fill="rgb(237,168,5)" fg:x="17886" fg:w="881"/><text x="56.4688%" y="591.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (881 samples, 2.77%)</title><rect x="56.2188%" y="565" width="2.7691%" height="15" fill="rgb(231,100,33)" fg:x="17886" fg:w="881"/><text x="56.4688%" y="575.50">ha..</text></g><g><title>hashbrown::raw::RawTableInner::find_inner (881 samples, 2.77%)</title><rect x="56.2188%" y="549" width="2.7691%" height="15" fill="rgb(236,177,47)" fg:x="17886" fg:w="881"/><text x="56.4688%" y="559.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (881 samples, 2.77%)</title><rect x="56.2188%" y="533" width="2.7691%" height="15" fill="rgb(235,7,49)" fg:x="17886" fg:w="881"/><text x="56.4688%" y="543.50">ha..</text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (881 samples, 2.77%)</title><rect x="56.2188%" y="517" width="2.7691%" height="15" fill="rgb(232,119,22)" fg:x="17886" fg:w="881"/><text x="56.4688%" y="527.50">ha..</text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (881 samples, 2.77%)</title><rect x="56.2188%" y="501" width="2.7691%" height="15" fill="rgb(254,73,53)" fg:x="17886" fg:w="881"/><text x="56.4688%" y="511.50">&lt;Q..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (881 samples, 2.77%)</title><rect x="56.2188%" y="485" width="2.7691%" height="15" fill="rgb(251,35,20)" fg:x="17886" fg:w="881"/><text x="56.4688%" y="495.50">co..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (881 samples, 2.77%)</title><rect x="56.2188%" y="469" width="2.7691%" height="15" fill="rgb(241,119,20)" fg:x="17886" fg:w="881"/><text x="56.4688%" y="479.50">co..</text></g><g><title>&lt;briolette_sim::simulator::Simulator as absim::Simulation&gt;::apply (6,854 samples, 21.54%)</title><rect x="37.5829%" y="805" width="21.5433%" height="15" fill="rgb(207,102,14)" fg:x="11957" fg:w="6854"/><text x="37.8329%" y="815.50">&lt;briolette_sim::simulator::Simulat..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;briolette_sim::Coin&gt;&gt; (987 samples, 3.10%)</title><rect x="56.0239%" y="789" width="3.1023%" height="15" fill="rgb(248,201,50)" fg:x="17824" fg:w="987"/><text x="56.2739%" y="799.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;briolette_sim::Coin&gt; (987 samples, 3.10%)</title><rect x="56.0239%" y="773" width="3.1023%" height="15" fill="rgb(222,185,44)" fg:x="17824" fg:w="987"/><text x="56.2739%" y="783.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (987 samples, 3.10%)</title><rect x="56.0239%" y="757" width="3.1023%" height="15" fill="rgb(218,107,18)" fg:x="17824" fg:w="987"/><text x="56.2739%" y="767.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (987 samples, 3.10%)</title><rect x="56.0239%" y="741" width="3.1023%" height="15" fill="rgb(237,177,39)" fg:x="17824" fg:w="987"/><text x="56.2739%" y="751.50">cor..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (987 samples, 3.10%)</title><rect x="56.0239%" y="725" width="3.1023%" height="15" fill="rgb(246,69,6)" fg:x="17824" fg:w="987"/><text x="56.2739%" y="735.50">&lt;al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (987 samples, 3.10%)</title><rect x="56.0239%" y="709" width="3.1023%" height="15" fill="rgb(234,208,37)" fg:x="17824" fg:w="987"/><text x="56.2739%" y="719.50">all..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (987 samples, 3.10%)</title><rect x="56.0239%" y="693" width="3.1023%" height="15" fill="rgb(225,4,6)" fg:x="17824" fg:w="987"/><text x="56.2739%" y="703.50">&lt;al..</text></g><g><title>alloc::alloc::dealloc (987 samples, 3.10%)</title><rect x="56.0239%" y="677" width="3.1023%" height="15" fill="rgb(233,45,0)" fg:x="17824" fg:w="987"/><text x="56.2739%" y="687.50">all..</text></g><g><title>__rust_dealloc (987 samples, 3.10%)</title><rect x="56.0239%" y="661" width="3.1023%" height="15" fill="rgb(226,136,5)" fg:x="17824" fg:w="987"/><text x="56.2739%" y="671.50">__r..</text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::dealloc (987 samples, 3.10%)</title><rect x="56.0239%" y="645" width="3.1023%" height="15" fill="rgb(211,91,47)" fg:x="17824" fg:w="987"/><text x="56.2739%" y="655.50">&lt;dh..</text></g><g><title>std::time::Instant::elapsed (44 samples, 0.14%)</title><rect x="58.9879%" y="629" width="0.1383%" height="15" fill="rgb(242,88,51)" fg:x="18767" fg:w="44"/><text x="59.2379%" y="639.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (19 samples, 0.06%)</title><rect x="59.0665%" y="613" width="0.0597%" height="15" fill="rgb(230,91,28)" fg:x="18792" fg:w="19"/><text x="59.3165%" y="623.50"></text></g><g><title>std::time::Instant::duration_since (19 samples, 0.06%)</title><rect x="59.0665%" y="597" width="0.0597%" height="15" fill="rgb(254,186,29)" fg:x="18792" fg:w="19"/><text x="59.3165%" y="607.50"></text></g><g><title>std::time::Instant::checked_duration_since (19 samples, 0.06%)</title><rect x="59.0665%" y="581" width="0.0597%" height="15" fill="rgb(238,6,4)" fg:x="18792" fg:w="19"/><text x="59.3165%" y="591.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (19 samples, 0.06%)</title><rect x="59.0665%" y="565" width="0.0597%" height="15" fill="rgb(221,151,16)" fg:x="18792" fg:w="19"/><text x="59.3165%" y="575.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (19 samples, 0.06%)</title><rect x="59.0665%" y="549" width="0.0597%" height="15" fill="rgb(251,143,52)" fg:x="18792" fg:w="19"/><text x="59.3165%" y="559.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert_with (14 samples, 0.04%)</title><rect x="59.3022%" y="453" width="0.0440%" height="15" fill="rgb(206,90,15)" fg:x="18867" fg:w="14"/><text x="59.5522%" y="463.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (14 samples, 0.04%)</title><rect x="59.3022%" y="437" width="0.0440%" height="15" fill="rgb(218,35,8)" fg:x="18867" fg:w="14"/><text x="59.5522%" y="447.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (14 samples, 0.04%)</title><rect x="59.3022%" y="421" width="0.0440%" height="15" fill="rgb(239,215,6)" fg:x="18867" fg:w="14"/><text x="59.5522%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (14 samples, 0.04%)</title><rect x="59.3022%" y="405" width="0.0440%" height="15" fill="rgb(245,116,39)" fg:x="18867" fg:w="14"/><text x="59.5522%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.12%)</title><rect x="59.3462%" y="373" width="0.1226%" height="15" fill="rgb(242,65,28)" fg:x="18881" fg:w="39"/><text x="59.5962%" y="383.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::dealloc (18 samples, 0.06%)</title><rect x="59.4688%" y="293" width="0.0566%" height="15" fill="rgb(252,132,53)" fg:x="18920" fg:w="18"/><text x="59.7188%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;dhat::Backtrace&gt; (64 samples, 0.20%)</title><rect x="59.3462%" y="421" width="0.2012%" height="15" fill="rgb(224,159,50)" fg:x="18881" fg:w="64"/><text x="59.5962%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;backtrace::capture::Backtrace&gt; (64 samples, 0.20%)</title><rect x="59.3462%" y="405" width="0.2012%" height="15" fill="rgb(224,93,4)" fg:x="18881" fg:w="64"/><text x="59.5962%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;backtrace::capture::BacktraceFrame&gt;&gt; (64 samples, 0.20%)</title><rect x="59.3462%" y="389" width="0.2012%" height="15" fill="rgb(208,81,34)" fg:x="18881" fg:w="64"/><text x="59.5962%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;backtrace::capture::BacktraceFrame&gt;&gt; (25 samples, 0.08%)</title><rect x="59.4688%" y="373" width="0.0786%" height="15" fill="rgb(233,92,54)" fg:x="18920" fg:w="25"/><text x="59.7188%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.08%)</title><rect x="59.4688%" y="357" width="0.0786%" height="15" fill="rgb(237,21,14)" fg:x="18920" fg:w="25"/><text x="59.7188%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (25 samples, 0.08%)</title><rect x="59.4688%" y="341" width="0.0786%" height="15" fill="rgb(249,128,51)" fg:x="18920" fg:w="25"/><text x="59.7188%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (25 samples, 0.08%)</title><rect x="59.4688%" y="325" width="0.0786%" height="15" fill="rgb(223,129,24)" fg:x="18920" fg:w="25"/><text x="59.7188%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (25 samples, 0.08%)</title><rect x="59.4688%" y="309" width="0.0786%" height="15" fill="rgb(231,168,25)" fg:x="18920" fg:w="25"/><text x="59.7188%" y="319.50"></text></g><g><title>__rust_dealloc (4 samples, 0.01%)</title><rect x="59.5348%" y="293" width="0.0126%" height="15" fill="rgb(224,39,20)" fg:x="18941" fg:w="4"/><text x="59.7848%" y="303.50"></text></g><g><title>dhat::Globals::get_pp_info (330 samples, 1.04%)</title><rect x="59.3022%" y="469" width="1.0372%" height="15" fill="rgb(225,152,53)" fg:x="18867" fg:w="330"/><text x="59.5522%" y="479.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (316 samples, 0.99%)</title><rect x="59.3462%" y="453" width="0.9932%" height="15" fill="rgb(252,17,24)" fg:x="18881" fg:w="316"/><text x="59.5962%" y="463.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (316 samples, 0.99%)</title><rect x="59.3462%" y="437" width="0.9932%" height="15" fill="rgb(250,114,30)" fg:x="18881" fg:w="316"/><text x="59.5962%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (252 samples, 0.79%)</title><rect x="59.5474%" y="421" width="0.7921%" height="15" fill="rgb(229,5,4)" fg:x="18945" fg:w="252"/><text x="59.7974%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (252 samples, 0.79%)</title><rect x="59.5474%" y="405" width="0.7921%" height="15" fill="rgb(225,176,49)" fg:x="18945" fg:w="252"/><text x="59.7974%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (252 samples, 0.79%)</title><rect x="59.5474%" y="389" width="0.7921%" height="15" fill="rgb(224,221,49)" fg:x="18945" fg:w="252"/><text x="59.7974%" y="399.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (252 samples, 0.79%)</title><rect x="59.5474%" y="373" width="0.7921%" height="15" fill="rgb(253,169,27)" fg:x="18945" fg:w="252"/><text x="59.7974%" y="383.50"></text></g><g><title>&lt;dhat::Backtrace as core::cmp::PartialEq&gt;::eq (252 samples, 0.79%)</title><rect x="59.5474%" y="357" width="0.7921%" height="15" fill="rgb(211,206,16)" fg:x="18945" fg:w="252"/><text x="59.7974%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (252 samples, 0.79%)</title><rect x="59.5474%" y="341" width="0.7921%" height="15" fill="rgb(244,87,35)" fg:x="18945" fg:w="252"/><text x="59.7974%" y="351.50"></text></g><g><title>&lt;dhat::Backtrace as core::cmp::PartialEq&gt;::eq::{{closure}} (252 samples, 0.79%)</title><rect x="59.5474%" y="325" width="0.7921%" height="15" fill="rgb(246,28,10)" fg:x="18945" fg:w="252"/><text x="59.7974%" y="335.50"></text></g><g><title>backtrace::capture::BacktraceFrame::ip (50 samples, 0.16%)</title><rect x="60.1823%" y="309" width="0.1572%" height="15" fill="rgb(229,12,44)" fg:x="19147" fg:w="50"/><text x="60.4323%" y="319.50"></text></g><g><title>backtrace::capture::Frame::ip (50 samples, 0.16%)</title><rect x="60.1823%" y="293" width="0.1572%" height="15" fill="rgb(210,145,37)" fg:x="19147" fg:w="50"/><text x="60.4323%" y="303.50"></text></g><g><title>backtrace::backtrace::Frame::ip (50 samples, 0.16%)</title><rect x="60.1823%" y="277" width="0.1572%" height="15" fill="rgb(227,112,52)" fg:x="19147" fg:w="50"/><text x="60.4323%" y="287.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::ip (50 samples, 0.16%)</title><rect x="60.1823%" y="261" width="0.1572%" height="15" fill="rgb(238,155,34)" fg:x="19147" fg:w="50"/><text x="60.4323%" y="271.50"></text></g><g><title>dhat::Globals::record_block (379 samples, 1.19%)</title><rect x="60.3395%" y="469" width="1.1913%" height="15" fill="rgb(239,226,36)" fg:x="19197" fg:w="379"/><text x="60.5895%" y="479.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (379 samples, 1.19%)</title><rect x="60.3395%" y="453" width="1.1913%" height="15" fill="rgb(230,16,23)" fg:x="19197" fg:w="379"/><text x="60.5895%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (379 samples, 1.19%)</title><rect x="60.3395%" y="437" width="1.1913%" height="15" fill="rgb(236,171,36)" fg:x="19197" fg:w="379"/><text x="60.5895%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (379 samples, 1.19%)</title><rect x="60.3395%" y="421" width="1.1913%" height="15" fill="rgb(221,22,14)" fg:x="19197" fg:w="379"/><text x="60.5895%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (379 samples, 1.19%)</title><rect x="60.3395%" y="405" width="1.1913%" height="15" fill="rgb(242,43,11)" fg:x="19197" fg:w="379"/><text x="60.5895%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (379 samples, 1.19%)</title><rect x="60.3395%" y="389" width="1.1913%" height="15" fill="rgb(232,69,23)" fg:x="19197" fg:w="379"/><text x="60.5895%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (379 samples, 1.19%)</title><rect x="60.3395%" y="373" width="1.1913%" height="15" fill="rgb(216,180,54)" fg:x="19197" fg:w="379"/><text x="60.5895%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (379 samples, 1.19%)</title><rect x="60.3395%" y="357" width="1.1913%" height="15" fill="rgb(216,5,24)" fg:x="19197" fg:w="379"/><text x="60.5895%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (379 samples, 1.19%)</title><rect x="60.3395%" y="341" width="1.1913%" height="15" fill="rgb(225,89,9)" fg:x="19197" fg:w="379"/><text x="60.5895%" y="351.50"></text></g><g><title>dhat::Globals::update_counts_for_alloc (15 samples, 0.05%)</title><rect x="61.5307%" y="469" width="0.0471%" height="15" fill="rgb(243,75,33)" fg:x="19576" fg:w="15"/><text x="61.7807%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (15 samples, 0.05%)</title><rect x="61.5307%" y="453" width="0.0471%" height="15" fill="rgb(247,141,45)" fg:x="19576" fg:w="15"/><text x="61.7807%" y="463.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (15 samples, 0.05%)</title><rect x="61.5307%" y="437" width="0.0471%" height="15" fill="rgb(232,177,36)" fg:x="19576" fg:w="15"/><text x="61.7807%" y="447.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (15 samples, 0.05%)</title><rect x="61.5307%" y="421" width="0.0471%" height="15" fill="rgb(219,125,36)" fg:x="19576" fg:w="15"/><text x="61.7807%" y="431.50"></text></g><g><title>Unknown (63 samples, 0.20%)</title><rect x="61.7790%" y="373" width="0.1980%" height="15" fill="rgb(227,94,9)" fg:x="19655" fg:w="63"/><text x="62.0290%" y="383.50"></text></g><g><title>_Unwind_Find_FDE (246 samples, 0.77%)</title><rect x="61.7790%" y="389" width="0.7732%" height="15" fill="rgb(240,34,52)" fg:x="19655" fg:w="246"/><text x="62.0290%" y="399.50"></text></g><g><title>__GI__dl_find_object (183 samples, 0.58%)</title><rect x="61.9771%" y="373" width="0.5752%" height="15" fill="rgb(216,45,12)" fg:x="19718" fg:w="183"/><text x="62.2271%" y="383.50"></text></g><g><title>Unknown (68 samples, 0.21%)</title><rect x="63.5958%" y="261" width="0.2137%" height="15" fill="rgb(246,21,19)" fg:x="20233" fg:w="68"/><text x="63.8458%" y="271.50"></text></g><g><title>&lt;backtrace::backtrace::Frame as core::clone::Clone&gt;::clone (354 samples, 1.11%)</title><rect x="63.0363%" y="341" width="1.1127%" height="15" fill="rgb(213,98,42)" fg:x="20055" fg:w="354"/><text x="63.2863%" y="351.50"></text></g><g><title>&lt;backtrace::backtrace::libunwind::Frame as core::clone::Clone&gt;::clone (354 samples, 1.11%)</title><rect x="63.0363%" y="325" width="1.1127%" height="15" fill="rgb(250,136,47)" fg:x="20055" fg:w="354"/><text x="63.2863%" y="335.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::symbol_address (176 samples, 0.55%)</title><rect x="63.5958%" y="309" width="0.5532%" height="15" fill="rgb(251,124,27)" fg:x="20233" fg:w="176"/><text x="63.8458%" y="319.50"></text></g><g><title>_Unwind_FindEnclosingFunction (176 samples, 0.55%)</title><rect x="63.5958%" y="293" width="0.5532%" height="15" fill="rgb(229,180,14)" fg:x="20233" fg:w="176"/><text x="63.8458%" y="303.50"></text></g><g><title>_Unwind_Find_FDE (176 samples, 0.55%)</title><rect x="63.5958%" y="277" width="0.5532%" height="15" fill="rgb(245,216,25)" fg:x="20233" fg:w="176"/><text x="63.8458%" y="287.50"></text></g><g><title>__GI__dl_find_object (108 samples, 0.34%)</title><rect x="63.8095%" y="261" width="0.3395%" height="15" fill="rgb(251,43,5)" fg:x="20301" fg:w="108"/><text x="64.0595%" y="271.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (37 samples, 0.12%)</title><rect x="64.1521%" y="277" width="0.1163%" height="15" fill="rgb(250,128,24)" fg:x="20410" fg:w="37"/><text x="64.4021%" y="287.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::realloc (5 samples, 0.02%)</title><rect x="64.3627%" y="213" width="0.0157%" height="15" fill="rgb(217,117,27)" fg:x="20477" fg:w="5"/><text x="64.6127%" y="223.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (5 samples, 0.02%)</title><rect x="64.3627%" y="197" width="0.0157%" height="15" fill="rgb(245,147,4)" fg:x="20477" fg:w="5"/><text x="64.6127%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (7 samples, 0.02%)</title><rect x="64.3627%" y="261" width="0.0220%" height="15" fill="rgb(242,201,35)" fg:x="20477" fg:w="7"/><text x="64.6127%" y="271.50"></text></g><g><title>alloc::alloc::Global::grow_impl (7 samples, 0.02%)</title><rect x="64.3627%" y="245" width="0.0220%" height="15" fill="rgb(218,181,1)" fg:x="20477" fg:w="7"/><text x="64.6127%" y="255.50"></text></g><g><title>alloc::alloc::realloc (7 samples, 0.02%)</title><rect x="64.3627%" y="229" width="0.0220%" height="15" fill="rgb(222,6,29)" fg:x="20477" fg:w="7"/><text x="64.6127%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (81 samples, 0.25%)</title><rect x="64.1490%" y="325" width="0.2546%" height="15" fill="rgb(208,186,3)" fg:x="20409" fg:w="81"/><text x="64.3990%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (81 samples, 0.25%)</title><rect x="64.1490%" y="309" width="0.2546%" height="15" fill="rgb(216,36,26)" fg:x="20409" fg:w="81"/><text x="64.3990%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (81 samples, 0.25%)</title><rect x="64.1490%" y="293" width="0.2546%" height="15" fill="rgb(248,201,23)" fg:x="20409" fg:w="81"/><text x="64.3990%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (43 samples, 0.14%)</title><rect x="64.2684%" y="277" width="0.1352%" height="15" fill="rgb(251,170,31)" fg:x="20447" fg:w="43"/><text x="64.5184%" y="287.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (6 samples, 0.02%)</title><rect x="64.3847%" y="261" width="0.0189%" height="15" fill="rgb(207,110,25)" fg:x="20484" fg:w="6"/><text x="64.6347%" y="271.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (6 samples, 0.02%)</title><rect x="64.3847%" y="245" width="0.0189%" height="15" fill="rgb(250,54,15)" fg:x="20484" fg:w="6"/><text x="64.6347%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (711 samples, 2.23%)</title><rect x="64.1490%" y="341" width="2.2348%" height="15" fill="rgb(227,68,33)" fg:x="20409" fg:w="711"/><text x="64.3990%" y="351.50">a..</text></g><g><title>core::ptr::write (630 samples, 1.98%)</title><rect x="64.4036%" y="325" width="1.9802%" height="15" fill="rgb(238,34,41)" fg:x="20490" fg:w="630"/><text x="64.6536%" y="335.50">c..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1,509 samples, 4.74%)</title><rect x="61.7570%" y="437" width="4.7430%" height="15" fill="rgb(220,11,15)" fg:x="19648" fg:w="1509"/><text x="62.0070%" y="447.50">backtr..</text></g><g><title>backtrace::backtrace::libunwind::trace (1,509 samples, 4.74%)</title><rect x="61.7570%" y="421" width="4.7430%" height="15" fill="rgb(246,111,35)" fg:x="19648" fg:w="1509"/><text x="62.0070%" y="431.50">backtr..</text></g><g><title>_Unwind_Backtrace (1,509 samples, 4.74%)</title><rect x="61.7570%" y="405" width="4.7430%" height="15" fill="rgb(209,88,53)" fg:x="19648" fg:w="1509"/><text x="62.0070%" y="415.50">_Unwin..</text></g><g><title>backtrace::backtrace::libunwind::trace::trace_fn (1,256 samples, 3.95%)</title><rect x="62.5523%" y="389" width="3.9478%" height="15" fill="rgb(231,185,47)" fg:x="19901" fg:w="1256"/><text x="62.8023%" y="399.50">back..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,193 samples, 3.75%)</title><rect x="62.7503%" y="373" width="3.7498%" height="15" fill="rgb(233,154,1)" fg:x="19964" fg:w="1193"/><text x="63.0003%" y="383.50">core..</text></g><g><title>dhat::new_backtrace_inner::{{closure}} (1,149 samples, 3.61%)</title><rect x="62.8886%" y="357" width="3.6115%" height="15" fill="rgb(225,15,46)" fg:x="20008" fg:w="1149"/><text x="63.1386%" y="367.50">dhat..</text></g><g><title>backtrace::backtrace::Frame::ip (37 samples, 0.12%)</title><rect x="66.3838%" y="341" width="0.1163%" height="15" fill="rgb(211,135,41)" fg:x="21120" fg:w="37"/><text x="66.6338%" y="351.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::ip (37 samples, 0.12%)</title><rect x="66.3838%" y="325" width="0.1163%" height="15" fill="rgb(208,54,0)" fg:x="21120" fg:w="37"/><text x="66.6338%" y="335.50"></text></g><g><title>backtrace::lock::lock (13 samples, 0.04%)</title><rect x="66.5001%" y="437" width="0.0409%" height="15" fill="rgb(244,136,14)" fg:x="21157" fg:w="13"/><text x="66.7501%" y="447.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (13 samples, 0.04%)</title><rect x="66.5001%" y="421" width="0.0409%" height="15" fill="rgb(241,56,14)" fg:x="21157" fg:w="13"/><text x="66.7501%" y="431.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (13 samples, 0.04%)</title><rect x="66.5001%" y="405" width="0.0409%" height="15" fill="rgb(205,80,24)" fg:x="21157" fg:w="13"/><text x="66.7501%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (13 samples, 0.04%)</title><rect x="66.5001%" y="389" width="0.0409%" height="15" fill="rgb(220,57,4)" fg:x="21157" fg:w="13"/><text x="66.7501%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (13 samples, 0.04%)</title><rect x="66.5001%" y="373" width="0.0409%" height="15" fill="rgb(226,193,50)" fg:x="21157" fg:w="13"/><text x="66.7501%" y="383.50"></text></g><g><title>dhat::new_backtrace_inner (1,622 samples, 5.10%)</title><rect x="61.5779%" y="469" width="5.0982%" height="15" fill="rgb(231,168,22)" fg:x="19591" fg:w="1622"/><text x="61.8279%" y="479.50">dhat::..</text></g><g><title>backtrace::backtrace::trace (1,568 samples, 4.93%)</title><rect x="61.7476%" y="453" width="4.9285%" height="15" fill="rgb(254,215,14)" fg:x="19645" fg:w="1568"/><text x="61.9976%" y="463.50">backtr..</text></g><g><title>core::ptr::drop_in_place&lt;backtrace::lock::LockGuard&gt; (43 samples, 0.14%)</title><rect x="66.5409%" y="437" width="0.1352%" height="15" fill="rgb(211,115,16)" fg:x="21170" fg:w="43"/><text x="66.7909%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt;&gt; (41 samples, 0.13%)</title><rect x="66.5472%" y="421" width="0.1289%" height="15" fill="rgb(236,210,16)" fg:x="21172" fg:w="41"/><text x="66.7972%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (41 samples, 0.13%)</title><rect x="66.5472%" y="405" width="0.1289%" height="15" fill="rgb(221,94,12)" fg:x="21172" fg:w="41"/><text x="66.7972%" y="415.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.13%)</title><rect x="66.5472%" y="389" width="0.1289%" height="15" fill="rgb(235,218,49)" fg:x="21172" fg:w="41"/><text x="66.7972%" y="399.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (41 samples, 0.13%)</title><rect x="66.5472%" y="373" width="0.1289%" height="15" fill="rgb(217,114,14)" fg:x="21172" fg:w="41"/><text x="66.7972%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (41 samples, 0.13%)</title><rect x="66.5472%" y="357" width="0.1289%" height="15" fill="rgb(216,145,22)" fg:x="21172" fg:w="41"/><text x="66.7972%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_swap (41 samples, 0.13%)</title><rect x="66.5472%" y="341" width="0.1289%" height="15" fill="rgb(217,112,39)" fg:x="21172" fg:w="41"/><text x="66.7972%" y="351.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (9 samples, 0.03%)</title><rect x="66.6761%" y="469" width="0.0283%" height="15" fill="rgb(225,85,32)" fg:x="21213" fg:w="9"/><text x="66.9261%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,413 samples, 7.58%)</title><rect x="59.1262%" y="613" width="7.5845%" height="15" fill="rgb(245,209,47)" fg:x="18811" fg:w="2413"/><text x="59.3762%" y="623.50">alloc::vec..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,413 samples, 7.58%)</title><rect x="59.1262%" y="597" width="7.5845%" height="15" fill="rgb(218,220,15)" fg:x="18811" fg:w="2413"/><text x="59.3762%" y="607.50">alloc::raw..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,413 samples, 7.58%)</title><rect x="59.1262%" y="581" width="7.5845%" height="15" fill="rgb(222,202,31)" fg:x="18811" fg:w="2413"/><text x="59.3762%" y="591.50">alloc::raw..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,413 samples, 7.58%)</title><rect x="59.1262%" y="565" width="7.5845%" height="15" fill="rgb(243,203,4)" fg:x="18811" fg:w="2413"/><text x="59.3762%" y="575.50">alloc::raw..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,413 samples, 7.58%)</title><rect x="59.1262%" y="549" width="7.5845%" height="15" fill="rgb(237,92,17)" fg:x="18811" fg:w="2413"/><text x="59.3762%" y="559.50">&lt;alloc::al..</text></g><g><title>alloc::alloc::Global::alloc_impl (2,413 samples, 7.58%)</title><rect x="59.1262%" y="533" width="7.5845%" height="15" fill="rgb(231,119,7)" fg:x="18811" fg:w="2413"/><text x="59.3762%" y="543.50">alloc::all..</text></g><g><title>alloc::alloc::alloc (2,413 samples, 7.58%)</title><rect x="59.1262%" y="517" width="7.5845%" height="15" fill="rgb(237,82,41)" fg:x="18811" fg:w="2413"/><text x="59.3762%" y="527.50">alloc::all..</text></g><g><title>__rust_alloc (2,413 samples, 7.58%)</title><rect x="59.1262%" y="501" width="7.5845%" height="15" fill="rgb(226,81,48)" fg:x="18811" fg:w="2413"/><text x="59.3762%" y="511.50">__rust_all..</text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (2,410 samples, 7.58%)</title><rect x="59.1356%" y="485" width="7.5750%" height="15" fill="rgb(234,70,51)" fg:x="18814" fg:w="2410"/><text x="59.3856%" y="495.50">&lt;dhat::All..</text></g><g><title>&lt;briolette_sim::Coin as core::clone::Clone&gt;::clone (2,425 samples, 7.62%)</title><rect x="59.1262%" y="693" width="7.6222%" height="15" fill="rgb(251,86,4)" fg:x="18811" fg:w="2425"/><text x="59.3762%" y="703.50">&lt;briolette..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,425 samples, 7.62%)</title><rect x="59.1262%" y="677" width="7.6222%" height="15" fill="rgb(244,144,28)" fg:x="18811" fg:w="2425"/><text x="59.3762%" y="687.50">&lt;alloc::ve..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,425 samples, 7.62%)</title><rect x="59.1262%" y="661" width="7.6222%" height="15" fill="rgb(232,161,39)" fg:x="18811" fg:w="2425"/><text x="59.3762%" y="671.50">alloc::sli..</text></g><g><title>alloc::slice::hack::to_vec (2,425 samples, 7.62%)</title><rect x="59.1262%" y="645" width="7.6222%" height="15" fill="rgb(247,34,51)" fg:x="18811" fg:w="2425"/><text x="59.3762%" y="655.50">alloc::sli..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,425 samples, 7.62%)</title><rect x="59.1262%" y="629" width="7.6222%" height="15" fill="rgb(225,132,2)" fg:x="18811" fg:w="2425"/><text x="59.3762%" y="639.50">&lt;T as allo..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (12 samples, 0.04%)</title><rect x="66.7107%" y="613" width="0.0377%" height="15" fill="rgb(209,159,44)" fg:x="21224" fg:w="12"/><text x="66.9607%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.04%)</title><rect x="66.7107%" y="597" width="0.0377%" height="15" fill="rgb(251,214,1)" fg:x="21224" fg:w="12"/><text x="66.9607%" y="607.50"></text></g><g><title>&lt;absim::extras::SimulationPopulation&lt;S&gt; as absim::Population&lt;S&gt;&gt;::new_agents (2,705 samples, 8.50%)</title><rect x="59.1262%" y="789" width="8.5023%" height="15" fill="rgb(247,84,47)" fg:x="18811" fg:w="2705"/><text x="59.3762%" y="799.50">&lt;absim::extr..</text></g><g><title>&lt;briolette_sim::AgentData as core::clone::Clone&gt;::clone (2,705 samples, 8.50%)</title><rect x="59.1262%" y="773" width="8.5023%" height="15" fill="rgb(240,111,43)" fg:x="18811" fg:w="2705"/><text x="59.3762%" y="783.50">&lt;briolette_s..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,705 samples, 8.50%)</title><rect x="59.1262%" y="757" width="8.5023%" height="15" fill="rgb(215,214,35)" fg:x="18811" fg:w="2705"/><text x="59.3762%" y="767.50">&lt;alloc::vec:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,705 samples, 8.50%)</title><rect x="59.1262%" y="741" width="8.5023%" height="15" fill="rgb(248,207,23)" fg:x="18811" fg:w="2705"/><text x="59.3762%" y="751.50">alloc::slice..</text></g><g><title>alloc::slice::hack::to_vec (2,705 samples, 8.50%)</title><rect x="59.1262%" y="725" width="8.5023%" height="15" fill="rgb(214,186,4)" fg:x="18811" fg:w="2705"/><text x="59.3762%" y="735.50">alloc::slice..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,705 samples, 8.50%)</title><rect x="59.1262%" y="709" width="8.5023%" height="15" fill="rgb(220,133,22)" fg:x="18811" fg:w="2705"/><text x="59.3762%" y="719.50">&lt;T as alloc:..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (280 samples, 0.88%)</title><rect x="66.7484%" y="693" width="0.8801%" height="15" fill="rgb(239,134,19)" fg:x="21236" fg:w="280"/><text x="66.9984%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (46 samples, 0.14%)</title><rect x="67.6348%" y="533" width="0.1446%" height="15" fill="rgb(250,140,9)" fg:x="21518" fg:w="46"/><text x="67.8848%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (46 samples, 0.14%)</title><rect x="67.6348%" y="517" width="0.1446%" height="15" fill="rgb(225,59,14)" fg:x="21518" fg:w="46"/><text x="67.8848%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (46 samples, 0.14%)</title><rect x="67.6348%" y="501" width="0.1446%" height="15" fill="rgb(214,152,51)" fg:x="21518" fg:w="46"/><text x="67.8848%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (46 samples, 0.14%)</title><rect x="67.6348%" y="485" width="0.1446%" height="15" fill="rgb(251,227,43)" fg:x="21518" fg:w="46"/><text x="67.8848%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (46 samples, 0.14%)</title><rect x="67.6348%" y="469" width="0.1446%" height="15" fill="rgb(241,96,17)" fg:x="21518" fg:w="46"/><text x="67.8848%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (46 samples, 0.14%)</title><rect x="67.6348%" y="453" width="0.1446%" height="15" fill="rgb(234,198,43)" fg:x="21518" fg:w="46"/><text x="67.8848%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (46 samples, 0.14%)</title><rect x="67.6348%" y="437" width="0.1446%" height="15" fill="rgb(220,108,29)" fg:x="21518" fg:w="46"/><text x="67.8848%" y="447.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (46 samples, 0.14%)</title><rect x="67.6348%" y="421" width="0.1446%" height="15" fill="rgb(226,163,33)" fg:x="21518" fg:w="46"/><text x="67.8848%" y="431.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (46 samples, 0.14%)</title><rect x="67.6348%" y="405" width="0.1446%" height="15" fill="rgb(205,194,45)" fg:x="21518" fg:w="46"/><text x="67.8848%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (46 samples, 0.14%)</title><rect x="67.6348%" y="389" width="0.1446%" height="15" fill="rgb(206,143,44)" fg:x="21518" fg:w="46"/><text x="67.8848%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (46 samples, 0.14%)</title><rect x="67.6348%" y="373" width="0.1446%" height="15" fill="rgb(236,136,36)" fg:x="21518" fg:w="46"/><text x="67.8848%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;absim::Agent&lt;briolette_sim::AgentData&gt;&gt;&gt; (50 samples, 0.16%)</title><rect x="67.6285%" y="773" width="0.1572%" height="15" fill="rgb(249,172,42)" fg:x="21516" fg:w="50"/><text x="67.8785%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;absim::Agent&lt;briolette_sim::AgentData&gt;&gt; (50 samples, 0.16%)</title><rect x="67.6285%" y="757" width="0.1572%" height="15" fill="rgb(216,139,23)" fg:x="21516" fg:w="50"/><text x="67.8785%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;briolette_sim::AgentData&gt; (50 samples, 0.16%)</title><rect x="67.6285%" y="741" width="0.1572%" height="15" fill="rgb(207,166,20)" fg:x="21516" fg:w="50"/><text x="67.8785%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;briolette_sim::Coin&gt;&gt; (50 samples, 0.16%)</title><rect x="67.6285%" y="725" width="0.1572%" height="15" fill="rgb(210,209,22)" fg:x="21516" fg:w="50"/><text x="67.8785%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 0.16%)</title><rect x="67.6285%" y="709" width="0.1572%" height="15" fill="rgb(232,118,20)" fg:x="21516" fg:w="50"/><text x="67.8785%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;[briolette_sim::Coin]&gt; (50 samples, 0.16%)</title><rect x="67.6285%" y="693" width="0.1572%" height="15" fill="rgb(238,113,42)" fg:x="21516" fg:w="50"/><text x="67.8785%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;briolette_sim::Coin&gt; (50 samples, 0.16%)</title><rect x="67.6285%" y="677" width="0.1572%" height="15" fill="rgb(231,42,5)" fg:x="21516" fg:w="50"/><text x="67.8785%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (50 samples, 0.16%)</title><rect x="67.6285%" y="661" width="0.1572%" height="15" fill="rgb(243,166,24)" fg:x="21516" fg:w="50"/><text x="67.8785%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (50 samples, 0.16%)</title><rect x="67.6285%" y="645" width="0.1572%" height="15" fill="rgb(237,226,12)" fg:x="21516" fg:w="50"/><text x="67.8785%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 0.16%)</title><rect x="67.6285%" y="629" width="0.1572%" height="15" fill="rgb(229,133,24)" fg:x="21516" fg:w="50"/><text x="67.8785%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (50 samples, 0.16%)</title><rect x="67.6285%" y="613" width="0.1572%" height="15" fill="rgb(238,33,43)" fg:x="21516" fg:w="50"/><text x="67.8785%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (50 samples, 0.16%)</title><rect x="67.6285%" y="597" width="0.1572%" height="15" fill="rgb(227,59,38)" fg:x="21516" fg:w="50"/><text x="67.8785%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (50 samples, 0.16%)</title><rect x="67.6285%" y="581" width="0.1572%" height="15" fill="rgb(230,97,0)" fg:x="21516" fg:w="50"/><text x="67.8785%" y="591.50"></text></g><g><title>__rust_dealloc (50 samples, 0.16%)</title><rect x="67.6285%" y="565" width="0.1572%" height="15" fill="rgb(250,173,50)" fg:x="21516" fg:w="50"/><text x="67.8785%" y="575.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::dealloc (50 samples, 0.16%)</title><rect x="67.6285%" y="549" width="0.1572%" height="15" fill="rgb(240,15,50)" fg:x="21516" fg:w="50"/><text x="67.8785%" y="559.50"></text></g><g><title>&lt;briolette_sim::simulator::Simulator as absim::Simulation&gt;::population_apply (2,757 samples, 8.67%)</title><rect x="59.1262%" y="805" width="8.6657%" height="15" fill="rgb(221,93,22)" fg:x="18811" fg:w="2757"/><text x="59.3762%" y="815.50">&lt;briolette_s..</text></g><g><title>&lt;absim::extras::SimulationPopulation&lt;S&gt; as absim::Population&lt;S&gt;&gt;::remove (52 samples, 0.16%)</title><rect x="67.6285%" y="789" width="0.1634%" height="15" fill="rgb(245,180,53)" fg:x="21516" fg:w="52"/><text x="67.8785%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.02%)</title><rect x="67.7919%" y="789" width="0.0220%" height="15" fill="rgb(231,88,51)" fg:x="21568" fg:w="7"/><text x="68.0419%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7 samples, 0.02%)</title><rect x="67.7919%" y="773" width="0.0220%" height="15" fill="rgb(240,58,21)" fg:x="21568" fg:w="7"/><text x="68.0419%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (7 samples, 0.02%)</title><rect x="67.7919%" y="757" width="0.0220%" height="15" fill="rgb(237,21,10)" fg:x="21568" fg:w="7"/><text x="68.0419%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7 samples, 0.02%)</title><rect x="67.7919%" y="741" width="0.0220%" height="15" fill="rgb(218,43,11)" fg:x="21568" fg:w="7"/><text x="68.0419%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.02%)</title><rect x="67.7919%" y="725" width="0.0220%" height="15" fill="rgb(218,221,29)" fg:x="21568" fg:w="7"/><text x="68.0419%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.02%)</title><rect x="67.7919%" y="709" width="0.0220%" height="15" fill="rgb(214,118,42)" fg:x="21568" fg:w="7"/><text x="68.0419%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (7 samples, 0.02%)</title><rect x="67.7919%" y="693" width="0.0220%" height="15" fill="rgb(251,200,26)" fg:x="21568" fg:w="7"/><text x="68.0419%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (7 samples, 0.02%)</title><rect x="67.7919%" y="677" width="0.0220%" height="15" fill="rgb(237,101,39)" fg:x="21568" fg:w="7"/><text x="68.0419%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.02%)</title><rect x="67.7919%" y="661" width="0.0220%" height="15" fill="rgb(251,117,11)" fg:x="21568" fg:w="7"/><text x="68.0419%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.02%)</title><rect x="67.7919%" y="645" width="0.0220%" height="15" fill="rgb(216,223,23)" fg:x="21568" fg:w="7"/><text x="68.0419%" y="655.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.02%)</title><rect x="67.7919%" y="629" width="0.0220%" height="15" fill="rgb(251,54,12)" fg:x="21568" fg:w="7"/><text x="68.0419%" y="639.50"></text></g><g><title>__rust_alloc (7 samples, 0.02%)</title><rect x="67.7919%" y="613" width="0.0220%" height="15" fill="rgb(254,176,54)" fg:x="21568" fg:w="7"/><text x="68.0419%" y="623.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (7 samples, 0.02%)</title><rect x="67.7919%" y="597" width="0.0220%" height="15" fill="rgb(210,32,8)" fg:x="21568" fg:w="7"/><text x="68.0419%" y="607.50"></text></g><g><title>dhat::new_backtrace_inner (4 samples, 0.01%)</title><rect x="67.8014%" y="581" width="0.0126%" height="15" fill="rgb(235,52,38)" fg:x="21571" fg:w="4"/><text x="68.0514%" y="591.50"></text></g><g><title>backtrace::backtrace::trace (4 samples, 0.01%)</title><rect x="67.8014%" y="565" width="0.0126%" height="15" fill="rgb(231,4,44)" fg:x="21571" fg:w="4"/><text x="68.0514%" y="575.50"></text></g><g><title>backtrace::capture::Backtrace::frames (11 samples, 0.03%)</title><rect x="67.8202%" y="437" width="0.0346%" height="15" fill="rgb(249,2,32)" fg:x="21577" fg:w="11"/><text x="68.0702%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (11 samples, 0.03%)</title><rect x="67.8202%" y="421" width="0.0346%" height="15" fill="rgb(224,65,26)" fg:x="21577" fg:w="11"/><text x="68.0702%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (11 samples, 0.03%)</title><rect x="67.8202%" y="405" width="0.0346%" height="15" fill="rgb(250,73,40)" fg:x="21577" fg:w="11"/><text x="68.0702%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (11 samples, 0.03%)</title><rect x="67.8202%" y="389" width="0.0346%" height="15" fill="rgb(253,177,16)" fg:x="21577" fg:w="11"/><text x="68.0702%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (11 samples, 0.03%)</title><rect x="67.8202%" y="373" width="0.0346%" height="15" fill="rgb(217,32,34)" fg:x="21577" fg:w="11"/><text x="68.0702%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (11 samples, 0.03%)</title><rect x="67.8202%" y="357" width="0.0346%" height="15" fill="rgb(212,7,10)" fg:x="21577" fg:w="11"/><text x="68.0702%" y="367.50"></text></g><g><title>dhat::Globals::get_pp_info (14 samples, 0.04%)</title><rect x="67.8139%" y="565" width="0.0440%" height="15" fill="rgb(245,89,8)" fg:x="21575" fg:w="14"/><text x="68.0639%" y="575.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (14 samples, 0.04%)</title><rect x="67.8139%" y="549" width="0.0440%" height="15" fill="rgb(237,16,53)" fg:x="21575" fg:w="14"/><text x="68.0639%" y="559.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (14 samples, 0.04%)</title><rect x="67.8139%" y="533" width="0.0440%" height="15" fill="rgb(250,204,30)" fg:x="21575" fg:w="14"/><text x="68.0639%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (12 samples, 0.04%)</title><rect x="67.8202%" y="517" width="0.0377%" height="15" fill="rgb(208,77,27)" fg:x="21577" fg:w="12"/><text x="68.0702%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (12 samples, 0.04%)</title><rect x="67.8202%" y="501" width="0.0377%" height="15" fill="rgb(250,204,28)" fg:x="21577" fg:w="12"/><text x="68.0702%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (12 samples, 0.04%)</title><rect x="67.8202%" y="485" width="0.0377%" height="15" fill="rgb(244,63,21)" fg:x="21577" fg:w="12"/><text x="68.0702%" y="495.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (12 samples, 0.04%)</title><rect x="67.8202%" y="469" width="0.0377%" height="15" fill="rgb(236,85,44)" fg:x="21577" fg:w="12"/><text x="68.0702%" y="479.50"></text></g><g><title>&lt;dhat::Backtrace as core::cmp::PartialEq&gt;::eq (12 samples, 0.04%)</title><rect x="67.8202%" y="453" width="0.0377%" height="15" fill="rgb(215,98,4)" fg:x="21577" fg:w="12"/><text x="68.0702%" y="463.50"></text></g><g><title>dhat::Globals::record_block (50 samples, 0.16%)</title><rect x="67.8579%" y="565" width="0.1572%" height="15" fill="rgb(235,38,11)" fg:x="21589" fg:w="50"/><text x="68.1079%" y="575.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (50 samples, 0.16%)</title><rect x="67.8579%" y="549" width="0.1572%" height="15" fill="rgb(254,186,25)" fg:x="21589" fg:w="50"/><text x="68.1079%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (50 samples, 0.16%)</title><rect x="67.8579%" y="533" width="0.1572%" height="15" fill="rgb(225,55,31)" fg:x="21589" fg:w="50"/><text x="68.1079%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (50 samples, 0.16%)</title><rect x="67.8579%" y="517" width="0.1572%" height="15" fill="rgb(211,15,21)" fg:x="21589" fg:w="50"/><text x="68.1079%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (50 samples, 0.16%)</title><rect x="67.8579%" y="501" width="0.1572%" height="15" fill="rgb(215,187,41)" fg:x="21589" fg:w="50"/><text x="68.1079%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (50 samples, 0.16%)</title><rect x="67.8579%" y="485" width="0.1572%" height="15" fill="rgb(248,69,32)" fg:x="21589" fg:w="50"/><text x="68.1079%" y="495.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (50 samples, 0.16%)</title><rect x="67.8579%" y="469" width="0.1572%" height="15" fill="rgb(252,102,52)" fg:x="21589" fg:w="50"/><text x="68.1079%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (50 samples, 0.16%)</title><rect x="67.8579%" y="453" width="0.1572%" height="15" fill="rgb(253,140,32)" fg:x="21589" fg:w="50"/><text x="68.1079%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (50 samples, 0.16%)</title><rect x="67.8579%" y="437" width="0.1572%" height="15" fill="rgb(216,56,42)" fg:x="21589" fg:w="50"/><text x="68.1079%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (4 samples, 0.01%)</title><rect x="68.0245%" y="549" width="0.0126%" height="15" fill="rgb(216,184,14)" fg:x="21642" fg:w="4"/><text x="68.2745%" y="559.50"></text></g><g><title>_Unwind_Find_FDE (9 samples, 0.03%)</title><rect x="68.0402%" y="485" width="0.0283%" height="15" fill="rgb(237,187,27)" fg:x="21647" fg:w="9"/><text x="68.2902%" y="495.50"></text></g><g><title>__GI__dl_find_object (7 samples, 0.02%)</title><rect x="68.0465%" y="469" width="0.0220%" height="15" fill="rgb(219,65,3)" fg:x="21649" fg:w="7"/><text x="68.2965%" y="479.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::ip (7 samples, 0.02%)</title><rect x="68.1031%" y="405" width="0.0220%" height="15" fill="rgb(245,83,25)" fg:x="21667" fg:w="7"/><text x="68.3531%" y="415.50"></text></g><g><title>Unknown (4 samples, 0.01%)</title><rect x="68.1251%" y="357" width="0.0126%" height="15" fill="rgb(214,205,45)" fg:x="21674" fg:w="4"/><text x="68.3751%" y="367.50"></text></g><g><title>&lt;backtrace::backtrace::Frame as core::clone::Clone&gt;::clone (18 samples, 0.06%)</title><rect x="68.1031%" y="437" width="0.0566%" height="15" fill="rgb(241,20,18)" fg:x="21667" fg:w="18"/><text x="68.3531%" y="447.50"></text></g><g><title>&lt;backtrace::backtrace::libunwind::Frame as core::clone::Clone&gt;::clone (18 samples, 0.06%)</title><rect x="68.1031%" y="421" width="0.0566%" height="15" fill="rgb(232,163,23)" fg:x="21667" fg:w="18"/><text x="68.3531%" y="431.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::symbol_address (11 samples, 0.03%)</title><rect x="68.1251%" y="405" width="0.0346%" height="15" fill="rgb(214,5,46)" fg:x="21674" fg:w="11"/><text x="68.3751%" y="415.50"></text></g><g><title>_Unwind_FindEnclosingFunction (11 samples, 0.03%)</title><rect x="68.1251%" y="389" width="0.0346%" height="15" fill="rgb(229,78,17)" fg:x="21674" fg:w="11"/><text x="68.3751%" y="399.50"></text></g><g><title>_Unwind_Find_FDE (11 samples, 0.03%)</title><rect x="68.1251%" y="373" width="0.0346%" height="15" fill="rgb(248,89,10)" fg:x="21674" fg:w="11"/><text x="68.3751%" y="383.50"></text></g><g><title>__GI__dl_find_object (7 samples, 0.02%)</title><rect x="68.1377%" y="357" width="0.0220%" height="15" fill="rgb(248,54,15)" fg:x="21678" fg:w="7"/><text x="68.3877%" y="367.50"></text></g><g><title>_dl_find_object_to_external (7 samples, 0.02%)</title><rect x="68.1377%" y="341" width="0.0220%" height="15" fill="rgb(223,116,6)" fg:x="21678" fg:w="7"/><text x="68.3877%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.01%)</title><rect x="68.1597%" y="437" width="0.0126%" height="15" fill="rgb(205,125,38)" fg:x="21685" fg:w="4"/><text x="68.4097%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (4 samples, 0.01%)</title><rect x="68.1597%" y="421" width="0.0126%" height="15" fill="rgb(251,78,38)" fg:x="21685" fg:w="4"/><text x="68.4097%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (4 samples, 0.01%)</title><rect x="68.1597%" y="405" width="0.0126%" height="15" fill="rgb(253,78,28)" fg:x="21685" fg:w="4"/><text x="68.4097%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (4 samples, 0.01%)</title><rect x="68.1597%" y="389" width="0.0126%" height="15" fill="rgb(209,120,3)" fg:x="21685" fg:w="4"/><text x="68.4097%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.01%)</title><rect x="68.1597%" y="373" width="0.0126%" height="15" fill="rgb(238,229,9)" fg:x="21685" fg:w="4"/><text x="68.4097%" y="383.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (72 samples, 0.23%)</title><rect x="68.0371%" y="533" width="0.2263%" height="15" fill="rgb(253,159,18)" fg:x="21646" fg:w="72"/><text x="68.2871%" y="543.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (72 samples, 0.23%)</title><rect x="68.0371%" y="517" width="0.2263%" height="15" fill="rgb(244,42,34)" fg:x="21646" fg:w="72"/><text x="68.2871%" y="527.50"></text></g><g><title>_Unwind_Backtrace (72 samples, 0.23%)</title><rect x="68.0371%" y="501" width="0.2263%" height="15" fill="rgb(224,8,7)" fg:x="21646" fg:w="72"/><text x="68.2871%" y="511.50"></text></g><g><title>backtrace::backtrace::libunwind::trace::trace_fn (62 samples, 0.19%)</title><rect x="68.0685%" y="485" width="0.1949%" height="15" fill="rgb(210,201,45)" fg:x="21656" fg:w="62"/><text x="68.3185%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (59 samples, 0.19%)</title><rect x="68.0780%" y="469" width="0.1854%" height="15" fill="rgb(252,185,21)" fg:x="21659" fg:w="59"/><text x="68.3280%" y="479.50"></text></g><g><title>dhat::new_backtrace_inner::{{closure}} (59 samples, 0.19%)</title><rect x="68.0780%" y="453" width="0.1854%" height="15" fill="rgb(223,131,1)" fg:x="21659" fg:w="59"/><text x="68.3280%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (26 samples, 0.08%)</title><rect x="68.1817%" y="437" width="0.0817%" height="15" fill="rgb(245,141,16)" fg:x="21692" fg:w="26"/><text x="68.4317%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (26 samples, 0.08%)</title><rect x="68.1817%" y="421" width="0.0817%" height="15" fill="rgb(229,55,45)" fg:x="21692" fg:w="26"/><text x="68.4317%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (26 samples, 0.08%)</title><rect x="68.1817%" y="405" width="0.0817%" height="15" fill="rgb(208,92,15)" fg:x="21692" fg:w="26"/><text x="68.4317%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (26 samples, 0.08%)</title><rect x="68.1817%" y="389" width="0.0817%" height="15" fill="rgb(234,185,47)" fg:x="21692" fg:w="26"/><text x="68.4317%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (26 samples, 0.08%)</title><rect x="68.1817%" y="373" width="0.0817%" height="15" fill="rgb(253,104,50)" fg:x="21692" fg:w="26"/><text x="68.4317%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (26 samples, 0.08%)</title><rect x="68.1817%" y="357" width="0.0817%" height="15" fill="rgb(205,70,7)" fg:x="21692" fg:w="26"/><text x="68.4317%" y="367.50"></text></g><g><title>dhat::new_backtrace_inner (80 samples, 0.25%)</title><rect x="68.0245%" y="565" width="0.2515%" height="15" fill="rgb(240,178,43)" fg:x="21642" fg:w="80"/><text x="68.2745%" y="575.50"></text></g><g><title>backtrace::backtrace::trace (76 samples, 0.24%)</title><rect x="68.0371%" y="549" width="0.2389%" height="15" fill="rgb(214,112,2)" fg:x="21646" fg:w="76"/><text x="68.2871%" y="559.50"></text></g><g><title>&lt;briolette_sim::Coin as core::clone::Clone&gt;::clone (148 samples, 0.47%)</title><rect x="67.8139%" y="789" width="0.4652%" height="15" fill="rgb(206,46,17)" fg:x="21575" fg:w="148"/><text x="68.0639%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (148 samples, 0.47%)</title><rect x="67.8139%" y="773" width="0.4652%" height="15" fill="rgb(225,220,16)" fg:x="21575" fg:w="148"/><text x="68.0639%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (148 samples, 0.47%)</title><rect x="67.8139%" y="757" width="0.4652%" height="15" fill="rgb(238,65,40)" fg:x="21575" fg:w="148"/><text x="68.0639%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (148 samples, 0.47%)</title><rect x="67.8139%" y="741" width="0.4652%" height="15" fill="rgb(230,151,21)" fg:x="21575" fg:w="148"/><text x="68.0639%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (148 samples, 0.47%)</title><rect x="67.8139%" y="725" width="0.4652%" height="15" fill="rgb(218,58,49)" fg:x="21575" fg:w="148"/><text x="68.0639%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (148 samples, 0.47%)</title><rect x="67.8139%" y="709" width="0.4652%" height="15" fill="rgb(219,179,14)" fg:x="21575" fg:w="148"/><text x="68.0639%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (148 samples, 0.47%)</title><rect x="67.8139%" y="693" width="0.4652%" height="15" fill="rgb(223,72,1)" fg:x="21575" fg:w="148"/><text x="68.0639%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (148 samples, 0.47%)</title><rect x="67.8139%" y="677" width="0.4652%" height="15" fill="rgb(238,126,10)" fg:x="21575" fg:w="148"/><text x="68.0639%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (148 samples, 0.47%)</title><rect x="67.8139%" y="661" width="0.4652%" height="15" fill="rgb(224,206,38)" fg:x="21575" fg:w="148"/><text x="68.0639%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (148 samples, 0.47%)</title><rect x="67.8139%" y="645" width="0.4652%" height="15" fill="rgb(212,201,54)" fg:x="21575" fg:w="148"/><text x="68.0639%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (148 samples, 0.47%)</title><rect x="67.8139%" y="629" width="0.4652%" height="15" fill="rgb(218,154,48)" fg:x="21575" fg:w="148"/><text x="68.0639%" y="639.50"></text></g><g><title>alloc::alloc::alloc (148 samples, 0.47%)</title><rect x="67.8139%" y="613" width="0.4652%" height="15" fill="rgb(232,93,24)" fg:x="21575" fg:w="148"/><text x="68.0639%" y="623.50"></text></g><g><title>__rust_alloc (148 samples, 0.47%)</title><rect x="67.8139%" y="597" width="0.4652%" height="15" fill="rgb(245,30,21)" fg:x="21575" fg:w="148"/><text x="68.0639%" y="607.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (148 samples, 0.47%)</title><rect x="67.8139%" y="581" width="0.4652%" height="15" fill="rgb(242,148,29)" fg:x="21575" fg:w="148"/><text x="68.0639%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.01%)</title><rect x="68.2791%" y="709" width="0.0126%" height="15" fill="rgb(244,153,54)" fg:x="21723" fg:w="4"/><text x="68.5291%" y="719.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.01%)</title><rect x="68.2791%" y="693" width="0.0126%" height="15" fill="rgb(252,87,22)" fg:x="21723" fg:w="4"/><text x="68.5291%" y="703.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.01%)</title><rect x="68.2791%" y="677" width="0.0126%" height="15" fill="rgb(210,51,29)" fg:x="21723" fg:w="4"/><text x="68.5291%" y="687.50"></text></g><g><title>__rust_realloc (4 samples, 0.01%)</title><rect x="68.2791%" y="661" width="0.0126%" height="15" fill="rgb(242,136,47)" fg:x="21723" fg:w="4"/><text x="68.5291%" y="671.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::realloc (4 samples, 0.01%)</title><rect x="68.2791%" y="645" width="0.0126%" height="15" fill="rgb(238,68,4)" fg:x="21723" fg:w="4"/><text x="68.5291%" y="655.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (11 samples, 0.03%)</title><rect x="68.3011%" y="661" width="0.0346%" height="15" fill="rgb(242,161,30)" fg:x="21730" fg:w="11"/><text x="68.5511%" y="671.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (11 samples, 0.03%)</title><rect x="68.3011%" y="645" width="0.0346%" height="15" fill="rgb(218,58,44)" fg:x="21730" fg:w="11"/><text x="68.5511%" y="655.50"></text></g><g><title>_Unwind_Backtrace (11 samples, 0.03%)</title><rect x="68.3011%" y="629" width="0.0346%" height="15" fill="rgb(252,125,32)" fg:x="21730" fg:w="11"/><text x="68.5511%" y="639.50"></text></g><g><title>backtrace::backtrace::libunwind::trace::trace_fn (10 samples, 0.03%)</title><rect x="68.3043%" y="613" width="0.0314%" height="15" fill="rgb(219,178,0)" fg:x="21731" fg:w="10"/><text x="68.5543%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (9 samples, 0.03%)</title><rect x="68.3074%" y="597" width="0.0283%" height="15" fill="rgb(213,152,7)" fg:x="21732" fg:w="9"/><text x="68.5574%" y="607.50"></text></g><g><title>dhat::new_backtrace_inner::{{closure}} (9 samples, 0.03%)</title><rect x="68.3074%" y="581" width="0.0283%" height="15" fill="rgb(249,109,34)" fg:x="21732" fg:w="9"/><text x="68.5574%" y="591.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.01%)</title><rect x="68.3231%" y="565" width="0.0126%" height="15" fill="rgb(232,96,21)" fg:x="21737" fg:w="4"/><text x="68.5731%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (4 samples, 0.01%)</title><rect x="68.3231%" y="549" width="0.0126%" height="15" fill="rgb(228,27,39)" fg:x="21737" fg:w="4"/><text x="68.5731%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.01%)</title><rect x="68.3231%" y="533" width="0.0126%" height="15" fill="rgb(211,182,52)" fg:x="21737" fg:w="4"/><text x="68.5731%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (4 samples, 0.01%)</title><rect x="68.3231%" y="517" width="0.0126%" height="15" fill="rgb(234,178,38)" fg:x="21737" fg:w="4"/><text x="68.5731%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.01%)</title><rect x="68.3231%" y="501" width="0.0126%" height="15" fill="rgb(221,111,3)" fg:x="21737" fg:w="4"/><text x="68.5731%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (4 samples, 0.01%)</title><rect x="68.3231%" y="485" width="0.0126%" height="15" fill="rgb(228,175,21)" fg:x="21737" fg:w="4"/><text x="68.5731%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="68.3231%" y="469" width="0.0126%" height="15" fill="rgb(228,174,43)" fg:x="21737" fg:w="4"/><text x="68.5731%" y="479.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (4 samples, 0.01%)</title><rect x="68.3231%" y="453" width="0.0126%" height="15" fill="rgb(211,191,0)" fg:x="21737" fg:w="4"/><text x="68.5731%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (19 samples, 0.06%)</title><rect x="68.2791%" y="789" width="0.0597%" height="15" fill="rgb(253,117,3)" fg:x="21723" fg:w="19"/><text x="68.5291%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (19 samples, 0.06%)</title><rect x="68.2791%" y="773" width="0.0597%" height="15" fill="rgb(241,127,19)" fg:x="21723" fg:w="19"/><text x="68.5291%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (19 samples, 0.06%)</title><rect x="68.2791%" y="757" width="0.0597%" height="15" fill="rgb(218,103,12)" fg:x="21723" fg:w="19"/><text x="68.5291%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (19 samples, 0.06%)</title><rect x="68.2791%" y="741" width="0.0597%" height="15" fill="rgb(236,214,43)" fg:x="21723" fg:w="19"/><text x="68.5291%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (19 samples, 0.06%)</title><rect x="68.2791%" y="725" width="0.0597%" height="15" fill="rgb(244,144,19)" fg:x="21723" fg:w="19"/><text x="68.5291%" y="735.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (15 samples, 0.05%)</title><rect x="68.2917%" y="709" width="0.0471%" height="15" fill="rgb(246,188,10)" fg:x="21727" fg:w="15"/><text x="68.5417%" y="719.50"></text></g><g><title>dhat::new_backtrace_inner (12 samples, 0.04%)</title><rect x="68.3011%" y="693" width="0.0377%" height="15" fill="rgb(212,193,33)" fg:x="21730" fg:w="12"/><text x="68.5511%" y="703.50"></text></g><g><title>backtrace::backtrace::trace (12 samples, 0.04%)</title><rect x="68.3011%" y="677" width="0.0377%" height="15" fill="rgb(241,51,29)" fg:x="21730" fg:w="12"/><text x="68.5511%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.02%)</title><rect x="68.3388%" y="789" width="0.0189%" height="15" fill="rgb(211,58,19)" fg:x="21742" fg:w="6"/><text x="68.5888%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.02%)</title><rect x="68.3388%" y="773" width="0.0189%" height="15" fill="rgb(229,111,26)" fg:x="21742" fg:w="6"/><text x="68.5888%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.02%)</title><rect x="68.3388%" y="757" width="0.0189%" height="15" fill="rgb(213,115,40)" fg:x="21742" fg:w="6"/><text x="68.5888%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (6 samples, 0.02%)</title><rect x="68.3388%" y="741" width="0.0189%" height="15" fill="rgb(209,56,44)" fg:x="21742" fg:w="6"/><text x="68.5888%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 0.02%)</title><rect x="68.3388%" y="725" width="0.0189%" height="15" fill="rgb(230,108,32)" fg:x="21742" fg:w="6"/><text x="68.5888%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (6 samples, 0.02%)</title><rect x="68.3388%" y="709" width="0.0189%" height="15" fill="rgb(216,165,31)" fg:x="21742" fg:w="6"/><text x="68.5888%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.02%)</title><rect x="68.3388%" y="693" width="0.0189%" height="15" fill="rgb(218,122,21)" fg:x="21742" fg:w="6"/><text x="68.5888%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (6 samples, 0.02%)</title><rect x="68.3388%" y="677" width="0.0189%" height="15" fill="rgb(223,224,47)" fg:x="21742" fg:w="6"/><text x="68.5888%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.02%)</title><rect x="68.3388%" y="661" width="0.0189%" height="15" fill="rgb(238,102,44)" fg:x="21742" fg:w="6"/><text x="68.5888%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (6 samples, 0.02%)</title><rect x="68.3388%" y="645" width="0.0189%" height="15" fill="rgb(236,46,40)" fg:x="21742" fg:w="6"/><text x="68.5888%" y="655.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (6 samples, 0.02%)</title><rect x="68.3388%" y="629" width="0.0189%" height="15" fill="rgb(247,202,50)" fg:x="21742" fg:w="6"/><text x="68.5888%" y="639.50"></text></g><g><title>&lt;briolette_sim::simulator::Simulator as absim::Simulation&gt;::world_apply::{{closure}} (6 samples, 0.02%)</title><rect x="68.3388%" y="613" width="0.0189%" height="15" fill="rgb(209,99,20)" fg:x="21742" fg:w="6"/><text x="68.5888%" y="623.50"></text></g><g><title>mintex::Mutex&lt;T&gt;::lock (6 samples, 0.02%)</title><rect x="68.3577%" y="613" width="0.0189%" height="15" fill="rgb(252,27,34)" fg:x="21748" fg:w="6"/><text x="68.6077%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (6 samples, 0.02%)</title><rect x="68.3577%" y="597" width="0.0189%" height="15" fill="rgb(215,206,23)" fg:x="21748" fg:w="6"/><text x="68.6077%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.02%)</title><rect x="68.3577%" y="581" width="0.0189%" height="15" fill="rgb(212,135,36)" fg:x="21748" fg:w="6"/><text x="68.6077%" y="591.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (92 samples, 0.29%)</title><rect x="68.3766%" y="613" width="0.2892%" height="15" fill="rgb(240,189,1)" fg:x="21754" fg:w="92"/><text x="68.6266%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (92 samples, 0.29%)</title><rect x="68.3766%" y="597" width="0.2892%" height="15" fill="rgb(242,56,20)" fg:x="21754" fg:w="92"/><text x="68.6266%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (92 samples, 0.29%)</title><rect x="68.3766%" y="581" width="0.2892%" height="15" fill="rgb(247,132,33)" fg:x="21754" fg:w="92"/><text x="68.6266%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (92 samples, 0.29%)</title><rect x="68.3766%" y="565" width="0.2892%" height="15" fill="rgb(208,149,11)" fg:x="21754" fg:w="92"/><text x="68.6266%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (92 samples, 0.29%)</title><rect x="68.3766%" y="549" width="0.2892%" height="15" fill="rgb(211,33,11)" fg:x="21754" fg:w="92"/><text x="68.6266%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (92 samples, 0.29%)</title><rect x="68.3766%" y="533" width="0.2892%" height="15" fill="rgb(221,29,38)" fg:x="21754" fg:w="92"/><text x="68.6266%" y="543.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (92 samples, 0.29%)</title><rect x="68.3766%" y="517" width="0.2892%" height="15" fill="rgb(206,182,49)" fg:x="21754" fg:w="92"/><text x="68.6266%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (92 samples, 0.29%)</title><rect x="68.3766%" y="501" width="0.2892%" height="15" fill="rgb(216,140,1)" fg:x="21754" fg:w="92"/><text x="68.6266%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (92 samples, 0.29%)</title><rect x="68.3766%" y="485" width="0.2892%" height="15" fill="rgb(232,57,40)" fg:x="21754" fg:w="92"/><text x="68.6266%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;briolette_sim::CoinState&gt;&gt; (99 samples, 0.31%)</title><rect x="68.3577%" y="789" width="0.3112%" height="15" fill="rgb(224,186,18)" fg:x="21748" fg:w="99"/><text x="68.6077%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;briolette_sim::CoinState&gt; (99 samples, 0.31%)</title><rect x="68.3577%" y="773" width="0.3112%" height="15" fill="rgb(215,121,11)" fg:x="21748" fg:w="99"/><text x="68.6077%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;briolette_sim::Coin&gt; (99 samples, 0.31%)</title><rect x="68.3577%" y="757" width="0.3112%" height="15" fill="rgb(245,147,10)" fg:x="21748" fg:w="99"/><text x="68.6077%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (99 samples, 0.31%)</title><rect x="68.3577%" y="741" width="0.3112%" height="15" fill="rgb(238,153,13)" fg:x="21748" fg:w="99"/><text x="68.6077%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (99 samples, 0.31%)</title><rect x="68.3577%" y="725" width="0.3112%" height="15" fill="rgb(233,108,0)" fg:x="21748" fg:w="99"/><text x="68.6077%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (99 samples, 0.31%)</title><rect x="68.3577%" y="709" width="0.3112%" height="15" fill="rgb(212,157,17)" fg:x="21748" fg:w="99"/><text x="68.6077%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (99 samples, 0.31%)</title><rect x="68.3577%" y="693" width="0.3112%" height="15" fill="rgb(225,213,38)" fg:x="21748" fg:w="99"/><text x="68.6077%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (99 samples, 0.31%)</title><rect x="68.3577%" y="677" width="0.3112%" height="15" fill="rgb(248,16,11)" fg:x="21748" fg:w="99"/><text x="68.6077%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (99 samples, 0.31%)</title><rect x="68.3577%" y="661" width="0.3112%" height="15" fill="rgb(241,33,4)" fg:x="21748" fg:w="99"/><text x="68.6077%" y="671.50"></text></g><g><title>__rust_dealloc (99 samples, 0.31%)</title><rect x="68.3577%" y="645" width="0.3112%" height="15" fill="rgb(222,26,43)" fg:x="21748" fg:w="99"/><text x="68.6077%" y="655.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::dealloc (99 samples, 0.31%)</title><rect x="68.3577%" y="629" width="0.3112%" height="15" fill="rgb(243,29,36)" fg:x="21748" fg:w="99"/><text x="68.6077%" y="639.50"></text></g><g><title>hashbrown::map::make_hash (8 samples, 0.03%)</title><rect x="68.6689%" y="741" width="0.0251%" height="15" fill="rgb(241,9,27)" fg:x="21847" fg:w="8"/><text x="68.9189%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8 samples, 0.03%)</title><rect x="68.6689%" y="725" width="0.0251%" height="15" fill="rgb(205,117,26)" fg:x="21847" fg:w="8"/><text x="68.9189%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (8 samples, 0.03%)</title><rect x="68.6689%" y="709" width="0.0251%" height="15" fill="rgb(209,80,39)" fg:x="21847" fg:w="8"/><text x="68.9189%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (143 samples, 0.45%)</title><rect x="68.6689%" y="789" width="0.4495%" height="15" fill="rgb(239,155,6)" fg:x="21847" fg:w="143"/><text x="68.9189%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (143 samples, 0.45%)</title><rect x="68.6689%" y="773" width="0.4495%" height="15" fill="rgb(212,104,12)" fg:x="21847" fg:w="143"/><text x="68.9189%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (143 samples, 0.45%)</title><rect x="68.6689%" y="757" width="0.4495%" height="15" fill="rgb(234,204,3)" fg:x="21847" fg:w="143"/><text x="68.9189%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (135 samples, 0.42%)</title><rect x="68.6940%" y="741" width="0.4243%" height="15" fill="rgb(251,218,7)" fg:x="21855" fg:w="135"/><text x="68.9440%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (135 samples, 0.42%)</title><rect x="68.6940%" y="725" width="0.4243%" height="15" fill="rgb(221,81,32)" fg:x="21855" fg:w="135"/><text x="68.9440%" y="735.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (135 samples, 0.42%)</title><rect x="68.6940%" y="709" width="0.4243%" height="15" fill="rgb(214,152,26)" fg:x="21855" fg:w="135"/><text x="68.9440%" y="719.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (135 samples, 0.42%)</title><rect x="68.6940%" y="693" width="0.4243%" height="15" fill="rgb(223,22,3)" fg:x="21855" fg:w="135"/><text x="68.9440%" y="703.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (135 samples, 0.42%)</title><rect x="68.6940%" y="677" width="0.4243%" height="15" fill="rgb(207,174,7)" fg:x="21855" fg:w="135"/><text x="68.9440%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (135 samples, 0.42%)</title><rect x="68.6940%" y="661" width="0.4243%" height="15" fill="rgb(224,19,52)" fg:x="21855" fg:w="135"/><text x="68.9440%" y="671.50"></text></g><g><title>&lt;briolette_sim::simulator::Simulator as absim::Simulation&gt;::world_apply (436 samples, 1.37%)</title><rect x="67.7919%" y="805" width="1.3704%" height="15" fill="rgb(228,24,14)" fg:x="21568" fg:w="436"/><text x="68.0419%" y="815.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (13 samples, 0.04%)</title><rect x="69.1215%" y="789" width="0.0409%" height="15" fill="rgb(230,153,43)" fg:x="21991" fg:w="13"/><text x="69.3715%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (13 samples, 0.04%)</title><rect x="69.1215%" y="773" width="0.0409%" height="15" fill="rgb(231,106,12)" fg:x="21991" fg:w="13"/><text x="69.3715%" y="783.50"></text></g><g><title>hashbrown::map::make_hash (11 samples, 0.03%)</title><rect x="69.1278%" y="757" width="0.0346%" height="15" fill="rgb(215,92,2)" fg:x="21993" fg:w="11"/><text x="69.3778%" y="767.50"></text></g><g><title>core::hash::BuildHasher::hash_one (11 samples, 0.03%)</title><rect x="69.1278%" y="741" width="0.0346%" height="15" fill="rgb(249,143,25)" fg:x="21993" fg:w="11"/><text x="69.3778%" y="751.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (11 samples, 0.03%)</title><rect x="69.1278%" y="725" width="0.0346%" height="15" fill="rgb(252,7,35)" fg:x="21993" fg:w="11"/><text x="69.3778%" y="735.50"></text></g><g><title>hashbrown::map::make_hash (8 samples, 0.03%)</title><rect x="69.3604%" y="437" width="0.0251%" height="15" fill="rgb(216,69,40)" fg:x="22067" fg:w="8"/><text x="69.6104%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8 samples, 0.03%)</title><rect x="69.3604%" y="421" width="0.0251%" height="15" fill="rgb(240,36,33)" fg:x="22067" fg:w="8"/><text x="69.6104%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (8 samples, 0.03%)</title><rect x="69.3604%" y="405" width="0.0251%" height="15" fill="rgb(231,128,14)" fg:x="22067" fg:w="8"/><text x="69.6104%" y="415.50"></text></g><g><title>&lt;dhat::Backtrace as core::hash::Hash&gt;::hash (8 samples, 0.03%)</title><rect x="69.3604%" y="389" width="0.0251%" height="15" fill="rgb(245,143,14)" fg:x="22067" fg:w="8"/><text x="69.6104%" y="399.50"></text></g><g><title>dhat::Globals::get_pp_info (11 samples, 0.03%)</title><rect x="69.3541%" y="485" width="0.0346%" height="15" fill="rgb(222,130,28)" fg:x="22065" fg:w="11"/><text x="69.6041%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (11 samples, 0.03%)</title><rect x="69.3541%" y="469" width="0.0346%" height="15" fill="rgb(212,10,48)" fg:x="22065" fg:w="11"/><text x="69.6041%" y="479.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (11 samples, 0.03%)</title><rect x="69.3541%" y="453" width="0.0346%" height="15" fill="rgb(254,118,45)" fg:x="22065" fg:w="11"/><text x="69.6041%" y="463.50"></text></g><g><title>dhat::Globals::record_block (6 samples, 0.02%)</title><rect x="69.3887%" y="485" width="0.0189%" height="15" fill="rgb(228,6,45)" fg:x="22076" fg:w="6"/><text x="69.6387%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (6 samples, 0.02%)</title><rect x="69.3887%" y="469" width="0.0189%" height="15" fill="rgb(241,18,35)" fg:x="22076" fg:w="6"/><text x="69.6387%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.02%)</title><rect x="69.3887%" y="453" width="0.0189%" height="15" fill="rgb(227,214,53)" fg:x="22076" fg:w="6"/><text x="69.6387%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (6 samples, 0.02%)</title><rect x="69.3887%" y="437" width="0.0189%" height="15" fill="rgb(224,107,51)" fg:x="22076" fg:w="6"/><text x="69.6387%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (6 samples, 0.02%)</title><rect x="69.3887%" y="421" width="0.0189%" height="15" fill="rgb(248,60,28)" fg:x="22076" fg:w="6"/><text x="69.6387%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (6 samples, 0.02%)</title><rect x="69.3887%" y="405" width="0.0189%" height="15" fill="rgb(249,101,23)" fg:x="22076" fg:w="6"/><text x="69.6387%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.02%)</title><rect x="69.3887%" y="389" width="0.0189%" height="15" fill="rgb(228,51,19)" fg:x="22076" fg:w="6"/><text x="69.6387%" y="399.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (6 samples, 0.02%)</title><rect x="69.3887%" y="373" width="0.0189%" height="15" fill="rgb(213,20,6)" fg:x="22076" fg:w="6"/><text x="69.6387%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (31 samples, 0.10%)</title><rect x="69.4389%" y="357" width="0.0974%" height="15" fill="rgb(212,124,10)" fg:x="22092" fg:w="31"/><text x="69.6889%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (6 samples, 0.02%)</title><rect x="69.5175%" y="341" width="0.0189%" height="15" fill="rgb(248,3,40)" fg:x="22117" fg:w="6"/><text x="69.7675%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (6 samples, 0.02%)</title><rect x="69.5175%" y="325" width="0.0189%" height="15" fill="rgb(223,178,23)" fg:x="22117" fg:w="6"/><text x="69.7675%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (6 samples, 0.02%)</title><rect x="69.5175%" y="309" width="0.0189%" height="15" fill="rgb(240,132,45)" fg:x="22117" fg:w="6"/><text x="69.7675%" y="319.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (39 samples, 0.12%)</title><rect x="69.4201%" y="453" width="0.1226%" height="15" fill="rgb(245,164,36)" fg:x="22086" fg:w="39"/><text x="69.6701%" y="463.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (39 samples, 0.12%)</title><rect x="69.4201%" y="437" width="0.1226%" height="15" fill="rgb(231,188,53)" fg:x="22086" fg:w="39"/><text x="69.6701%" y="447.50"></text></g><g><title>_Unwind_Backtrace (39 samples, 0.12%)</title><rect x="69.4201%" y="421" width="0.1226%" height="15" fill="rgb(237,198,39)" fg:x="22086" fg:w="39"/><text x="69.6701%" y="431.50"></text></g><g><title>backtrace::backtrace::libunwind::trace::trace_fn (36 samples, 0.11%)</title><rect x="69.4295%" y="405" width="0.1132%" height="15" fill="rgb(223,120,35)" fg:x="22089" fg:w="36"/><text x="69.6795%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (36 samples, 0.11%)</title><rect x="69.4295%" y="389" width="0.1132%" height="15" fill="rgb(253,107,49)" fg:x="22089" fg:w="36"/><text x="69.6795%" y="399.50"></text></g><g><title>dhat::new_backtrace_inner::{{closure}} (34 samples, 0.11%)</title><rect x="69.4358%" y="373" width="0.1069%" height="15" fill="rgb(216,44,31)" fg:x="22091" fg:w="34"/><text x="69.6858%" y="383.50"></text></g><g><title>dhat::new_backtrace_inner (44 samples, 0.14%)</title><rect x="69.4075%" y="485" width="0.1383%" height="15" fill="rgb(253,87,21)" fg:x="22082" fg:w="44"/><text x="69.6575%" y="495.50"></text></g><g><title>backtrace::backtrace::trace (42 samples, 0.13%)</title><rect x="69.4138%" y="469" width="0.1320%" height="15" fill="rgb(226,18,2)" fg:x="22084" fg:w="42"/><text x="69.6638%" y="479.50"></text></g><g><title>&lt;absim::graph_utils::Vertex as core::clone::Clone&gt;::clone (67 samples, 0.21%)</title><rect x="69.3384%" y="709" width="0.2106%" height="15" fill="rgb(216,8,46)" fg:x="22060" fg:w="67"/><text x="69.5884%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (67 samples, 0.21%)</title><rect x="69.3384%" y="693" width="0.2106%" height="15" fill="rgb(226,140,39)" fg:x="22060" fg:w="67"/><text x="69.5884%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (66 samples, 0.21%)</title><rect x="69.3415%" y="677" width="0.2074%" height="15" fill="rgb(221,194,54)" fg:x="22061" fg:w="66"/><text x="69.5915%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (66 samples, 0.21%)</title><rect x="69.3415%" y="661" width="0.2074%" height="15" fill="rgb(213,92,11)" fg:x="22061" fg:w="66"/><text x="69.5915%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (66 samples, 0.21%)</title><rect x="69.3415%" y="645" width="0.2074%" height="15" fill="rgb(229,162,46)" fg:x="22061" fg:w="66"/><text x="69.5915%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (66 samples, 0.21%)</title><rect x="69.3415%" y="629" width="0.2074%" height="15" fill="rgb(214,111,36)" fg:x="22061" fg:w="66"/><text x="69.5915%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (66 samples, 0.21%)</title><rect x="69.3415%" y="613" width="0.2074%" height="15" fill="rgb(207,6,21)" fg:x="22061" fg:w="66"/><text x="69.5915%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (66 samples, 0.21%)</title><rect x="69.3415%" y="597" width="0.2074%" height="15" fill="rgb(213,127,38)" fg:x="22061" fg:w="66"/><text x="69.5915%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (66 samples, 0.21%)</title><rect x="69.3415%" y="581" width="0.2074%" height="15" fill="rgb(238,118,32)" fg:x="22061" fg:w="66"/><text x="69.5915%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (66 samples, 0.21%)</title><rect x="69.3415%" y="565" width="0.2074%" height="15" fill="rgb(240,139,39)" fg:x="22061" fg:w="66"/><text x="69.5915%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (66 samples, 0.21%)</title><rect x="69.3415%" y="549" width="0.2074%" height="15" fill="rgb(235,10,37)" fg:x="22061" fg:w="66"/><text x="69.5915%" y="559.50"></text></g><g><title>alloc::alloc::alloc (66 samples, 0.21%)</title><rect x="69.3415%" y="533" width="0.2074%" height="15" fill="rgb(249,171,38)" fg:x="22061" fg:w="66"/><text x="69.5915%" y="543.50"></text></g><g><title>__rust_alloc (66 samples, 0.21%)</title><rect x="69.3415%" y="517" width="0.2074%" height="15" fill="rgb(242,144,32)" fg:x="22061" fg:w="66"/><text x="69.5915%" y="527.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (66 samples, 0.21%)</title><rect x="69.3415%" y="501" width="0.2074%" height="15" fill="rgb(217,117,21)" fg:x="22061" fg:w="66"/><text x="69.5915%" y="511.50"></text></g><g><title>dhat::Globals::get_pp_info (7 samples, 0.02%)</title><rect x="69.5490%" y="501" width="0.0220%" height="15" fill="rgb(249,87,1)" fg:x="22127" fg:w="7"/><text x="69.7990%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (6 samples, 0.02%)</title><rect x="69.5521%" y="485" width="0.0189%" height="15" fill="rgb(248,196,48)" fg:x="22128" fg:w="6"/><text x="69.8021%" y="495.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (6 samples, 0.02%)</title><rect x="69.5521%" y="469" width="0.0189%" height="15" fill="rgb(251,206,33)" fg:x="22128" fg:w="6"/><text x="69.8021%" y="479.50"></text></g><g><title>dhat::Globals::record_block (10 samples, 0.03%)</title><rect x="69.5710%" y="501" width="0.0314%" height="15" fill="rgb(232,141,28)" fg:x="22134" fg:w="10"/><text x="69.8210%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (9 samples, 0.03%)</title><rect x="69.5741%" y="485" width="0.0283%" height="15" fill="rgb(209,167,14)" fg:x="22135" fg:w="9"/><text x="69.8241%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9 samples, 0.03%)</title><rect x="69.5741%" y="469" width="0.0283%" height="15" fill="rgb(225,11,50)" fg:x="22135" fg:w="9"/><text x="69.8241%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (9 samples, 0.03%)</title><rect x="69.5741%" y="453" width="0.0283%" height="15" fill="rgb(209,50,20)" fg:x="22135" fg:w="9"/><text x="69.8241%" y="463.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (9 samples, 0.03%)</title><rect x="69.5741%" y="437" width="0.0283%" height="15" fill="rgb(212,17,46)" fg:x="22135" fg:w="9"/><text x="69.8241%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (9 samples, 0.03%)</title><rect x="69.5741%" y="421" width="0.0283%" height="15" fill="rgb(216,101,39)" fg:x="22135" fg:w="9"/><text x="69.8241%" y="431.50"></text></g><g><title>core::ptr::write (9 samples, 0.03%)</title><rect x="69.5741%" y="405" width="0.0283%" height="15" fill="rgb(212,228,48)" fg:x="22135" fg:w="9"/><text x="69.8241%" y="415.50"></text></g><g><title>_Unwind_Find_FDE (7 samples, 0.02%)</title><rect x="69.6307%" y="421" width="0.0220%" height="15" fill="rgb(250,6,50)" fg:x="22153" fg:w="7"/><text x="69.8807%" y="431.50"></text></g><g><title>__GI__dl_find_object (6 samples, 0.02%)</title><rect x="69.6338%" y="405" width="0.0189%" height="15" fill="rgb(250,160,48)" fg:x="22154" fg:w="6"/><text x="69.8838%" y="415.50"></text></g><g><title>&lt;backtrace::backtrace::Frame as core::clone::Clone&gt;::clone (11 samples, 0.03%)</title><rect x="69.6841%" y="373" width="0.0346%" height="15" fill="rgb(244,216,33)" fg:x="22170" fg:w="11"/><text x="69.9341%" y="383.50"></text></g><g><title>&lt;backtrace::backtrace::libunwind::Frame as core::clone::Clone&gt;::clone (11 samples, 0.03%)</title><rect x="69.6841%" y="357" width="0.0346%" height="15" fill="rgb(207,157,5)" fg:x="22170" fg:w="11"/><text x="69.9341%" y="367.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::symbol_address (9 samples, 0.03%)</title><rect x="69.6904%" y="341" width="0.0283%" height="15" fill="rgb(228,199,8)" fg:x="22172" fg:w="9"/><text x="69.9404%" y="351.50"></text></g><g><title>_Unwind_FindEnclosingFunction (9 samples, 0.03%)</title><rect x="69.6904%" y="325" width="0.0283%" height="15" fill="rgb(227,80,20)" fg:x="22172" fg:w="9"/><text x="69.9404%" y="335.50"></text></g><g><title>_Unwind_Find_FDE (9 samples, 0.03%)</title><rect x="69.6904%" y="309" width="0.0283%" height="15" fill="rgb(222,9,33)" fg:x="22172" fg:w="9"/><text x="69.9404%" y="319.50"></text></g><g><title>__GI__dl_find_object (8 samples, 0.03%)</title><rect x="69.6935%" y="293" width="0.0251%" height="15" fill="rgb(239,44,28)" fg:x="22173" fg:w="8"/><text x="69.9435%" y="303.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (53 samples, 0.17%)</title><rect x="69.6307%" y="469" width="0.1666%" height="15" fill="rgb(249,187,43)" fg:x="22153" fg:w="53"/><text x="69.8807%" y="479.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (53 samples, 0.17%)</title><rect x="69.6307%" y="453" width="0.1666%" height="15" fill="rgb(216,141,28)" fg:x="22153" fg:w="53"/><text x="69.8807%" y="463.50"></text></g><g><title>_Unwind_Backtrace (53 samples, 0.17%)</title><rect x="69.6307%" y="437" width="0.1666%" height="15" fill="rgb(230,154,53)" fg:x="22153" fg:w="53"/><text x="69.8807%" y="447.50"></text></g><g><title>backtrace::backtrace::libunwind::trace::trace_fn (46 samples, 0.14%)</title><rect x="69.6527%" y="421" width="0.1446%" height="15" fill="rgb(227,82,4)" fg:x="22160" fg:w="46"/><text x="69.9027%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (46 samples, 0.14%)</title><rect x="69.6527%" y="405" width="0.1446%" height="15" fill="rgb(220,107,16)" fg:x="22160" fg:w="46"/><text x="69.9027%" y="415.50"></text></g><g><title>dhat::new_backtrace_inner::{{closure}} (36 samples, 0.11%)</title><rect x="69.6841%" y="389" width="0.1132%" height="15" fill="rgb(207,187,2)" fg:x="22170" fg:w="36"/><text x="69.9341%" y="399.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (22 samples, 0.07%)</title><rect x="69.7281%" y="373" width="0.0691%" height="15" fill="rgb(210,162,52)" fg:x="22184" fg:w="22"/><text x="69.9781%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (22 samples, 0.07%)</title><rect x="69.7281%" y="357" width="0.0691%" height="15" fill="rgb(217,216,49)" fg:x="22184" fg:w="22"/><text x="69.9781%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (22 samples, 0.07%)</title><rect x="69.7281%" y="341" width="0.0691%" height="15" fill="rgb(218,146,49)" fg:x="22184" fg:w="22"/><text x="69.9781%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (22 samples, 0.07%)</title><rect x="69.7281%" y="325" width="0.0691%" height="15" fill="rgb(216,55,40)" fg:x="22184" fg:w="22"/><text x="69.9781%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (22 samples, 0.07%)</title><rect x="69.7281%" y="309" width="0.0691%" height="15" fill="rgb(208,196,21)" fg:x="22184" fg:w="22"/><text x="69.9781%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (22 samples, 0.07%)</title><rect x="69.7281%" y="293" width="0.0691%" height="15" fill="rgb(242,117,42)" fg:x="22184" fg:w="22"/><text x="69.9781%" y="303.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (22 samples, 0.07%)</title><rect x="69.7281%" y="277" width="0.0691%" height="15" fill="rgb(210,11,23)" fg:x="22184" fg:w="22"/><text x="69.9781%" y="287.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (22 samples, 0.07%)</title><rect x="69.7281%" y="261" width="0.0691%" height="15" fill="rgb(217,110,2)" fg:x="22184" fg:w="22"/><text x="69.9781%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (22 samples, 0.07%)</title><rect x="69.7281%" y="245" width="0.0691%" height="15" fill="rgb(229,77,54)" fg:x="22184" fg:w="22"/><text x="69.9781%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (80 samples, 0.25%)</title><rect x="69.5490%" y="709" width="0.2515%" height="15" fill="rgb(218,53,16)" fg:x="22127" fg:w="80"/><text x="69.7990%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (80 samples, 0.25%)</title><rect x="69.5490%" y="693" width="0.2515%" height="15" fill="rgb(215,38,13)" fg:x="22127" fg:w="80"/><text x="69.7990%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (80 samples, 0.25%)</title><rect x="69.5490%" y="677" width="0.2515%" height="15" fill="rgb(235,42,18)" fg:x="22127" fg:w="80"/><text x="69.7990%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (80 samples, 0.25%)</title><rect x="69.5490%" y="661" width="0.2515%" height="15" fill="rgb(219,66,54)" fg:x="22127" fg:w="80"/><text x="69.7990%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (80 samples, 0.25%)</title><rect x="69.5490%" y="645" width="0.2515%" height="15" fill="rgb(222,205,4)" fg:x="22127" fg:w="80"/><text x="69.7990%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (80 samples, 0.25%)</title><rect x="69.5490%" y="629" width="0.2515%" height="15" fill="rgb(227,213,46)" fg:x="22127" fg:w="80"/><text x="69.7990%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (80 samples, 0.25%)</title><rect x="69.5490%" y="613" width="0.2515%" height="15" fill="rgb(250,145,42)" fg:x="22127" fg:w="80"/><text x="69.7990%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (80 samples, 0.25%)</title><rect x="69.5490%" y="597" width="0.2515%" height="15" fill="rgb(219,15,2)" fg:x="22127" fg:w="80"/><text x="69.7990%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (80 samples, 0.25%)</title><rect x="69.5490%" y="581" width="0.2515%" height="15" fill="rgb(231,181,52)" fg:x="22127" fg:w="80"/><text x="69.7990%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (80 samples, 0.25%)</title><rect x="69.5490%" y="565" width="0.2515%" height="15" fill="rgb(235,1,42)" fg:x="22127" fg:w="80"/><text x="69.7990%" y="575.50"></text></g><g><title>alloc::alloc::alloc (80 samples, 0.25%)</title><rect x="69.5490%" y="549" width="0.2515%" height="15" fill="rgb(249,88,27)" fg:x="22127" fg:w="80"/><text x="69.7990%" y="559.50"></text></g><g><title>__rust_alloc (80 samples, 0.25%)</title><rect x="69.5490%" y="533" width="0.2515%" height="15" fill="rgb(235,145,16)" fg:x="22127" fg:w="80"/><text x="69.7990%" y="543.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (80 samples, 0.25%)</title><rect x="69.5490%" y="517" width="0.2515%" height="15" fill="rgb(237,114,19)" fg:x="22127" fg:w="80"/><text x="69.7990%" y="527.50"></text></g><g><title>dhat::new_backtrace_inner (63 samples, 0.20%)</title><rect x="69.6024%" y="501" width="0.1980%" height="15" fill="rgb(238,51,50)" fg:x="22144" fg:w="63"/><text x="69.8524%" y="511.50"></text></g><g><title>backtrace::backtrace::trace (56 samples, 0.18%)</title><rect x="69.6244%" y="485" width="0.1760%" height="15" fill="rgb(205,194,25)" fg:x="22151" fg:w="56"/><text x="69.8744%" y="495.50"></text></g><g><title>&lt;absim::graph_utils::SimulationGraph as core::clone::Clone&gt;::clone (154 samples, 0.48%)</title><rect x="69.3384%" y="789" width="0.4840%" height="15" fill="rgb(215,203,17)" fg:x="22060" fg:w="154"/><text x="69.5884%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (154 samples, 0.48%)</title><rect x="69.3384%" y="773" width="0.4840%" height="15" fill="rgb(233,112,49)" fg:x="22060" fg:w="154"/><text x="69.5884%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (154 samples, 0.48%)</title><rect x="69.3384%" y="757" width="0.4840%" height="15" fill="rgb(241,130,26)" fg:x="22060" fg:w="154"/><text x="69.5884%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (154 samples, 0.48%)</title><rect x="69.3384%" y="741" width="0.4840%" height="15" fill="rgb(252,223,19)" fg:x="22060" fg:w="154"/><text x="69.5884%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (154 samples, 0.48%)</title><rect x="69.3384%" y="725" width="0.4840%" height="15" fill="rgb(211,95,25)" fg:x="22060" fg:w="154"/><text x="69.5884%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.02%)</title><rect x="69.8004%" y="709" width="0.0220%" height="15" fill="rgb(251,182,27)" fg:x="22207" fg:w="7"/><text x="70.0504%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.02%)</title><rect x="69.8004%" y="693" width="0.0220%" height="15" fill="rgb(238,24,4)" fg:x="22207" fg:w="7"/><text x="70.0504%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (7 samples, 0.02%)</title><rect x="69.8004%" y="677" width="0.0220%" height="15" fill="rgb(224,220,25)" fg:x="22207" fg:w="7"/><text x="70.0504%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (7 samples, 0.02%)</title><rect x="69.8004%" y="661" width="0.0220%" height="15" fill="rgb(239,133,26)" fg:x="22207" fg:w="7"/><text x="70.0504%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.02%)</title><rect x="69.8004%" y="645" width="0.0220%" height="15" fill="rgb(211,94,48)" fg:x="22207" fg:w="7"/><text x="70.0504%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.02%)</title><rect x="69.8004%" y="629" width="0.0220%" height="15" fill="rgb(239,87,6)" fg:x="22207" fg:w="7"/><text x="70.0504%" y="639.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.02%)</title><rect x="69.8004%" y="613" width="0.0220%" height="15" fill="rgb(227,62,0)" fg:x="22207" fg:w="7"/><text x="70.0504%" y="623.50"></text></g><g><title>__rust_alloc (7 samples, 0.02%)</title><rect x="69.8004%" y="597" width="0.0220%" height="15" fill="rgb(211,226,4)" fg:x="22207" fg:w="7"/><text x="70.0504%" y="607.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (7 samples, 0.02%)</title><rect x="69.8004%" y="581" width="0.0220%" height="15" fill="rgb(253,38,52)" fg:x="22207" fg:w="7"/><text x="70.0504%" y="591.50"></text></g><g><title>dhat::new_backtrace_inner (6 samples, 0.02%)</title><rect x="69.8036%" y="565" width="0.0189%" height="15" fill="rgb(229,126,40)" fg:x="22208" fg:w="6"/><text x="70.0536%" y="575.50"></text></g><g><title>backtrace::backtrace::trace (6 samples, 0.02%)</title><rect x="69.8036%" y="549" width="0.0189%" height="15" fill="rgb(229,165,44)" fg:x="22208" fg:w="6"/><text x="70.0536%" y="559.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (6 samples, 0.02%)</title><rect x="69.8036%" y="533" width="0.0189%" height="15" fill="rgb(247,95,47)" fg:x="22208" fg:w="6"/><text x="70.0536%" y="543.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (6 samples, 0.02%)</title><rect x="69.8036%" y="517" width="0.0189%" height="15" fill="rgb(216,140,30)" fg:x="22208" fg:w="6"/><text x="70.0536%" y="527.50"></text></g><g><title>_Unwind_Backtrace (6 samples, 0.02%)</title><rect x="69.8036%" y="501" width="0.0189%" height="15" fill="rgb(246,214,8)" fg:x="22208" fg:w="6"/><text x="70.0536%" y="511.50"></text></g><g><title>_Unwind_Find_FDE (6 samples, 0.02%)</title><rect x="69.8036%" y="485" width="0.0189%" height="15" fill="rgb(227,224,15)" fg:x="22208" fg:w="6"/><text x="70.0536%" y="495.50"></text></g><g><title>__GI__dl_find_object (6 samples, 0.02%)</title><rect x="69.8036%" y="469" width="0.0189%" height="15" fill="rgb(233,175,4)" fg:x="22208" fg:w="6"/><text x="70.0536%" y="479.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (4 samples, 0.01%)</title><rect x="69.8224%" y="469" width="0.0126%" height="15" fill="rgb(221,66,45)" fg:x="22214" fg:w="4"/><text x="70.0724%" y="479.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (4 samples, 0.01%)</title><rect x="69.8224%" y="453" width="0.0126%" height="15" fill="rgb(221,178,18)" fg:x="22214" fg:w="4"/><text x="70.0724%" y="463.50"></text></g><g><title>_Unwind_Backtrace (4 samples, 0.01%)</title><rect x="69.8224%" y="437" width="0.0126%" height="15" fill="rgb(213,81,29)" fg:x="22214" fg:w="4"/><text x="70.0724%" y="447.50"></text></g><g><title>&lt;briolette_sim::SyncState as core::clone::Clone&gt;::clone (5 samples, 0.02%)</title><rect x="69.8224%" y="725" width="0.0157%" height="15" fill="rgb(220,89,49)" fg:x="22214" fg:w="5"/><text x="70.0724%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.02%)</title><rect x="69.8224%" y="709" width="0.0157%" height="15" fill="rgb(227,60,33)" fg:x="22214" fg:w="5"/><text x="70.0724%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.02%)</title><rect x="69.8224%" y="693" width="0.0157%" height="15" fill="rgb(205,113,12)" fg:x="22214" fg:w="5"/><text x="70.0724%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="69.8224%" y="677" width="0.0157%" height="15" fill="rgb(211,32,1)" fg:x="22214" fg:w="5"/><text x="70.0724%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.02%)</title><rect x="69.8224%" y="661" width="0.0157%" height="15" fill="rgb(246,2,12)" fg:x="22214" fg:w="5"/><text x="70.0724%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.02%)</title><rect x="69.8224%" y="645" width="0.0157%" height="15" fill="rgb(243,37,27)" fg:x="22214" fg:w="5"/><text x="70.0724%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.02%)</title><rect x="69.8224%" y="629" width="0.0157%" height="15" fill="rgb(248,211,31)" fg:x="22214" fg:w="5"/><text x="70.0724%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (5 samples, 0.02%)</title><rect x="69.8224%" y="613" width="0.0157%" height="15" fill="rgb(242,146,47)" fg:x="22214" fg:w="5"/><text x="70.0724%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (5 samples, 0.02%)</title><rect x="69.8224%" y="597" width="0.0157%" height="15" fill="rgb(206,70,20)" fg:x="22214" fg:w="5"/><text x="70.0724%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.02%)</title><rect x="69.8224%" y="581" width="0.0157%" height="15" fill="rgb(215,10,51)" fg:x="22214" fg:w="5"/><text x="70.0724%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.02%)</title><rect x="69.8224%" y="565" width="0.0157%" height="15" fill="rgb(243,178,53)" fg:x="22214" fg:w="5"/><text x="70.0724%" y="575.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.02%)</title><rect x="69.8224%" y="549" width="0.0157%" height="15" fill="rgb(233,221,20)" fg:x="22214" fg:w="5"/><text x="70.0724%" y="559.50"></text></g><g><title>__rust_alloc (5 samples, 0.02%)</title><rect x="69.8224%" y="533" width="0.0157%" height="15" fill="rgb(218,95,35)" fg:x="22214" fg:w="5"/><text x="70.0724%" y="543.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (5 samples, 0.02%)</title><rect x="69.8224%" y="517" width="0.0157%" height="15" fill="rgb(229,13,5)" fg:x="22214" fg:w="5"/><text x="70.0724%" y="527.50"></text></g><g><title>dhat::new_backtrace_inner (5 samples, 0.02%)</title><rect x="69.8224%" y="501" width="0.0157%" height="15" fill="rgb(252,164,30)" fg:x="22214" fg:w="5"/><text x="70.0724%" y="511.50"></text></g><g><title>backtrace::backtrace::trace (5 samples, 0.02%)</title><rect x="69.8224%" y="485" width="0.0157%" height="15" fill="rgb(232,68,36)" fg:x="22214" fg:w="5"/><text x="70.0724%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.03%)</title><rect x="69.8224%" y="789" width="0.0251%" height="15" fill="rgb(219,59,54)" fg:x="22214" fg:w="8"/><text x="70.0724%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8 samples, 0.03%)</title><rect x="69.8224%" y="773" width="0.0251%" height="15" fill="rgb(250,92,33)" fg:x="22214" fg:w="8"/><text x="70.0724%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.03%)</title><rect x="69.8224%" y="757" width="0.0251%" height="15" fill="rgb(229,162,54)" fg:x="22214" fg:w="8"/><text x="70.0724%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 0.03%)</title><rect x="69.8224%" y="741" width="0.0251%" height="15" fill="rgb(244,114,52)" fg:x="22214" fg:w="8"/><text x="70.0724%" y="751.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.01%)</title><rect x="69.8476%" y="597" width="0.0126%" height="15" fill="rgb(212,211,43)" fg:x="22222" fg:w="4"/><text x="70.0976%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.01%)</title><rect x="69.8476%" y="581" width="0.0126%" height="15" fill="rgb(226,147,8)" fg:x="22222" fg:w="4"/><text x="70.0976%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.01%)</title><rect x="69.8476%" y="565" width="0.0126%" height="15" fill="rgb(226,23,13)" fg:x="22222" fg:w="4"/><text x="70.0976%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4 samples, 0.01%)</title><rect x="69.8476%" y="549" width="0.0126%" height="15" fill="rgb(240,63,4)" fg:x="22222" fg:w="4"/><text x="70.0976%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.01%)</title><rect x="69.8476%" y="533" width="0.0126%" height="15" fill="rgb(221,1,32)" fg:x="22222" fg:w="4"/><text x="70.0976%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (5 samples, 0.02%)</title><rect x="69.8476%" y="661" width="0.0157%" height="15" fill="rgb(242,117,10)" fg:x="22222" fg:w="5"/><text x="70.0976%" y="671.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (5 samples, 0.02%)</title><rect x="69.8476%" y="645" width="0.0157%" height="15" fill="rgb(249,172,44)" fg:x="22222" fg:w="5"/><text x="70.0976%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.02%)</title><rect x="69.8476%" y="629" width="0.0157%" height="15" fill="rgb(244,46,45)" fg:x="22222" fg:w="5"/><text x="70.0976%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.02%)</title><rect x="69.8476%" y="613" width="0.0157%" height="15" fill="rgb(206,43,17)" fg:x="22222" fg:w="5"/><text x="70.0976%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (6 samples, 0.02%)</title><rect x="69.8633%" y="661" width="0.0189%" height="15" fill="rgb(239,218,39)" fg:x="22227" fg:w="6"/><text x="70.1133%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (6 samples, 0.02%)</title><rect x="69.8633%" y="645" width="0.0189%" height="15" fill="rgb(208,169,54)" fg:x="22227" fg:w="6"/><text x="70.1133%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (6 samples, 0.02%)</title><rect x="69.8633%" y="629" width="0.0189%" height="15" fill="rgb(247,25,42)" fg:x="22227" fg:w="6"/><text x="70.1133%" y="639.50"></text></g><g><title>core::intrinsics::unlikely (6 samples, 0.02%)</title><rect x="69.8633%" y="613" width="0.0189%" height="15" fill="rgb(226,23,31)" fg:x="22227" fg:w="6"/><text x="70.1133%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (22 samples, 0.07%)</title><rect x="69.8476%" y="757" width="0.0691%" height="15" fill="rgb(247,16,28)" fg:x="22222" fg:w="22"/><text x="70.0976%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (22 samples, 0.07%)</title><rect x="69.8476%" y="741" width="0.0691%" height="15" fill="rgb(231,147,38)" fg:x="22222" fg:w="22"/><text x="70.0976%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (22 samples, 0.07%)</title><rect x="69.8476%" y="725" width="0.0691%" height="15" fill="rgb(253,81,48)" fg:x="22222" fg:w="22"/><text x="70.0976%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (22 samples, 0.07%)</title><rect x="69.8476%" y="709" width="0.0691%" height="15" fill="rgb(249,222,43)" fg:x="22222" fg:w="22"/><text x="70.0976%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (22 samples, 0.07%)</title><rect x="69.8476%" y="693" width="0.0691%" height="15" fill="rgb(221,3,27)" fg:x="22222" fg:w="22"/><text x="70.0976%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (22 samples, 0.07%)</title><rect x="69.8476%" y="677" width="0.0691%" height="15" fill="rgb(228,180,5)" fg:x="22222" fg:w="22"/><text x="70.0976%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (11 samples, 0.03%)</title><rect x="69.8821%" y="661" width="0.0346%" height="15" fill="rgb(227,131,42)" fg:x="22233" fg:w="11"/><text x="70.1321%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (11 samples, 0.03%)</title><rect x="69.8821%" y="645" width="0.0346%" height="15" fill="rgb(212,3,39)" fg:x="22233" fg:w="11"/><text x="70.1321%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (11 samples, 0.03%)</title><rect x="69.8821%" y="629" width="0.0346%" height="15" fill="rgb(226,45,5)" fg:x="22233" fg:w="11"/><text x="70.1321%" y="639.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (11 samples, 0.03%)</title><rect x="69.8821%" y="613" width="0.0346%" height="15" fill="rgb(215,167,45)" fg:x="22233" fg:w="11"/><text x="70.1321%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.03%)</title><rect x="69.8821%" y="597" width="0.0346%" height="15" fill="rgb(250,218,53)" fg:x="22233" fg:w="11"/><text x="70.1321%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.03%)</title><rect x="69.8821%" y="581" width="0.0346%" height="15" fill="rgb(207,140,0)" fg:x="22233" fg:w="11"/><text x="70.1321%" y="591.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.03%)</title><rect x="69.8821%" y="565" width="0.0346%" height="15" fill="rgb(238,133,51)" fg:x="22233" fg:w="11"/><text x="70.1321%" y="575.50"></text></g><g><title>__rust_alloc (11 samples, 0.03%)</title><rect x="69.8821%" y="549" width="0.0346%" height="15" fill="rgb(218,203,53)" fg:x="22233" fg:w="11"/><text x="70.1321%" y="559.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (10 samples, 0.03%)</title><rect x="69.8853%" y="533" width="0.0314%" height="15" fill="rgb(226,184,25)" fg:x="22234" fg:w="10"/><text x="70.1353%" y="543.50"></text></g><g><title>dhat::new_backtrace_inner (6 samples, 0.02%)</title><rect x="69.8978%" y="517" width="0.0189%" height="15" fill="rgb(231,121,21)" fg:x="22238" fg:w="6"/><text x="70.1478%" y="527.50"></text></g><g><title>backtrace::backtrace::trace (6 samples, 0.02%)</title><rect x="69.8978%" y="501" width="0.0189%" height="15" fill="rgb(251,14,34)" fg:x="22238" fg:w="6"/><text x="70.1478%" y="511.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (6 samples, 0.02%)</title><rect x="69.8978%" y="485" width="0.0189%" height="15" fill="rgb(249,193,11)" fg:x="22238" fg:w="6"/><text x="70.1478%" y="495.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (6 samples, 0.02%)</title><rect x="69.8978%" y="469" width="0.0189%" height="15" fill="rgb(220,172,37)" fg:x="22238" fg:w="6"/><text x="70.1478%" y="479.50"></text></g><g><title>_Unwind_Backtrace (6 samples, 0.02%)</title><rect x="69.8978%" y="453" width="0.0189%" height="15" fill="rgb(231,229,43)" fg:x="22238" fg:w="6"/><text x="70.1478%" y="463.50"></text></g><g><title>backtrace::backtrace::libunwind::trace::trace_fn (5 samples, 0.02%)</title><rect x="69.9010%" y="437" width="0.0157%" height="15" fill="rgb(250,161,5)" fg:x="22239" fg:w="5"/><text x="70.1510%" y="447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (4 samples, 0.01%)</title><rect x="69.9041%" y="421" width="0.0126%" height="15" fill="rgb(218,225,18)" fg:x="22240" fg:w="4"/><text x="70.1541%" y="431.50"></text></g><g><title>dhat::new_backtrace_inner::{{closure}} (4 samples, 0.01%)</title><rect x="69.9041%" y="405" width="0.0126%" height="15" fill="rgb(245,45,42)" fg:x="22240" fg:w="4"/><text x="70.1541%" y="415.50"></text></g><g><title>&lt;briolette_sim::simulator::Simulator as absim::Simulation&gt;::worldview (241 samples, 0.76%)</title><rect x="69.1655%" y="805" width="0.7575%" height="15" fill="rgb(211,115,1)" fg:x="22005" fg:w="241"/><text x="69.4155%" y="815.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (24 samples, 0.08%)</title><rect x="69.8476%" y="789" width="0.0754%" height="15" fill="rgb(248,133,52)" fg:x="22222" fg:w="24"/><text x="70.0976%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (24 samples, 0.08%)</title><rect x="69.8476%" y="773" width="0.0754%" height="15" fill="rgb(238,100,21)" fg:x="22222" fg:w="24"/><text x="70.0976%" y="783.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (44 samples, 0.14%)</title><rect x="69.9324%" y="725" width="0.1383%" height="15" fill="rgb(247,144,11)" fg:x="22249" fg:w="44"/><text x="70.1824%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (44 samples, 0.14%)</title><rect x="69.9324%" y="709" width="0.1383%" height="15" fill="rgb(206,164,16)" fg:x="22249" fg:w="44"/><text x="70.1824%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (44 samples, 0.14%)</title><rect x="69.9324%" y="693" width="0.1383%" height="15" fill="rgb(222,34,3)" fg:x="22249" fg:w="44"/><text x="70.1824%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (44 samples, 0.14%)</title><rect x="69.9324%" y="677" width="0.1383%" height="15" fill="rgb(248,82,4)" fg:x="22249" fg:w="44"/><text x="70.1824%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (44 samples, 0.14%)</title><rect x="69.9324%" y="661" width="0.1383%" height="15" fill="rgb(228,81,46)" fg:x="22249" fg:w="44"/><text x="70.1824%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (44 samples, 0.14%)</title><rect x="69.9324%" y="645" width="0.1383%" height="15" fill="rgb(227,67,47)" fg:x="22249" fg:w="44"/><text x="70.1824%" y="655.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (44 samples, 0.14%)</title><rect x="69.9324%" y="629" width="0.1383%" height="15" fill="rgb(215,93,53)" fg:x="22249" fg:w="44"/><text x="70.1824%" y="639.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (44 samples, 0.14%)</title><rect x="69.9324%" y="613" width="0.1383%" height="15" fill="rgb(248,194,39)" fg:x="22249" fg:w="44"/><text x="70.1824%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (44 samples, 0.14%)</title><rect x="69.9324%" y="597" width="0.1383%" height="15" fill="rgb(215,5,19)" fg:x="22249" fg:w="44"/><text x="70.1824%" y="607.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::dealloc (50 samples, 0.16%)</title><rect x="69.9230%" y="741" width="0.1572%" height="15" fill="rgb(226,215,51)" fg:x="22246" fg:w="50"/><text x="70.1730%" y="751.50"></text></g><g><title>mintex::Mutex&lt;T&gt;::lock (85 samples, 0.27%)</title><rect x="70.2122%" y="501" width="0.2672%" height="15" fill="rgb(225,56,26)" fg:x="22338" fg:w="85"/><text x="70.4622%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (85 samples, 0.27%)</title><rect x="70.2122%" y="485" width="0.2672%" height="15" fill="rgb(222,75,29)" fg:x="22338" fg:w="85"/><text x="70.4622%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (85 samples, 0.27%)</title><rect x="70.2122%" y="469" width="0.2672%" height="15" fill="rgb(236,139,6)" fg:x="22338" fg:w="85"/><text x="70.4622%" y="479.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (2,118 samples, 6.66%)</title><rect x="70.4793%" y="501" width="6.6572%" height="15" fill="rgb(223,137,36)" fg:x="22423" fg:w="2118"/><text x="70.7293%" y="511.50">std::coll..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (2,118 samples, 6.66%)</title><rect x="70.4793%" y="485" width="6.6572%" height="15" fill="rgb(226,99,2)" fg:x="22423" fg:w="2118"/><text x="70.7293%" y="495.50">hashbrown..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (2,118 samples, 6.66%)</title><rect x="70.4793%" y="469" width="6.6572%" height="15" fill="rgb(206,133,23)" fg:x="22423" fg:w="2118"/><text x="70.7293%" y="479.50">hashbrown..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (2,118 samples, 6.66%)</title><rect x="70.4793%" y="453" width="6.6572%" height="15" fill="rgb(243,173,15)" fg:x="22423" fg:w="2118"/><text x="70.7293%" y="463.50">hashbrown..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2,118 samples, 6.66%)</title><rect x="70.4793%" y="437" width="6.6572%" height="15" fill="rgb(228,69,28)" fg:x="22423" fg:w="2118"/><text x="70.7293%" y="447.50">hashbrown..</text></g><g><title>hashbrown::raw::RawTableInner::find_inner (2,118 samples, 6.66%)</title><rect x="70.4793%" y="421" width="6.6572%" height="15" fill="rgb(212,51,22)" fg:x="22423" fg:w="2118"/><text x="70.7293%" y="431.50">hashbrown..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (2,118 samples, 6.66%)</title><rect x="70.4793%" y="405" width="6.6572%" height="15" fill="rgb(227,113,0)" fg:x="22423" fg:w="2118"/><text x="70.7293%" y="415.50">hashbrown..</text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (2,118 samples, 6.66%)</title><rect x="70.4793%" y="389" width="6.6572%" height="15" fill="rgb(252,84,27)" fg:x="22423" fg:w="2118"/><text x="70.7293%" y="399.50">hashbrown..</text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (2,118 samples, 6.66%)</title><rect x="70.4793%" y="373" width="6.6572%" height="15" fill="rgb(223,145,39)" fg:x="22423" fg:w="2118"/><text x="70.7293%" y="383.50">&lt;Q as has..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2,118 samples, 6.66%)</title><rect x="70.4793%" y="357" width="6.6572%" height="15" fill="rgb(239,219,30)" fg:x="22423" fg:w="2118"/><text x="70.7293%" y="367.50">core::cmp..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (2,118 samples, 6.66%)</title><rect x="70.4793%" y="341" width="6.6572%" height="15" fill="rgb(224,196,39)" fg:x="22423" fg:w="2118"/><text x="70.7293%" y="351.50">core::cmp..</text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_default (24 samples, 0.08%)</title><rect x="77.1366%" y="453" width="0.0754%" height="15" fill="rgb(205,35,43)" fg:x="24541" fg:w="24"/><text x="77.3866%" y="463.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (52 samples, 0.16%)</title><rect x="77.1366%" y="485" width="0.1634%" height="15" fill="rgb(228,201,21)" fg:x="24541" fg:w="52"/><text x="77.3866%" y="495.50"></text></g><g><title>std::time::Instant::duration_since (52 samples, 0.16%)</title><rect x="77.1366%" y="469" width="0.1634%" height="15" fill="rgb(237,118,16)" fg:x="24541" fg:w="52"/><text x="77.3866%" y="479.50"></text></g><g><title>std::time::Instant::checked_duration_since (28 samples, 0.09%)</title><rect x="77.2120%" y="453" width="0.0880%" height="15" fill="rgb(241,17,19)" fg:x="24565" fg:w="28"/><text x="77.4620%" y="463.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (28 samples, 0.09%)</title><rect x="77.2120%" y="437" width="0.0880%" height="15" fill="rgb(214,10,25)" fg:x="24565" fg:w="28"/><text x="77.4620%" y="447.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (28 samples, 0.09%)</title><rect x="77.2120%" y="421" width="0.0880%" height="15" fill="rgb(238,37,29)" fg:x="24565" fg:w="28"/><text x="77.4620%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;briolette_sim::EventData&gt; (2,308 samples, 7.25%)</title><rect x="70.0802%" y="741" width="7.2544%" height="15" fill="rgb(253,83,25)" fg:x="22296" fg:w="2308"/><text x="70.3302%" y="751.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;briolette_sim::PopulationAdd&gt; (2,308 samples, 7.25%)</title><rect x="70.0802%" y="725" width="7.2544%" height="15" fill="rgb(234,192,12)" fg:x="22296" fg:w="2308"/><text x="70.3302%" y="735.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;briolette_sim::AgentData&gt; (2,308 samples, 7.25%)</title><rect x="70.0802%" y="709" width="7.2544%" height="15" fill="rgb(241,216,45)" fg:x="22296" fg:w="2308"/><text x="70.3302%" y="719.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;briolette_sim::Coin&gt;&gt; (2,308 samples, 7.25%)</title><rect x="70.0802%" y="693" width="7.2544%" height="15" fill="rgb(242,22,33)" fg:x="22296" fg:w="2308"/><text x="70.3302%" y="703.50">core::ptr:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,308 samples, 7.25%)</title><rect x="70.0802%" y="677" width="7.2544%" height="15" fill="rgb(231,105,49)" fg:x="22296" fg:w="2308"/><text x="70.3302%" y="687.50">&lt;alloc::ve..</text></g><g><title>core::ptr::drop_in_place&lt;[briolette_sim::Coin]&gt; (2,308 samples, 7.25%)</title><rect x="70.0802%" y="661" width="7.2544%" height="15" fill="rgb(218,204,15)" fg:x="22296" fg:w="2308"/><text x="70.3302%" y="671.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;briolette_sim::Coin&gt; (2,308 samples, 7.25%)</title><rect x="70.0802%" y="645" width="7.2544%" height="15" fill="rgb(235,138,41)" fg:x="22296" fg:w="2308"/><text x="70.3302%" y="655.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (2,308 samples, 7.25%)</title><rect x="70.0802%" y="629" width="7.2544%" height="15" fill="rgb(246,0,9)" fg:x="22296" fg:w="2308"/><text x="70.3302%" y="639.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (2,308 samples, 7.25%)</title><rect x="70.0802%" y="613" width="7.2544%" height="15" fill="rgb(210,74,4)" fg:x="22296" fg:w="2308"/><text x="70.3302%" y="623.50">core::ptr:..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,308 samples, 7.25%)</title><rect x="70.0802%" y="597" width="7.2544%" height="15" fill="rgb(250,60,41)" fg:x="22296" fg:w="2308"/><text x="70.3302%" y="607.50">&lt;alloc::ra..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,308 samples, 7.25%)</title><rect x="70.0802%" y="581" width="7.2544%" height="15" fill="rgb(220,115,12)" fg:x="22296" fg:w="2308"/><text x="70.3302%" y="591.50">alloc::raw..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,308 samples, 7.25%)</title><rect x="70.0802%" y="565" width="7.2544%" height="15" fill="rgb(237,100,13)" fg:x="22296" fg:w="2308"/><text x="70.3302%" y="575.50">&lt;alloc::al..</text></g><g><title>alloc::alloc::dealloc (2,308 samples, 7.25%)</title><rect x="70.0802%" y="549" width="7.2544%" height="15" fill="rgb(213,55,26)" fg:x="22296" fg:w="2308"/><text x="70.3302%" y="559.50">alloc::all..</text></g><g><title>__rust_dealloc (2,308 samples, 7.25%)</title><rect x="70.0802%" y="533" width="7.2544%" height="15" fill="rgb(216,17,4)" fg:x="22296" fg:w="2308"/><text x="70.3302%" y="543.50">__rust_dea..</text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::dealloc (2,270 samples, 7.13%)</title><rect x="70.1996%" y="517" width="7.1350%" height="15" fill="rgb(220,153,47)" fg:x="22334" fg:w="2270"/><text x="70.4496%" y="527.50">&lt;dhat::All..</text></g><g><title>std::time::Instant::elapsed (63 samples, 0.20%)</title><rect x="77.1366%" y="501" width="0.1980%" height="15" fill="rgb(215,131,9)" fg:x="24541" fg:w="63"/><text x="77.3866%" y="511.50"></text></g><g><title>std::time::Instant::now (11 samples, 0.03%)</title><rect x="77.3000%" y="485" width="0.0346%" height="15" fill="rgb(233,46,42)" fg:x="24593" fg:w="11"/><text x="77.5500%" y="495.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (11 samples, 0.03%)</title><rect x="77.3000%" y="469" width="0.0346%" height="15" fill="rgb(226,86,7)" fg:x="24593" fg:w="11"/><text x="77.5500%" y="479.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (7 samples, 0.02%)</title><rect x="77.3126%" y="453" width="0.0220%" height="15" fill="rgb(239,226,21)" fg:x="24597" fg:w="7"/><text x="77.5626%" y="463.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (7 samples, 0.02%)</title><rect x="77.3126%" y="437" width="0.0220%" height="15" fill="rgb(244,137,22)" fg:x="24597" fg:w="7"/><text x="77.5626%" y="447.50"></text></g><g><title>absim::EventQueue&lt;S&gt;::clear (2,387 samples, 7.50%)</title><rect x="69.9230%" y="805" width="7.5028%" height="15" fill="rgb(211,139,35)" fg:x="22246" fg:w="2387"/><text x="70.1730%" y="815.50">absim::Eve..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (2,387 samples, 7.50%)</title><rect x="69.9230%" y="789" width="7.5028%" height="15" fill="rgb(214,62,50)" fg:x="22246" fg:w="2387"/><text x="70.1730%" y="799.50">alloc::vec..</text></g><g><title>core::ptr::drop_in_place&lt;[absim::Event&lt;briolette_sim::EventData&gt;]&gt; (2,387 samples, 7.50%)</title><rect x="69.9230%" y="773" width="7.5028%" height="15" fill="rgb(212,113,44)" fg:x="22246" fg:w="2387"/><text x="70.1730%" y="783.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;absim::Event&lt;briolette_sim::EventData&gt;&gt; (2,387 samples, 7.50%)</title><rect x="69.9230%" y="757" width="7.5028%" height="15" fill="rgb(226,150,43)" fg:x="22246" fg:w="2387"/><text x="70.1730%" y="767.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;briolette_sim::Statistics&gt; (29 samples, 0.09%)</title><rect x="77.3346%" y="741" width="0.0912%" height="15" fill="rgb(250,71,37)" fg:x="24604" fg:w="29"/><text x="77.5846%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;briolette_sim::EpochSampleStats&gt;&gt; (29 samples, 0.09%)</title><rect x="77.3346%" y="725" width="0.0912%" height="15" fill="rgb(219,76,19)" fg:x="24604" fg:w="29"/><text x="77.5846%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;briolette_sim::EpochSampleStats&gt;&gt; (29 samples, 0.09%)</title><rect x="77.3346%" y="709" width="0.0912%" height="15" fill="rgb(250,39,11)" fg:x="24604" fg:w="29"/><text x="77.5846%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.09%)</title><rect x="77.3346%" y="693" width="0.0912%" height="15" fill="rgb(230,64,31)" fg:x="24604" fg:w="29"/><text x="77.5846%" y="703.50"></text></g><g><title>mintex::Mutex&lt;T&gt;::lock (4 samples, 0.01%)</title><rect x="77.4257%" y="565" width="0.0126%" height="15" fill="rgb(208,222,23)" fg:x="24633" fg:w="4"/><text x="77.6757%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (4 samples, 0.01%)</title><rect x="77.4257%" y="549" width="0.0126%" height="15" fill="rgb(227,125,18)" fg:x="24633" fg:w="4"/><text x="77.6757%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4 samples, 0.01%)</title><rect x="77.4257%" y="533" width="0.0126%" height="15" fill="rgb(234,210,9)" fg:x="24633" fg:w="4"/><text x="77.6757%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;absim::graph_utils::Vertex&gt;&gt; (6 samples, 0.02%)</title><rect x="77.4257%" y="757" width="0.0189%" height="15" fill="rgb(217,127,24)" fg:x="24633" fg:w="6"/><text x="77.6757%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="77.4257%" y="741" width="0.0189%" height="15" fill="rgb(239,141,48)" fg:x="24633" fg:w="6"/><text x="77.6757%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;[absim::graph_utils::Vertex]&gt; (6 samples, 0.02%)</title><rect x="77.4257%" y="725" width="0.0189%" height="15" fill="rgb(227,109,8)" fg:x="24633" fg:w="6"/><text x="77.6757%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;absim::graph_utils::Vertex&gt; (6 samples, 0.02%)</title><rect x="77.4257%" y="709" width="0.0189%" height="15" fill="rgb(235,184,23)" fg:x="24633" fg:w="6"/><text x="77.6757%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (6 samples, 0.02%)</title><rect x="77.4257%" y="693" width="0.0189%" height="15" fill="rgb(227,226,48)" fg:x="24633" fg:w="6"/><text x="77.6757%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (6 samples, 0.02%)</title><rect x="77.4257%" y="677" width="0.0189%" height="15" fill="rgb(206,150,11)" fg:x="24633" fg:w="6"/><text x="77.6757%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="77.4257%" y="661" width="0.0189%" height="15" fill="rgb(254,2,33)" fg:x="24633" fg:w="6"/><text x="77.6757%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (6 samples, 0.02%)</title><rect x="77.4257%" y="645" width="0.0189%" height="15" fill="rgb(243,160,20)" fg:x="24633" fg:w="6"/><text x="77.6757%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.02%)</title><rect x="77.4257%" y="629" width="0.0189%" height="15" fill="rgb(218,208,30)" fg:x="24633" fg:w="6"/><text x="77.6757%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.02%)</title><rect x="77.4257%" y="613" width="0.0189%" height="15" fill="rgb(224,120,49)" fg:x="24633" fg:w="6"/><text x="77.6757%" y="623.50"></text></g><g><title>__rust_dealloc (6 samples, 0.02%)</title><rect x="77.4257%" y="597" width="0.0189%" height="15" fill="rgb(246,12,2)" fg:x="24633" fg:w="6"/><text x="77.6757%" y="607.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::dealloc (6 samples, 0.02%)</title><rect x="77.4257%" y="581" width="0.0189%" height="15" fill="rgb(236,117,3)" fg:x="24633" fg:w="6"/><text x="77.6757%" y="591.50"></text></g><g><title>&lt;absim::Manager&lt;S&gt; as absim::ManagerInterface&lt;S&gt;&gt;::run (20,142 samples, 63.31%)</title><rect x="14.1946%" y="821" width="63.3098%" height="15" fill="rgb(216,128,52)" fg:x="4516" fg:w="20142"/><text x="14.4446%" y="831.50">&lt;absim::Manager&lt;S&gt; as absim::ManagerInterface&lt;S&gt;&gt;::run</text></g><g><title>core::ptr::drop_in_place&lt;absim::WorldView&lt;briolette_sim::simulator::Simulator&gt;&gt; (25 samples, 0.08%)</title><rect x="77.4257%" y="805" width="0.0786%" height="15" fill="rgb(246,145,19)" fg:x="24633" fg:w="25"/><text x="77.6757%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;briolette_sim::ViewData&gt; (25 samples, 0.08%)</title><rect x="77.4257%" y="789" width="0.0786%" height="15" fill="rgb(222,11,46)" fg:x="24633" fg:w="25"/><text x="77.6757%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;absim::graph_utils::SimulationGraph&gt; (25 samples, 0.08%)</title><rect x="77.4257%" y="773" width="0.0786%" height="15" fill="rgb(245,82,36)" fg:x="24633" fg:w="25"/><text x="77.6757%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;usize&gt;&gt;&gt; (19 samples, 0.06%)</title><rect x="77.4446%" y="757" width="0.0597%" height="15" fill="rgb(250,73,51)" fg:x="24639" fg:w="19"/><text x="77.6946%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.06%)</title><rect x="77.4446%" y="741" width="0.0597%" height="15" fill="rgb(221,189,23)" fg:x="24639" fg:w="19"/><text x="77.6946%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;usize&gt;]&gt; (19 samples, 0.06%)</title><rect x="77.4446%" y="725" width="0.0597%" height="15" fill="rgb(210,33,7)" fg:x="24639" fg:w="19"/><text x="77.6946%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (19 samples, 0.06%)</title><rect x="77.4446%" y="709" width="0.0597%" height="15" fill="rgb(210,107,22)" fg:x="24639" fg:w="19"/><text x="77.6946%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (19 samples, 0.06%)</title><rect x="77.4446%" y="693" width="0.0597%" height="15" fill="rgb(222,116,37)" fg:x="24639" fg:w="19"/><text x="77.6946%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.06%)</title><rect x="77.4446%" y="677" width="0.0597%" height="15" fill="rgb(254,17,48)" fg:x="24639" fg:w="19"/><text x="77.6946%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (19 samples, 0.06%)</title><rect x="77.4446%" y="661" width="0.0597%" height="15" fill="rgb(224,36,32)" fg:x="24639" fg:w="19"/><text x="77.6946%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19 samples, 0.06%)</title><rect x="77.4446%" y="645" width="0.0597%" height="15" fill="rgb(232,90,46)" fg:x="24639" fg:w="19"/><text x="77.6946%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.06%)</title><rect x="77.4446%" y="629" width="0.0597%" height="15" fill="rgb(241,66,40)" fg:x="24639" fg:w="19"/><text x="77.6946%" y="639.50"></text></g><g><title>__rust_dealloc (19 samples, 0.06%)</title><rect x="77.4446%" y="613" width="0.0597%" height="15" fill="rgb(249,184,29)" fg:x="24639" fg:w="19"/><text x="77.6946%" y="623.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::dealloc (19 samples, 0.06%)</title><rect x="77.4446%" y="597" width="0.0597%" height="15" fill="rgb(231,181,1)" fg:x="24639" fg:w="19"/><text x="77.6946%" y="607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (19 samples, 0.06%)</title><rect x="77.4446%" y="581" width="0.0597%" height="15" fill="rgb(224,94,2)" fg:x="24639" fg:w="19"/><text x="77.6946%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (19 samples, 0.06%)</title><rect x="77.4446%" y="565" width="0.0597%" height="15" fill="rgb(229,170,15)" fg:x="24639" fg:w="19"/><text x="77.6946%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (19 samples, 0.06%)</title><rect x="77.4446%" y="549" width="0.0597%" height="15" fill="rgb(240,127,35)" fg:x="24639" fg:w="19"/><text x="77.6946%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (19 samples, 0.06%)</title><rect x="77.4446%" y="533" width="0.0597%" height="15" fill="rgb(248,196,34)" fg:x="24639" fg:w="19"/><text x="77.6946%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (19 samples, 0.06%)</title><rect x="77.4446%" y="517" width="0.0597%" height="15" fill="rgb(236,137,7)" fg:x="24639" fg:w="19"/><text x="77.6946%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (19 samples, 0.06%)</title><rect x="77.4446%" y="501" width="0.0597%" height="15" fill="rgb(235,127,16)" fg:x="24639" fg:w="19"/><text x="77.6946%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (19 samples, 0.06%)</title><rect x="77.4446%" y="485" width="0.0597%" height="15" fill="rgb(250,192,54)" fg:x="24639" fg:w="19"/><text x="77.6946%" y="495.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (19 samples, 0.06%)</title><rect x="77.4446%" y="469" width="0.0597%" height="15" fill="rgb(218,98,20)" fg:x="24639" fg:w="19"/><text x="77.6946%" y="479.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (19 samples, 0.06%)</title><rect x="77.4446%" y="453" width="0.0597%" height="15" fill="rgb(230,176,47)" fg:x="24639" fg:w="19"/><text x="77.6946%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (19 samples, 0.06%)</title><rect x="77.4446%" y="437" width="0.0597%" height="15" fill="rgb(244,2,33)" fg:x="24639" fg:w="19"/><text x="77.6946%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (19 samples, 0.06%)</title><rect x="77.4446%" y="421" width="0.0597%" height="15" fill="rgb(231,100,17)" fg:x="24639" fg:w="19"/><text x="77.6946%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.08%)</title><rect x="77.5043%" y="501" width="0.0754%" height="15" fill="rgb(245,23,12)" fg:x="24658" fg:w="24"/><text x="77.7543%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;dhat::Backtrace&gt; (58 samples, 0.18%)</title><rect x="77.5043%" y="549" width="0.1823%" height="15" fill="rgb(249,55,22)" fg:x="24658" fg:w="58"/><text x="77.7543%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;backtrace::capture::Backtrace&gt; (58 samples, 0.18%)</title><rect x="77.5043%" y="533" width="0.1823%" height="15" fill="rgb(207,134,9)" fg:x="24658" fg:w="58"/><text x="77.7543%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;backtrace::capture::BacktraceFrame&gt;&gt; (58 samples, 0.18%)</title><rect x="77.5043%" y="517" width="0.1823%" height="15" fill="rgb(218,134,0)" fg:x="24658" fg:w="58"/><text x="77.7543%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;backtrace::capture::BacktraceFrame&gt;&gt; (34 samples, 0.11%)</title><rect x="77.5798%" y="501" width="0.1069%" height="15" fill="rgb(213,212,33)" fg:x="24682" fg:w="34"/><text x="77.8298%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.11%)</title><rect x="77.5798%" y="485" width="0.1069%" height="15" fill="rgb(252,106,18)" fg:x="24682" fg:w="34"/><text x="77.8298%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (34 samples, 0.11%)</title><rect x="77.5798%" y="469" width="0.1069%" height="15" fill="rgb(208,126,42)" fg:x="24682" fg:w="34"/><text x="77.8298%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (34 samples, 0.11%)</title><rect x="77.5798%" y="453" width="0.1069%" height="15" fill="rgb(246,175,29)" fg:x="24682" fg:w="34"/><text x="77.8298%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (34 samples, 0.11%)</title><rect x="77.5798%" y="437" width="0.1069%" height="15" fill="rgb(215,13,50)" fg:x="24682" fg:w="34"/><text x="77.8298%" y="447.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::dealloc (34 samples, 0.11%)</title><rect x="77.5798%" y="421" width="0.1069%" height="15" fill="rgb(216,172,15)" fg:x="24682" fg:w="34"/><text x="77.8298%" y="431.50"></text></g><g><title>dhat::Globals::get_pp_info (91 samples, 0.29%)</title><rect x="77.5043%" y="597" width="0.2860%" height="15" fill="rgb(212,103,13)" fg:x="24658" fg:w="91"/><text x="77.7543%" y="607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (91 samples, 0.29%)</title><rect x="77.5043%" y="581" width="0.2860%" height="15" fill="rgb(231,171,36)" fg:x="24658" fg:w="91"/><text x="77.7543%" y="591.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (91 samples, 0.29%)</title><rect x="77.5043%" y="565" width="0.2860%" height="15" fill="rgb(250,123,20)" fg:x="24658" fg:w="91"/><text x="77.7543%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (33 samples, 0.10%)</title><rect x="77.6866%" y="549" width="0.1037%" height="15" fill="rgb(212,53,50)" fg:x="24716" fg:w="33"/><text x="77.9366%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (33 samples, 0.10%)</title><rect x="77.6866%" y="533" width="0.1037%" height="15" fill="rgb(243,54,12)" fg:x="24716" fg:w="33"/><text x="77.9366%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (33 samples, 0.10%)</title><rect x="77.6866%" y="517" width="0.1037%" height="15" fill="rgb(234,101,34)" fg:x="24716" fg:w="33"/><text x="77.9366%" y="527.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (33 samples, 0.10%)</title><rect x="77.6866%" y="501" width="0.1037%" height="15" fill="rgb(254,67,22)" fg:x="24716" fg:w="33"/><text x="77.9366%" y="511.50"></text></g><g><title>&lt;dhat::Backtrace as core::cmp::PartialEq&gt;::eq (33 samples, 0.10%)</title><rect x="77.6866%" y="485" width="0.1037%" height="15" fill="rgb(250,35,47)" fg:x="24716" fg:w="33"/><text x="77.9366%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (33 samples, 0.10%)</title><rect x="77.6866%" y="469" width="0.1037%" height="15" fill="rgb(226,126,38)" fg:x="24716" fg:w="33"/><text x="77.9366%" y="479.50"></text></g><g><title>&lt;dhat::Backtrace as core::cmp::PartialEq&gt;::eq::{{closure}} (33 samples, 0.10%)</title><rect x="77.6866%" y="453" width="0.1037%" height="15" fill="rgb(216,138,53)" fg:x="24716" fg:w="33"/><text x="77.9366%" y="463.50"></text></g><g><title>dhat::Globals::record_block (625 samples, 1.96%)</title><rect x="77.7904%" y="597" width="1.9645%" height="15" fill="rgb(246,199,43)" fg:x="24749" fg:w="625"/><text x="78.0404%" y="607.50">d..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (625 samples, 1.96%)</title><rect x="77.7904%" y="581" width="1.9645%" height="15" fill="rgb(232,125,11)" fg:x="24749" fg:w="625"/><text x="78.0404%" y="591.50">s..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (625 samples, 1.96%)</title><rect x="77.7904%" y="565" width="1.9645%" height="15" fill="rgb(218,219,45)" fg:x="24749" fg:w="625"/><text x="78.0404%" y="575.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (625 samples, 1.96%)</title><rect x="77.7904%" y="549" width="1.9645%" height="15" fill="rgb(216,102,54)" fg:x="24749" fg:w="625"/><text x="78.0404%" y="559.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (625 samples, 1.96%)</title><rect x="77.7904%" y="533" width="1.9645%" height="15" fill="rgb(250,228,7)" fg:x="24749" fg:w="625"/><text x="78.0404%" y="543.50">h..</text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (625 samples, 1.96%)</title><rect x="77.7904%" y="517" width="1.9645%" height="15" fill="rgb(226,125,25)" fg:x="24749" fg:w="625"/><text x="78.0404%" y="527.50">h..</text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (625 samples, 1.96%)</title><rect x="77.7904%" y="501" width="1.9645%" height="15" fill="rgb(224,165,27)" fg:x="24749" fg:w="625"/><text x="78.0404%" y="511.50">&lt;..</text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (625 samples, 1.96%)</title><rect x="77.7904%" y="485" width="1.9645%" height="15" fill="rgb(233,86,3)" fg:x="24749" fg:w="625"/><text x="78.0404%" y="495.50">h..</text></g><g><title>&lt;backtrace::lock::LockGuard as core::ops::drop::Drop&gt;::drop (8 samples, 0.03%)</title><rect x="79.9151%" y="565" width="0.0251%" height="15" fill="rgb(228,116,20)" fg:x="25425" fg:w="8"/><text x="80.1651%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (8 samples, 0.03%)</title><rect x="79.9151%" y="549" width="0.0251%" height="15" fill="rgb(209,192,17)" fg:x="25425" fg:w="8"/><text x="80.1651%" y="559.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8 samples, 0.03%)</title><rect x="79.9151%" y="533" width="0.0251%" height="15" fill="rgb(224,88,34)" fg:x="25425" fg:w="8"/><text x="80.1651%" y="543.50"></text></g><g><title>&lt;backtrace::lock::LockGuard as core::ops::drop::Drop&gt;::drop::{{closure}} (8 samples, 0.03%)</title><rect x="79.9151%" y="517" width="0.0251%" height="15" fill="rgb(233,38,6)" fg:x="25425" fg:w="8"/><text x="80.1651%" y="527.50"></text></g><g><title>_Unwind_Find_FDE (40 samples, 0.13%)</title><rect x="79.9529%" y="517" width="0.1257%" height="15" fill="rgb(212,59,30)" fg:x="25437" fg:w="40"/><text x="80.2029%" y="527.50"></text></g><g><title>__GI__dl_find_object (39 samples, 0.12%)</title><rect x="79.9560%" y="501" width="0.1226%" height="15" fill="rgb(213,80,3)" fg:x="25438" fg:w="39"/><text x="80.2060%" y="511.50"></text></g><g><title>&lt;backtrace::backtrace::Frame as core::clone::Clone&gt;::clone (95 samples, 0.30%)</title><rect x="80.2357%" y="469" width="0.2986%" height="15" fill="rgb(251,178,7)" fg:x="25527" fg:w="95"/><text x="80.4857%" y="479.50"></text></g><g><title>&lt;backtrace::backtrace::libunwind::Frame as core::clone::Clone&gt;::clone (95 samples, 0.30%)</title><rect x="80.2357%" y="453" width="0.2986%" height="15" fill="rgb(213,154,26)" fg:x="25527" fg:w="95"/><text x="80.4857%" y="463.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::symbol_address (95 samples, 0.30%)</title><rect x="80.2357%" y="437" width="0.2986%" height="15" fill="rgb(238,165,49)" fg:x="25527" fg:w="95"/><text x="80.4857%" y="447.50"></text></g><g><title>_Unwind_FindEnclosingFunction (95 samples, 0.30%)</title><rect x="80.2357%" y="421" width="0.2986%" height="15" fill="rgb(248,91,46)" fg:x="25527" fg:w="95"/><text x="80.4857%" y="431.50"></text></g><g><title>_Unwind_Find_FDE (95 samples, 0.30%)</title><rect x="80.2357%" y="405" width="0.2986%" height="15" fill="rgb(244,21,52)" fg:x="25527" fg:w="95"/><text x="80.4857%" y="415.50"></text></g><g><title>__GI__dl_find_object (95 samples, 0.30%)</title><rect x="80.2357%" y="389" width="0.2986%" height="15" fill="rgb(247,122,20)" fg:x="25527" fg:w="95"/><text x="80.4857%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (17 samples, 0.05%)</title><rect x="80.5343%" y="469" width="0.0534%" height="15" fill="rgb(218,27,9)" fg:x="25622" fg:w="17"/><text x="80.7843%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (17 samples, 0.05%)</title><rect x="80.5343%" y="453" width="0.0534%" height="15" fill="rgb(246,7,6)" fg:x="25622" fg:w="17"/><text x="80.7843%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (17 samples, 0.05%)</title><rect x="80.5343%" y="437" width="0.0534%" height="15" fill="rgb(227,135,54)" fg:x="25622" fg:w="17"/><text x="80.7843%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (17 samples, 0.05%)</title><rect x="80.5343%" y="421" width="0.0534%" height="15" fill="rgb(247,14,11)" fg:x="25622" fg:w="17"/><text x="80.7843%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (17 samples, 0.05%)</title><rect x="80.5343%" y="405" width="0.0534%" height="15" fill="rgb(206,149,34)" fg:x="25622" fg:w="17"/><text x="80.7843%" y="415.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (12 samples, 0.04%)</title><rect x="80.5501%" y="389" width="0.0377%" height="15" fill="rgb(227,228,4)" fg:x="25627" fg:w="12"/><text x="80.8001%" y="399.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (12 samples, 0.04%)</title><rect x="80.5501%" y="373" width="0.0377%" height="15" fill="rgb(238,218,28)" fg:x="25627" fg:w="12"/><text x="80.8001%" y="383.50"></text></g><g><title>backtrace::backtrace::Frame::ip (51 samples, 0.16%)</title><rect x="80.5878%" y="469" width="0.1603%" height="15" fill="rgb(252,86,40)" fg:x="25639" fg:w="51"/><text x="80.8378%" y="479.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::ip (51 samples, 0.16%)</title><rect x="80.5878%" y="453" width="0.1603%" height="15" fill="rgb(251,225,11)" fg:x="25639" fg:w="51"/><text x="80.8378%" y="463.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1,052 samples, 3.31%)</title><rect x="79.9403%" y="565" width="3.3066%" height="15" fill="rgb(206,46,49)" fg:x="25433" fg:w="1052"/><text x="80.1903%" y="575.50">bac..</text></g><g><title>backtrace::backtrace::libunwind::trace (1,052 samples, 3.31%)</title><rect x="79.9403%" y="549" width="3.3066%" height="15" fill="rgb(245,128,24)" fg:x="25433" fg:w="1052"/><text x="80.1903%" y="559.50">bac..</text></g><g><title>_Unwind_Backtrace (1,052 samples, 3.31%)</title><rect x="79.9403%" y="533" width="3.3066%" height="15" fill="rgb(219,177,34)" fg:x="25433" fg:w="1052"/><text x="80.1903%" y="543.50">_Un..</text></g><g><title>backtrace::backtrace::libunwind::trace::trace_fn (1,008 samples, 3.17%)</title><rect x="80.0786%" y="517" width="3.1683%" height="15" fill="rgb(218,60,48)" fg:x="25477" fg:w="1008"/><text x="80.3286%" y="527.50">bac..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,008 samples, 3.17%)</title><rect x="80.0786%" y="501" width="3.1683%" height="15" fill="rgb(221,11,5)" fg:x="25477" fg:w="1008"/><text x="80.3286%" y="511.50">cor..</text></g><g><title>dhat::new_backtrace_inner::{{closure}} (1,008 samples, 3.17%)</title><rect x="80.0786%" y="485" width="3.1683%" height="15" fill="rgb(220,148,13)" fg:x="25477" fg:w="1008"/><text x="80.3286%" y="495.50">dha..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (795 samples, 2.50%)</title><rect x="80.7481%" y="469" width="2.4988%" height="15" fill="rgb(210,16,3)" fg:x="25690" fg:w="795"/><text x="80.9981%" y="479.50">st..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (795 samples, 2.50%)</title><rect x="80.7481%" y="453" width="2.4988%" height="15" fill="rgb(236,80,2)" fg:x="25690" fg:w="795"/><text x="80.9981%" y="463.50">ha..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (795 samples, 2.50%)</title><rect x="80.7481%" y="437" width="2.4988%" height="15" fill="rgb(239,129,19)" fg:x="25690" fg:w="795"/><text x="80.9981%" y="447.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (795 samples, 2.50%)</title><rect x="80.7481%" y="421" width="2.4988%" height="15" fill="rgb(220,106,35)" fg:x="25690" fg:w="795"/><text x="80.9981%" y="431.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (795 samples, 2.50%)</title><rect x="80.7481%" y="405" width="2.4988%" height="15" fill="rgb(252,139,45)" fg:x="25690" fg:w="795"/><text x="80.9981%" y="415.50">ha..</text></g><g><title>hashbrown::raw::RawTableInner::find_inner (795 samples, 2.50%)</title><rect x="80.7481%" y="389" width="2.4988%" height="15" fill="rgb(229,8,36)" fg:x="25690" fg:w="795"/><text x="80.9981%" y="399.50">ha..</text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (795 samples, 2.50%)</title><rect x="80.7481%" y="373" width="2.4988%" height="15" fill="rgb(230,126,33)" fg:x="25690" fg:w="795"/><text x="80.9981%" y="383.50">&lt;h..</text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (795 samples, 2.50%)</title><rect x="80.7481%" y="357" width="2.4988%" height="15" fill="rgb(239,140,21)" fg:x="25690" fg:w="795"/><text x="80.9981%" y="367.50">ha..</text></g><g><title>backtrace::lock::lock (33 samples, 0.10%)</title><rect x="83.2469%" y="565" width="0.1037%" height="15" fill="rgb(254,104,9)" fg:x="26485" fg:w="33"/><text x="83.4969%" y="575.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (33 samples, 0.10%)</title><rect x="83.2469%" y="549" width="0.1037%" height="15" fill="rgb(239,52,14)" fg:x="26485" fg:w="33"/><text x="83.4969%" y="559.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (33 samples, 0.10%)</title><rect x="83.2469%" y="533" width="0.1037%" height="15" fill="rgb(208,227,44)" fg:x="26485" fg:w="33"/><text x="83.4969%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (33 samples, 0.10%)</title><rect x="83.2469%" y="517" width="0.1037%" height="15" fill="rgb(246,18,19)" fg:x="26485" fg:w="33"/><text x="83.4969%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (33 samples, 0.10%)</title><rect x="83.2469%" y="501" width="0.1037%" height="15" fill="rgb(235,228,25)" fg:x="26485" fg:w="33"/><text x="83.4969%" y="511.50"></text></g><g><title>&lt;briolette_sim::Coin as core::clone::Clone&gt;::clone (1,863 samples, 5.86%)</title><rect x="77.5043%" y="821" width="5.8557%" height="15" fill="rgb(240,156,20)" fg:x="24658" fg:w="1863"/><text x="77.7543%" y="831.50">&lt;briole..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,863 samples, 5.86%)</title><rect x="77.5043%" y="805" width="5.8557%" height="15" fill="rgb(224,8,20)" fg:x="24658" fg:w="1863"/><text x="77.7543%" y="815.50">&lt;alloc:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,863 samples, 5.86%)</title><rect x="77.5043%" y="789" width="5.8557%" height="15" fill="rgb(214,12,52)" fg:x="24658" fg:w="1863"/><text x="77.7543%" y="799.50">alloc::..</text></g><g><title>alloc::slice::hack::to_vec (1,863 samples, 5.86%)</title><rect x="77.5043%" y="773" width="5.8557%" height="15" fill="rgb(211,220,47)" fg:x="24658" fg:w="1863"/><text x="77.7543%" y="783.50">alloc::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,863 samples, 5.86%)</title><rect x="77.5043%" y="757" width="5.8557%" height="15" fill="rgb(250,173,5)" fg:x="24658" fg:w="1863"/><text x="77.7543%" y="767.50">&lt;T as a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,863 samples, 5.86%)</title><rect x="77.5043%" y="741" width="5.8557%" height="15" fill="rgb(250,125,52)" fg:x="24658" fg:w="1863"/><text x="77.7543%" y="751.50">alloc::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,863 samples, 5.86%)</title><rect x="77.5043%" y="725" width="5.8557%" height="15" fill="rgb(209,133,18)" fg:x="24658" fg:w="1863"/><text x="77.7543%" y="735.50">alloc::..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,863 samples, 5.86%)</title><rect x="77.5043%" y="709" width="5.8557%" height="15" fill="rgb(216,173,22)" fg:x="24658" fg:w="1863"/><text x="77.7543%" y="719.50">alloc::..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,863 samples, 5.86%)</title><rect x="77.5043%" y="693" width="5.8557%" height="15" fill="rgb(205,3,22)" fg:x="24658" fg:w="1863"/><text x="77.7543%" y="703.50">alloc::..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,863 samples, 5.86%)</title><rect x="77.5043%" y="677" width="5.8557%" height="15" fill="rgb(248,22,20)" fg:x="24658" fg:w="1863"/><text x="77.7543%" y="687.50">&lt;alloc:..</text></g><g><title>alloc::alloc::Global::alloc_impl (1,863 samples, 5.86%)</title><rect x="77.5043%" y="661" width="5.8557%" height="15" fill="rgb(233,6,29)" fg:x="24658" fg:w="1863"/><text x="77.7543%" y="671.50">alloc::..</text></g><g><title>alloc::alloc::alloc (1,863 samples, 5.86%)</title><rect x="77.5043%" y="645" width="5.8557%" height="15" fill="rgb(240,22,54)" fg:x="24658" fg:w="1863"/><text x="77.7543%" y="655.50">alloc::..</text></g><g><title>__rust_alloc (1,863 samples, 5.86%)</title><rect x="77.5043%" y="629" width="5.8557%" height="15" fill="rgb(231,133,32)" fg:x="24658" fg:w="1863"/><text x="77.7543%" y="639.50">__rust_..</text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (1,863 samples, 5.86%)</title><rect x="77.5043%" y="613" width="5.8557%" height="15" fill="rgb(248,193,4)" fg:x="24658" fg:w="1863"/><text x="77.7543%" y="623.50">&lt;dhat::..</text></g><g><title>dhat::new_backtrace_inner (1,147 samples, 3.61%)</title><rect x="79.7548%" y="597" width="3.6052%" height="15" fill="rgb(211,178,46)" fg:x="25374" fg:w="1147"/><text x="80.0048%" y="607.50">dhat..</text></g><g><title>backtrace::backtrace::trace (1,096 samples, 3.44%)</title><rect x="79.9151%" y="581" width="3.4449%" height="15" fill="rgb(224,5,42)" fg:x="25425" fg:w="1096"/><text x="80.1651%" y="591.50">bac..</text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert_with (12 samples, 0.04%)</title><rect x="83.6712%" y="709" width="0.0377%" height="15" fill="rgb(239,176,25)" fg:x="26620" fg:w="12"/><text x="83.9212%" y="719.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (12 samples, 0.04%)</title><rect x="83.6712%" y="693" width="0.0377%" height="15" fill="rgb(245,187,50)" fg:x="26620" fg:w="12"/><text x="83.9212%" y="703.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (12 samples, 0.04%)</title><rect x="83.6712%" y="677" width="0.0377%" height="15" fill="rgb(248,24,15)" fg:x="26620" fg:w="12"/><text x="83.9212%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (12 samples, 0.04%)</title><rect x="83.6712%" y="661" width="0.0377%" height="15" fill="rgb(205,166,13)" fg:x="26620" fg:w="12"/><text x="83.9212%" y="671.50"></text></g><g><title>__rust_alloc (7 samples, 0.02%)</title><rect x="83.7089%" y="549" width="0.0220%" height="15" fill="rgb(208,114,23)" fg:x="26632" fg:w="7"/><text x="83.9589%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;dhat::Backtrace&gt; (11 samples, 0.03%)</title><rect x="83.7089%" y="677" width="0.0346%" height="15" fill="rgb(239,127,18)" fg:x="26632" fg:w="11"/><text x="83.9589%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;backtrace::capture::Backtrace&gt; (11 samples, 0.03%)</title><rect x="83.7089%" y="661" width="0.0346%" height="15" fill="rgb(219,154,28)" fg:x="26632" fg:w="11"/><text x="83.9589%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;backtrace::capture::BacktraceFrame&gt;&gt; (11 samples, 0.03%)</title><rect x="83.7089%" y="645" width="0.0346%" height="15" fill="rgb(225,157,23)" fg:x="26632" fg:w="11"/><text x="83.9589%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;backtrace::capture::BacktraceFrame&gt;&gt; (11 samples, 0.03%)</title><rect x="83.7089%" y="629" width="0.0346%" height="15" fill="rgb(219,8,6)" fg:x="26632" fg:w="11"/><text x="83.9589%" y="639.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.03%)</title><rect x="83.7089%" y="613" width="0.0346%" height="15" fill="rgb(212,47,6)" fg:x="26632" fg:w="11"/><text x="83.9589%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (11 samples, 0.03%)</title><rect x="83.7089%" y="597" width="0.0346%" height="15" fill="rgb(224,190,4)" fg:x="26632" fg:w="11"/><text x="83.9589%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.03%)</title><rect x="83.7089%" y="581" width="0.0346%" height="15" fill="rgb(239,183,29)" fg:x="26632" fg:w="11"/><text x="83.9589%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.03%)</title><rect x="83.7089%" y="565" width="0.0346%" height="15" fill="rgb(213,57,7)" fg:x="26632" fg:w="11"/><text x="83.9589%" y="575.50"></text></g><g><title>__rust_dealloc (4 samples, 0.01%)</title><rect x="83.7309%" y="549" width="0.0126%" height="15" fill="rgb(216,148,1)" fg:x="26639" fg:w="4"/><text x="83.9809%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (231 samples, 0.73%)</title><rect x="83.7435%" y="645" width="0.7261%" height="15" fill="rgb(236,182,29)" fg:x="26643" fg:w="231"/><text x="83.9935%" y="655.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (231 samples, 0.73%)</title><rect x="83.7435%" y="629" width="0.7261%" height="15" fill="rgb(244,120,48)" fg:x="26643" fg:w="231"/><text x="83.9935%" y="639.50"></text></g><g><title>dhat::Globals::get_pp_info (298 samples, 0.94%)</title><rect x="83.6712%" y="725" width="0.9367%" height="15" fill="rgb(206,71,34)" fg:x="26620" fg:w="298"/><text x="83.9212%" y="735.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (286 samples, 0.90%)</title><rect x="83.7089%" y="709" width="0.8989%" height="15" fill="rgb(242,32,6)" fg:x="26632" fg:w="286"/><text x="83.9589%" y="719.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (286 samples, 0.90%)</title><rect x="83.7089%" y="693" width="0.8989%" height="15" fill="rgb(241,35,3)" fg:x="26632" fg:w="286"/><text x="83.9589%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (275 samples, 0.86%)</title><rect x="83.7435%" y="677" width="0.8644%" height="15" fill="rgb(222,62,19)" fg:x="26643" fg:w="275"/><text x="83.9935%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (275 samples, 0.86%)</title><rect x="83.7435%" y="661" width="0.8644%" height="15" fill="rgb(223,110,41)" fg:x="26643" fg:w="275"/><text x="83.9935%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (44 samples, 0.14%)</title><rect x="84.4696%" y="645" width="0.1383%" height="15" fill="rgb(208,224,4)" fg:x="26874" fg:w="44"/><text x="84.7196%" y="655.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (44 samples, 0.14%)</title><rect x="84.4696%" y="629" width="0.1383%" height="15" fill="rgb(241,137,19)" fg:x="26874" fg:w="44"/><text x="84.7196%" y="639.50"></text></g><g><title>&lt;dhat::Backtrace as core::cmp::PartialEq&gt;::eq (44 samples, 0.14%)</title><rect x="84.4696%" y="613" width="0.1383%" height="15" fill="rgb(244,24,17)" fg:x="26874" fg:w="44"/><text x="84.7196%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (44 samples, 0.14%)</title><rect x="84.4696%" y="597" width="0.1383%" height="15" fill="rgb(245,178,49)" fg:x="26874" fg:w="44"/><text x="84.7196%" y="607.50"></text></g><g><title>&lt;dhat::Backtrace as core::cmp::PartialEq&gt;::eq::{{closure}} (44 samples, 0.14%)</title><rect x="84.4696%" y="581" width="0.1383%" height="15" fill="rgb(219,160,38)" fg:x="26874" fg:w="44"/><text x="84.7196%" y="591.50"></text></g><g><title>backtrace::capture::BacktraceFrame::ip (44 samples, 0.14%)</title><rect x="84.4696%" y="565" width="0.1383%" height="15" fill="rgb(228,137,14)" fg:x="26874" fg:w="44"/><text x="84.7196%" y="575.50"></text></g><g><title>backtrace::capture::Frame::ip (44 samples, 0.14%)</title><rect x="84.4696%" y="549" width="0.1383%" height="15" fill="rgb(237,134,11)" fg:x="26874" fg:w="44"/><text x="84.7196%" y="559.50"></text></g><g><title>backtrace::backtrace::Frame::ip (44 samples, 0.14%)</title><rect x="84.4696%" y="533" width="0.1383%" height="15" fill="rgb(211,126,44)" fg:x="26874" fg:w="44"/><text x="84.7196%" y="543.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::ip (44 samples, 0.14%)</title><rect x="84.4696%" y="517" width="0.1383%" height="15" fill="rgb(226,171,33)" fg:x="26874" fg:w="44"/><text x="84.7196%" y="527.50"></text></g><g><title>dhat::Globals::record_block (940 samples, 2.95%)</title><rect x="84.6079%" y="725" width="2.9546%" height="15" fill="rgb(253,99,13)" fg:x="26918" fg:w="940"/><text x="84.8579%" y="735.50">dha..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (940 samples, 2.95%)</title><rect x="84.6079%" y="709" width="2.9546%" height="15" fill="rgb(244,48,7)" fg:x="26918" fg:w="940"/><text x="84.8579%" y="719.50">std..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (940 samples, 2.95%)</title><rect x="84.6079%" y="693" width="2.9546%" height="15" fill="rgb(244,217,54)" fg:x="26918" fg:w="940"/><text x="84.8579%" y="703.50">has..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (940 samples, 2.95%)</title><rect x="84.6079%" y="677" width="2.9546%" height="15" fill="rgb(224,15,18)" fg:x="26918" fg:w="940"/><text x="84.8579%" y="687.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (940 samples, 2.95%)</title><rect x="84.6079%" y="661" width="2.9546%" height="15" fill="rgb(244,99,12)" fg:x="26918" fg:w="940"/><text x="84.8579%" y="671.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (940 samples, 2.95%)</title><rect x="84.6079%" y="645" width="2.9546%" height="15" fill="rgb(233,226,8)" fg:x="26918" fg:w="940"/><text x="84.8579%" y="655.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (940 samples, 2.95%)</title><rect x="84.6079%" y="629" width="2.9546%" height="15" fill="rgb(229,211,3)" fg:x="26918" fg:w="940"/><text x="84.8579%" y="639.50">has..</text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (940 samples, 2.95%)</title><rect x="84.6079%" y="613" width="2.9546%" height="15" fill="rgb(216,140,21)" fg:x="26918" fg:w="940"/><text x="84.8579%" y="623.50">has..</text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (940 samples, 2.95%)</title><rect x="84.6079%" y="597" width="2.9546%" height="15" fill="rgb(234,122,30)" fg:x="26918" fg:w="940"/><text x="84.8579%" y="607.50">has..</text></g><g><title>core::intrinsics::copy_nonoverlapping (940 samples, 2.95%)</title><rect x="84.6079%" y="581" width="2.9546%" height="15" fill="rgb(236,25,46)" fg:x="26918" fg:w="940"/><text x="84.8579%" y="591.50">cor..</text></g><g><title>dhat::Globals::update_counts_for_alloc (34 samples, 0.11%)</title><rect x="87.5625%" y="725" width="0.1069%" height="15" fill="rgb(217,52,54)" fg:x="27858" fg:w="34"/><text x="87.8125%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (34 samples, 0.11%)</title><rect x="87.5625%" y="709" width="0.1069%" height="15" fill="rgb(222,29,26)" fg:x="27858" fg:w="34"/><text x="87.8125%" y="719.50"></text></g><g><title>Unknown (56 samples, 0.18%)</title><rect x="87.8862%" y="629" width="0.1760%" height="15" fill="rgb(216,177,29)" fg:x="27961" fg:w="56"/><text x="88.1362%" y="639.50"></text></g><g><title>_Unwind_Find_FDE (208 samples, 0.65%)</title><rect x="87.8862%" y="645" width="0.6538%" height="15" fill="rgb(247,136,51)" fg:x="27961" fg:w="208"/><text x="88.1362%" y="655.50"></text></g><g><title>__GI__dl_find_object (152 samples, 0.48%)</title><rect x="88.0622%" y="629" width="0.4778%" height="15" fill="rgb(231,47,47)" fg:x="28017" fg:w="152"/><text x="88.3122%" y="639.50"></text></g><g><title>&lt;backtrace::backtrace::Frame as core::clone::Clone&gt;::clone (92 samples, 0.29%)</title><rect x="88.9486%" y="597" width="0.2892%" height="15" fill="rgb(211,192,36)" fg:x="28299" fg:w="92"/><text x="89.1986%" y="607.50"></text></g><g><title>&lt;backtrace::backtrace::libunwind::Frame as core::clone::Clone&gt;::clone (92 samples, 0.29%)</title><rect x="88.9486%" y="581" width="0.2892%" height="15" fill="rgb(229,156,32)" fg:x="28299" fg:w="92"/><text x="89.1986%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (20 samples, 0.06%)</title><rect x="89.2535%" y="533" width="0.0629%" height="15" fill="rgb(248,213,20)" fg:x="28396" fg:w="20"/><text x="89.5035%" y="543.50"></text></g><g><title>dhat::new_backtrace_inner (562 samples, 1.77%)</title><rect x="87.6693%" y="725" width="1.7665%" height="15" fill="rgb(217,64,7)" fg:x="27892" fg:w="562"/><text x="87.9193%" y="735.50"></text></g><g><title>backtrace::backtrace::trace (562 samples, 1.77%)</title><rect x="87.6693%" y="709" width="1.7665%" height="15" fill="rgb(232,142,8)" fg:x="27892" fg:w="562"/><text x="87.9193%" y="719.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (493 samples, 1.55%)</title><rect x="87.8862%" y="693" width="1.5496%" height="15" fill="rgb(224,92,44)" fg:x="27961" fg:w="493"/><text x="88.1362%" y="703.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (493 samples, 1.55%)</title><rect x="87.8862%" y="677" width="1.5496%" height="15" fill="rgb(214,169,17)" fg:x="27961" fg:w="493"/><text x="88.1362%" y="687.50"></text></g><g><title>_Unwind_Backtrace (493 samples, 1.55%)</title><rect x="87.8862%" y="661" width="1.5496%" height="15" fill="rgb(210,59,37)" fg:x="27961" fg:w="493"/><text x="88.1362%" y="671.50"></text></g><g><title>backtrace::backtrace::libunwind::trace::trace_fn (285 samples, 0.90%)</title><rect x="88.5400%" y="645" width="0.8958%" height="15" fill="rgb(214,116,48)" fg:x="28169" fg:w="285"/><text x="88.7900%" y="655.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (209 samples, 0.66%)</title><rect x="88.7789%" y="629" width="0.6569%" height="15" fill="rgb(244,191,6)" fg:x="28245" fg:w="209"/><text x="89.0289%" y="639.50"></text></g><g><title>dhat::new_backtrace_inner::{{closure}} (155 samples, 0.49%)</title><rect x="88.9486%" y="613" width="0.4872%" height="15" fill="rgb(241,50,52)" fg:x="28299" fg:w="155"/><text x="89.1986%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (63 samples, 0.20%)</title><rect x="89.2378%" y="597" width="0.1980%" height="15" fill="rgb(236,75,39)" fg:x="28391" fg:w="63"/><text x="89.4878%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (63 samples, 0.20%)</title><rect x="89.2378%" y="581" width="0.1980%" height="15" fill="rgb(236,99,0)" fg:x="28391" fg:w="63"/><text x="89.4878%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (63 samples, 0.20%)</title><rect x="89.2378%" y="565" width="0.1980%" height="15" fill="rgb(207,202,15)" fg:x="28391" fg:w="63"/><text x="89.4878%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (63 samples, 0.20%)</title><rect x="89.2378%" y="549" width="0.1980%" height="15" fill="rgb(233,207,14)" fg:x="28391" fg:w="63"/><text x="89.4878%" y="559.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (38 samples, 0.12%)</title><rect x="89.3164%" y="533" width="0.1194%" height="15" fill="rgb(226,27,51)" fg:x="28416" fg:w="38"/><text x="89.5664%" y="543.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (15 samples, 0.05%)</title><rect x="89.4358%" y="725" width="0.0471%" height="15" fill="rgb(206,104,42)" fg:x="28454" fg:w="15"/><text x="89.6858%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (1,952 samples, 6.14%)</title><rect x="83.3601%" y="821" width="6.1355%" height="15" fill="rgb(212,225,4)" fg:x="26521" fg:w="1952"/><text x="83.6101%" y="831.50">alloc::a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,952 samples, 6.14%)</title><rect x="83.3601%" y="805" width="6.1355%" height="15" fill="rgb(233,96,42)" fg:x="26521" fg:w="1952"/><text x="83.6101%" y="815.50">&lt;alloc::..</text></g><g><title>alloc::alloc::Global::alloc_impl (1,952 samples, 6.14%)</title><rect x="83.3601%" y="789" width="6.1355%" height="15" fill="rgb(229,21,32)" fg:x="26521" fg:w="1952"/><text x="83.6101%" y="799.50">alloc::a..</text></g><g><title>alloc::alloc::alloc (1,952 samples, 6.14%)</title><rect x="83.3601%" y="773" width="6.1355%" height="15" fill="rgb(226,216,24)" fg:x="26521" fg:w="1952"/><text x="83.6101%" y="783.50">alloc::a..</text></g><g><title>__rust_alloc (1,952 samples, 6.14%)</title><rect x="83.3601%" y="757" width="6.1355%" height="15" fill="rgb(221,163,17)" fg:x="26521" fg:w="1952"/><text x="83.6101%" y="767.50">__rust_a..</text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::alloc (1,952 samples, 6.14%)</title><rect x="83.3601%" y="741" width="6.1355%" height="15" fill="rgb(216,216,42)" fg:x="26521" fg:w="1952"/><text x="83.6101%" y="751.50">&lt;dhat::A..</text></g><g><title>std::time::Instant::now (4 samples, 0.01%)</title><rect x="89.4829%" y="725" width="0.0126%" height="15" fill="rgb(240,118,7)" fg:x="28469" fg:w="4"/><text x="89.7329%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (431 samples, 1.35%)</title><rect x="89.4955%" y="821" width="1.3547%" height="15" fill="rgb(221,67,37)" fg:x="28473" fg:w="431"/><text x="89.7455%" y="831.50"></text></g><g><title>core::ptr::write (431 samples, 1.35%)</title><rect x="89.4955%" y="805" width="1.3547%" height="15" fill="rgb(241,32,44)" fg:x="28473" fg:w="431"/><text x="89.7455%" y="815.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (12 samples, 0.04%)</title><rect x="91.5889%" y="581" width="0.0377%" height="15" fill="rgb(235,204,43)" fg:x="29139" fg:w="12"/><text x="91.8389%" y="591.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (12 samples, 0.04%)</title><rect x="91.5889%" y="565" width="0.0377%" height="15" fill="rgb(213,116,10)" fg:x="29139" fg:w="12"/><text x="91.8389%" y="575.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (12 samples, 0.04%)</title><rect x="91.5889%" y="549" width="0.0377%" height="15" fill="rgb(239,15,48)" fg:x="29139" fg:w="12"/><text x="91.8389%" y="559.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (12 samples, 0.04%)</title><rect x="91.5889%" y="533" width="0.0377%" height="15" fill="rgb(207,123,36)" fg:x="29139" fg:w="12"/><text x="91.8389%" y="543.50"></text></g><g><title>hashbrown::map::make_hash (15 samples, 0.05%)</title><rect x="91.5889%" y="613" width="0.0471%" height="15" fill="rgb(209,103,30)" fg:x="29139" fg:w="15"/><text x="91.8389%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (15 samples, 0.05%)</title><rect x="91.5889%" y="597" width="0.0471%" height="15" fill="rgb(238,100,19)" fg:x="29139" fg:w="15"/><text x="91.8389%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (596 samples, 1.87%)</title><rect x="90.8502%" y="821" width="1.8733%" height="15" fill="rgb(244,30,14)" fg:x="28904" fg:w="596"/><text x="91.1002%" y="831.50">c..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (596 samples, 1.87%)</title><rect x="90.8502%" y="805" width="1.8733%" height="15" fill="rgb(249,174,6)" fg:x="28904" fg:w="596"/><text x="91.1002%" y="815.50">&lt;..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (596 samples, 1.87%)</title><rect x="90.8502%" y="789" width="1.8733%" height="15" fill="rgb(235,213,41)" fg:x="28904" fg:w="596"/><text x="91.1002%" y="799.50">&lt;..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (596 samples, 1.87%)</title><rect x="90.8502%" y="773" width="1.8733%" height="15" fill="rgb(213,118,6)" fg:x="28904" fg:w="596"/><text x="91.1002%" y="783.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (596 samples, 1.87%)</title><rect x="90.8502%" y="757" width="1.8733%" height="15" fill="rgb(235,44,51)" fg:x="28904" fg:w="596"/><text x="91.1002%" y="767.50">c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (596 samples, 1.87%)</title><rect x="90.8502%" y="741" width="1.8733%" height="15" fill="rgb(217,9,53)" fg:x="28904" fg:w="596"/><text x="91.1002%" y="751.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (596 samples, 1.87%)</title><rect x="90.8502%" y="725" width="1.8733%" height="15" fill="rgb(237,172,34)" fg:x="28904" fg:w="596"/><text x="91.1002%" y="735.50">&lt;..</text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (596 samples, 1.87%)</title><rect x="90.8502%" y="709" width="1.8733%" height="15" fill="rgb(206,206,11)" fg:x="28904" fg:w="596"/><text x="91.1002%" y="719.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (596 samples, 1.87%)</title><rect x="90.8502%" y="693" width="1.8733%" height="15" fill="rgb(214,149,29)" fg:x="28904" fg:w="596"/><text x="91.1002%" y="703.50">&lt;..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (596 samples, 1.87%)</title><rect x="90.8502%" y="677" width="1.8733%" height="15" fill="rgb(208,123,3)" fg:x="28904" fg:w="596"/><text x="91.1002%" y="687.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (596 samples, 1.87%)</title><rect x="90.8502%" y="661" width="1.8733%" height="15" fill="rgb(229,126,4)" fg:x="28904" fg:w="596"/><text x="91.1002%" y="671.50">c..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (361 samples, 1.13%)</title><rect x="91.5889%" y="645" width="1.1347%" height="15" fill="rgb(222,92,36)" fg:x="29139" fg:w="361"/><text x="91.8389%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (361 samples, 1.13%)</title><rect x="91.5889%" y="629" width="1.1347%" height="15" fill="rgb(216,39,41)" fg:x="29139" fg:w="361"/><text x="91.8389%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (346 samples, 1.09%)</title><rect x="91.6360%" y="613" width="1.0875%" height="15" fill="rgb(253,127,28)" fg:x="29154" fg:w="346"/><text x="91.8860%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (346 samples, 1.09%)</title><rect x="91.6360%" y="597" width="1.0875%" height="15" fill="rgb(249,152,51)" fg:x="29154" fg:w="346"/><text x="91.8860%" y="607.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (346 samples, 1.09%)</title><rect x="91.6360%" y="581" width="1.0875%" height="15" fill="rgb(209,123,42)" fg:x="29154" fg:w="346"/><text x="91.8860%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (346 samples, 1.09%)</title><rect x="91.6360%" y="565" width="1.0875%" height="15" fill="rgb(241,118,22)" fg:x="29154" fg:w="346"/><text x="91.8860%" y="575.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (7 samples, 0.02%)</title><rect x="92.7236%" y="325" width="0.0220%" height="15" fill="rgb(208,25,7)" fg:x="29500" fg:w="7"/><text x="92.9736%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (7 samples, 0.02%)</title><rect x="92.7236%" y="309" width="0.0220%" height="15" fill="rgb(243,144,39)" fg:x="29500" fg:w="7"/><text x="92.9736%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (7 samples, 0.02%)</title><rect x="92.7236%" y="293" width="0.0220%" height="15" fill="rgb(250,50,5)" fg:x="29500" fg:w="7"/><text x="92.9736%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (7 samples, 0.02%)</title><rect x="92.7236%" y="277" width="0.0220%" height="15" fill="rgb(207,67,11)" fg:x="29500" fg:w="7"/><text x="92.9736%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (7 samples, 0.02%)</title><rect x="92.7236%" y="261" width="0.0220%" height="15" fill="rgb(245,204,40)" fg:x="29500" fg:w="7"/><text x="92.9736%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (7 samples, 0.02%)</title><rect x="92.7236%" y="245" width="0.0220%" height="15" fill="rgb(238,228,24)" fg:x="29500" fg:w="7"/><text x="92.9736%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (7 samples, 0.02%)</title><rect x="92.7236%" y="229" width="0.0220%" height="15" fill="rgb(217,116,22)" fg:x="29500" fg:w="7"/><text x="92.9736%" y="239.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (7 samples, 0.02%)</title><rect x="92.7236%" y="213" width="0.0220%" height="15" fill="rgb(234,98,12)" fg:x="29500" fg:w="7"/><text x="92.9736%" y="223.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (7 samples, 0.02%)</title><rect x="92.7236%" y="197" width="0.0220%" height="15" fill="rgb(242,170,50)" fg:x="29500" fg:w="7"/><text x="92.9736%" y="207.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (7 samples, 0.02%)</title><rect x="92.7236%" y="181" width="0.0220%" height="15" fill="rgb(235,7,5)" fg:x="29500" fg:w="7"/><text x="92.9736%" y="191.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (7 samples, 0.02%)</title><rect x="92.7236%" y="165" width="0.0220%" height="15" fill="rgb(241,114,28)" fg:x="29500" fg:w="7"/><text x="92.9736%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;absim::Event&lt;briolette_sim::EventData&gt;&gt;&gt; (8 samples, 0.03%)</title><rect x="92.7236%" y="613" width="0.0251%" height="15" fill="rgb(246,112,42)" fg:x="29500" fg:w="8"/><text x="92.9736%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.03%)</title><rect x="92.7236%" y="597" width="0.0251%" height="15" fill="rgb(248,228,14)" fg:x="29500" fg:w="8"/><text x="92.9736%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[absim::Event&lt;briolette_sim::EventData&gt;]&gt; (8 samples, 0.03%)</title><rect x="92.7236%" y="581" width="0.0251%" height="15" fill="rgb(208,133,18)" fg:x="29500" fg:w="8"/><text x="92.9736%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;absim::Event&lt;briolette_sim::EventData&gt;&gt; (8 samples, 0.03%)</title><rect x="92.7236%" y="565" width="0.0251%" height="15" fill="rgb(207,35,49)" fg:x="29500" fg:w="8"/><text x="92.9736%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;briolette_sim::EventData&gt; (8 samples, 0.03%)</title><rect x="92.7236%" y="549" width="0.0251%" height="15" fill="rgb(205,68,36)" fg:x="29500" fg:w="8"/><text x="92.9736%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;briolette_sim::ValidateData&gt; (8 samples, 0.03%)</title><rect x="92.7236%" y="533" width="0.0251%" height="15" fill="rgb(245,62,40)" fg:x="29500" fg:w="8"/><text x="92.9736%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;briolette_sim::Coin&gt;&gt; (8 samples, 0.03%)</title><rect x="92.7236%" y="517" width="0.0251%" height="15" fill="rgb(228,27,24)" fg:x="29500" fg:w="8"/><text x="92.9736%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.03%)</title><rect x="92.7236%" y="501" width="0.0251%" height="15" fill="rgb(253,19,12)" fg:x="29500" fg:w="8"/><text x="92.9736%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[briolette_sim::Coin]&gt; (8 samples, 0.03%)</title><rect x="92.7236%" y="485" width="0.0251%" height="15" fill="rgb(232,28,20)" fg:x="29500" fg:w="8"/><text x="92.9736%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;briolette_sim::Coin&gt; (8 samples, 0.03%)</title><rect x="92.7236%" y="469" width="0.0251%" height="15" fill="rgb(218,35,51)" fg:x="29500" fg:w="8"/><text x="92.9736%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (8 samples, 0.03%)</title><rect x="92.7236%" y="453" width="0.0251%" height="15" fill="rgb(212,90,40)" fg:x="29500" fg:w="8"/><text x="92.9736%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (8 samples, 0.03%)</title><rect x="92.7236%" y="437" width="0.0251%" height="15" fill="rgb(220,172,12)" fg:x="29500" fg:w="8"/><text x="92.9736%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.03%)</title><rect x="92.7236%" y="421" width="0.0251%" height="15" fill="rgb(226,159,20)" fg:x="29500" fg:w="8"/><text x="92.9736%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (8 samples, 0.03%)</title><rect x="92.7236%" y="405" width="0.0251%" height="15" fill="rgb(234,205,16)" fg:x="29500" fg:w="8"/><text x="92.9736%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.03%)</title><rect x="92.7236%" y="389" width="0.0251%" height="15" fill="rgb(207,9,39)" fg:x="29500" fg:w="8"/><text x="92.9736%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.03%)</title><rect x="92.7236%" y="373" width="0.0251%" height="15" fill="rgb(249,143,15)" fg:x="29500" fg:w="8"/><text x="92.9736%" y="383.50"></text></g><g><title>__rust_dealloc (8 samples, 0.03%)</title><rect x="92.7236%" y="357" width="0.0251%" height="15" fill="rgb(253,133,29)" fg:x="29500" fg:w="8"/><text x="92.9736%" y="367.50"></text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::dealloc (8 samples, 0.03%)</title><rect x="92.7236%" y="341" width="0.0251%" height="15" fill="rgb(221,187,0)" fg:x="29500" fg:w="8"/><text x="92.9736%" y="351.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (938 samples, 2.95%)</title><rect x="92.8901%" y="421" width="2.9483%" height="15" fill="rgb(205,204,26)" fg:x="29553" fg:w="938"/><text x="93.1401%" y="431.50">st..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (938 samples, 2.95%)</title><rect x="92.8901%" y="405" width="2.9483%" height="15" fill="rgb(224,68,54)" fg:x="29553" fg:w="938"/><text x="93.1401%" y="415.50">ha..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (938 samples, 2.95%)</title><rect x="92.8901%" y="389" width="2.9483%" height="15" fill="rgb(209,67,4)" fg:x="29553" fg:w="938"/><text x="93.1401%" y="399.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (938 samples, 2.95%)</title><rect x="92.8901%" y="373" width="2.9483%" height="15" fill="rgb(228,229,18)" fg:x="29553" fg:w="938"/><text x="93.1401%" y="383.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (938 samples, 2.95%)</title><rect x="92.8901%" y="357" width="2.9483%" height="15" fill="rgb(231,89,13)" fg:x="29553" fg:w="938"/><text x="93.1401%" y="367.50">ha..</text></g><g><title>hashbrown::raw::RawTableInner::find_inner (938 samples, 2.95%)</title><rect x="92.8901%" y="341" width="2.9483%" height="15" fill="rgb(210,182,18)" fg:x="29553" fg:w="938"/><text x="93.1401%" y="351.50">ha..</text></g><g><title>hashbrown::raw::sse2::Group::load (938 samples, 2.95%)</title><rect x="92.8901%" y="325" width="2.9483%" height="15" fill="rgb(240,105,2)" fg:x="29553" fg:w="938"/><text x="93.1401%" y="335.50">ha..</text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (938 samples, 2.95%)</title><rect x="92.8901%" y="309" width="2.9483%" height="15" fill="rgb(207,170,50)" fg:x="29553" fg:w="938"/><text x="93.1401%" y="319.50">co..</text></g><g><title>core::intrinsics::copy_nonoverlapping (938 samples, 2.95%)</title><rect x="92.8901%" y="293" width="2.9483%" height="15" fill="rgb(232,133,24)" fg:x="29553" fg:w="938"/><text x="93.1401%" y="303.50">co..</text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (13 samples, 0.04%)</title><rect x="95.9013%" y="405" width="0.0409%" height="15" fill="rgb(235,166,27)" fg:x="30511" fg:w="13"/><text x="96.1513%" y="415.50"></text></g><g><title>std::time::Instant::duration_since (13 samples, 0.04%)</title><rect x="95.9013%" y="389" width="0.0409%" height="15" fill="rgb(209,19,13)" fg:x="30511" fg:w="13"/><text x="96.1513%" y="399.50"></text></g><g><title>std::time::Instant::checked_duration_since (13 samples, 0.04%)</title><rect x="95.9013%" y="373" width="0.0409%" height="15" fill="rgb(226,79,39)" fg:x="30511" fg:w="13"/><text x="96.1513%" y="383.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (13 samples, 0.04%)</title><rect x="95.9013%" y="357" width="0.0409%" height="15" fill="rgb(222,163,10)" fg:x="30511" fg:w="13"/><text x="96.1513%" y="367.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (13 samples, 0.04%)</title><rect x="95.9013%" y="341" width="0.0409%" height="15" fill="rgb(214,44,19)" fg:x="30511" fg:w="13"/><text x="96.1513%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;briolette_sim::Coin&gt;&gt; (1,023 samples, 3.22%)</title><rect x="92.7487%" y="613" width="3.2155%" height="15" fill="rgb(210,217,13)" fg:x="29508" fg:w="1023"/><text x="92.9987%" y="623.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,023 samples, 3.22%)</title><rect x="92.7487%" y="597" width="3.2155%" height="15" fill="rgb(237,61,54)" fg:x="29508" fg:w="1023"/><text x="92.9987%" y="607.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[briolette_sim::Coin]&gt; (1,023 samples, 3.22%)</title><rect x="92.7487%" y="581" width="3.2155%" height="15" fill="rgb(226,184,24)" fg:x="29508" fg:w="1023"/><text x="92.9987%" y="591.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;briolette_sim::Coin&gt; (1,023 samples, 3.22%)</title><rect x="92.7487%" y="565" width="3.2155%" height="15" fill="rgb(223,226,4)" fg:x="29508" fg:w="1023"/><text x="92.9987%" y="575.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (1,023 samples, 3.22%)</title><rect x="92.7487%" y="549" width="3.2155%" height="15" fill="rgb(210,26,41)" fg:x="29508" fg:w="1023"/><text x="92.9987%" y="559.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (1,023 samples, 3.22%)</title><rect x="92.7487%" y="533" width="3.2155%" height="15" fill="rgb(220,221,6)" fg:x="29508" fg:w="1023"/><text x="92.9987%" y="543.50">cor..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,023 samples, 3.22%)</title><rect x="92.7487%" y="517" width="3.2155%" height="15" fill="rgb(225,89,49)" fg:x="29508" fg:w="1023"/><text x="92.9987%" y="527.50">&lt;al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,023 samples, 3.22%)</title><rect x="92.7487%" y="501" width="3.2155%" height="15" fill="rgb(218,70,45)" fg:x="29508" fg:w="1023"/><text x="92.9987%" y="511.50">all..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,023 samples, 3.22%)</title><rect x="92.7487%" y="485" width="3.2155%" height="15" fill="rgb(238,166,21)" fg:x="29508" fg:w="1023"/><text x="92.9987%" y="495.50">&lt;al..</text></g><g><title>alloc::alloc::dealloc (1,023 samples, 3.22%)</title><rect x="92.7487%" y="469" width="3.2155%" height="15" fill="rgb(224,141,44)" fg:x="29508" fg:w="1023"/><text x="92.9987%" y="479.50">all..</text></g><g><title>__rust_dealloc (1,023 samples, 3.22%)</title><rect x="92.7487%" y="453" width="3.2155%" height="15" fill="rgb(230,12,49)" fg:x="29508" fg:w="1023"/><text x="92.9987%" y="463.50">__r..</text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1,023 samples, 3.22%)</title><rect x="92.7487%" y="437" width="3.2155%" height="15" fill="rgb(212,174,12)" fg:x="29508" fg:w="1023"/><text x="92.9987%" y="447.50">&lt;dh..</text></g><g><title>std::time::Instant::elapsed (40 samples, 0.13%)</title><rect x="95.8384%" y="421" width="0.1257%" height="15" fill="rgb(246,67,9)" fg:x="30491" fg:w="40"/><text x="96.0884%" y="431.50"></text></g><g><title>std::time::Instant::now (7 samples, 0.02%)</title><rect x="95.9422%" y="405" width="0.0220%" height="15" fill="rgb(239,35,23)" fg:x="30524" fg:w="7"/><text x="96.1922%" y="415.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (7 samples, 0.02%)</title><rect x="95.9422%" y="389" width="0.0220%" height="15" fill="rgb(211,167,0)" fg:x="30524" fg:w="7"/><text x="96.1922%" y="399.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (7 samples, 0.02%)</title><rect x="95.9422%" y="373" width="0.0220%" height="15" fill="rgb(225,119,45)" fg:x="30524" fg:w="7"/><text x="96.1922%" y="383.50"></text></g><g><title>std::sys::pal::unix::cvt (7 samples, 0.02%)</title><rect x="95.9422%" y="357" width="0.0220%" height="15" fill="rgb(210,162,6)" fg:x="30524" fg:w="7"/><text x="96.1922%" y="367.50"></text></g><g><title>&lt;i32 as std::sys::pal::unix::IsMinusOne&gt;::is_minus_one (7 samples, 0.02%)</title><rect x="95.9422%" y="341" width="0.0220%" height="15" fill="rgb(208,118,35)" fg:x="30524" fg:w="7"/><text x="96.1922%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;absim::extras::SimulationPopulation&lt;briolette_sim::simulator::Simulator&gt;&gt; (1,034 samples, 3.25%)</title><rect x="92.7236%" y="805" width="3.2500%" height="15" fill="rgb(239,4,53)" fg:x="29500" fg:w="1034"/><text x="92.9736%" y="815.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,absim::Agent&lt;briolette_sim::AgentData&gt;,core::hash::BuildHasherDefault&lt;fnv::FnvHasher&gt;&gt;&gt; (1,034 samples, 3.25%)</title><rect x="92.7236%" y="789" width="3.2500%" height="15" fill="rgb(213,130,21)" fg:x="29500" fg:w="1034"/><text x="92.9736%" y="799.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;usize,absim::Agent&lt;briolette_sim::AgentData&gt;,core::hash::BuildHasherDefault&lt;fnv::FnvHasher&gt;&gt;&gt; (1,034 samples, 3.25%)</title><rect x="92.7236%" y="773" width="3.2500%" height="15" fill="rgb(235,148,0)" fg:x="29500" fg:w="1034"/><text x="92.9736%" y="783.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(usize,absim::Agent&lt;briolette_sim::AgentData&gt;)&gt;&gt; (1,034 samples, 3.25%)</title><rect x="92.7236%" y="757" width="3.2500%" height="15" fill="rgb(244,224,18)" fg:x="29500" fg:w="1034"/><text x="92.9736%" y="767.50">cor..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,034 samples, 3.25%)</title><rect x="92.7236%" y="741" width="3.2500%" height="15" fill="rgb(211,214,4)" fg:x="29500" fg:w="1034"/><text x="92.9736%" y="751.50">&lt;ha..</text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,034 samples, 3.25%)</title><rect x="92.7236%" y="725" width="3.2500%" height="15" fill="rgb(206,119,25)" fg:x="29500" fg:w="1034"/><text x="92.9736%" y="735.50">has..</text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,034 samples, 3.25%)</title><rect x="92.7236%" y="709" width="3.2500%" height="15" fill="rgb(243,93,47)" fg:x="29500" fg:w="1034"/><text x="92.9736%" y="719.50">has..</text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1,034 samples, 3.25%)</title><rect x="92.7236%" y="693" width="3.2500%" height="15" fill="rgb(224,194,6)" fg:x="29500" fg:w="1034"/><text x="92.9736%" y="703.50">has..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1,034 samples, 3.25%)</title><rect x="92.7236%" y="677" width="3.2500%" height="15" fill="rgb(243,229,6)" fg:x="29500" fg:w="1034"/><text x="92.9736%" y="687.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;(usize,absim::Agent&lt;briolette_sim::AgentData&gt;)&gt; (1,034 samples, 3.25%)</title><rect x="92.7236%" y="661" width="3.2500%" height="15" fill="rgb(207,23,50)" fg:x="29500" fg:w="1034"/><text x="92.9736%" y="671.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;absim::Agent&lt;briolette_sim::AgentData&gt;&gt; (1,034 samples, 3.25%)</title><rect x="92.7236%" y="645" width="3.2500%" height="15" fill="rgb(253,192,32)" fg:x="29500" fg:w="1034"/><text x="92.9736%" y="655.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;briolette_sim::AgentData&gt; (1,034 samples, 3.25%)</title><rect x="92.7236%" y="629" width="3.2500%" height="15" fill="rgb(213,21,6)" fg:x="29500" fg:w="1034"/><text x="92.9736%" y="639.50">cor..</text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::dealloc (8 samples, 0.03%)</title><rect x="95.9799%" y="661" width="0.0251%" height="15" fill="rgb(243,151,13)" fg:x="30536" fg:w="8"/><text x="96.2299%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (8 samples, 0.03%)</title><rect x="95.9799%" y="645" width="0.0251%" height="15" fill="rgb(233,165,41)" fg:x="30536" fg:w="8"/><text x="96.2299%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (8 samples, 0.03%)</title><rect x="95.9799%" y="629" width="0.0251%" height="15" fill="rgb(246,176,45)" fg:x="30536" fg:w="8"/><text x="96.2299%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (8 samples, 0.03%)</title><rect x="95.9799%" y="613" width="0.0251%" height="15" fill="rgb(217,170,52)" fg:x="30536" fg:w="8"/><text x="96.2299%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (8 samples, 0.03%)</title><rect x="95.9799%" y="597" width="0.0251%" height="15" fill="rgb(214,203,54)" fg:x="30536" fg:w="8"/><text x="96.2299%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8 samples, 0.03%)</title><rect x="95.9799%" y="581" width="0.0251%" height="15" fill="rgb(248,215,49)" fg:x="30536" fg:w="8"/><text x="96.2299%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (8 samples, 0.03%)</title><rect x="95.9799%" y="565" width="0.0251%" height="15" fill="rgb(208,46,10)" fg:x="30536" fg:w="8"/><text x="96.2299%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (8 samples, 0.03%)</title><rect x="95.9799%" y="549" width="0.0251%" height="15" fill="rgb(254,5,31)" fg:x="30536" fg:w="8"/><text x="96.2299%" y="559.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (8 samples, 0.03%)</title><rect x="95.9799%" y="533" width="0.0251%" height="15" fill="rgb(222,104,33)" fg:x="30536" fg:w="8"/><text x="96.2299%" y="543.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (8 samples, 0.03%)</title><rect x="95.9799%" y="517" width="0.0251%" height="15" fill="rgb(248,49,16)" fg:x="30536" fg:w="8"/><text x="96.2299%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (8 samples, 0.03%)</title><rect x="95.9799%" y="501" width="0.0251%" height="15" fill="rgb(232,198,41)" fg:x="30536" fg:w="8"/><text x="96.2299%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (8 samples, 0.03%)</title><rect x="95.9799%" y="485" width="0.0251%" height="15" fill="rgb(214,125,3)" fg:x="30536" fg:w="8"/><text x="96.2299%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (1,126 samples, 3.54%)</title><rect x="96.3413%" y="485" width="3.5392%" height="15" fill="rgb(229,220,28)" fg:x="30651" fg:w="1126"/><text x="96.5913%" y="495.50">std..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (1,126 samples, 3.54%)</title><rect x="96.3413%" y="469" width="3.5392%" height="15" fill="rgb(222,64,37)" fg:x="30651" fg:w="1126"/><text x="96.5913%" y="479.50">has..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (1,126 samples, 3.54%)</title><rect x="96.3413%" y="453" width="3.5392%" height="15" fill="rgb(249,184,13)" fg:x="30651" fg:w="1126"/><text x="96.5913%" y="463.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1,126 samples, 3.54%)</title><rect x="96.3413%" y="437" width="3.5392%" height="15" fill="rgb(252,176,6)" fg:x="30651" fg:w="1126"/><text x="96.5913%" y="447.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,126 samples, 3.54%)</title><rect x="96.3413%" y="421" width="3.5392%" height="15" fill="rgb(228,153,7)" fg:x="30651" fg:w="1126"/><text x="96.5913%" y="431.50">has..</text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1,126 samples, 3.54%)</title><rect x="96.3413%" y="405" width="3.5392%" height="15" fill="rgb(242,193,5)" fg:x="30651" fg:w="1126"/><text x="96.5913%" y="415.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1,126 samples, 3.54%)</title><rect x="96.3413%" y="389" width="3.5392%" height="15" fill="rgb(232,140,9)" fg:x="30651" fg:w="1126"/><text x="96.5913%" y="399.50">has..</text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1,126 samples, 3.54%)</title><rect x="96.3413%" y="373" width="3.5392%" height="15" fill="rgb(213,222,16)" fg:x="30651" fg:w="1126"/><text x="96.5913%" y="383.50">has..</text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (1,126 samples, 3.54%)</title><rect x="96.3413%" y="357" width="3.5392%" height="15" fill="rgb(222,75,50)" fg:x="30651" fg:w="1126"/><text x="96.5913%" y="367.50">&lt;Q ..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,126 samples, 3.54%)</title><rect x="96.3413%" y="341" width="3.5392%" height="15" fill="rgb(205,180,2)" fg:x="30651" fg:w="1126"/><text x="96.5913%" y="351.50">cor..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (1,126 samples, 3.54%)</title><rect x="96.3413%" y="325" width="3.5392%" height="15" fill="rgb(216,34,7)" fg:x="30651" fg:w="1126"/><text x="96.5913%" y="335.50">cor..</text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_default (20 samples, 0.06%)</title><rect x="99.8806%" y="437" width="0.0629%" height="15" fill="rgb(253,16,32)" fg:x="31777" fg:w="20"/><text x="100.1306%" y="447.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (26 samples, 0.08%)</title><rect x="99.8806%" y="469" width="0.0817%" height="15" fill="rgb(208,97,28)" fg:x="31777" fg:w="26"/><text x="100.1306%" y="479.50"></text></g><g><title>std::time::Instant::duration_since (26 samples, 0.08%)</title><rect x="99.8806%" y="453" width="0.0817%" height="15" fill="rgb(225,92,11)" fg:x="31777" fg:w="26"/><text x="100.1306%" y="463.50"></text></g><g><title>std::time::Instant::checked_duration_since (6 samples, 0.02%)</title><rect x="99.9434%" y="437" width="0.0189%" height="15" fill="rgb(243,38,12)" fg:x="31797" fg:w="6"/><text x="100.1934%" y="447.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (6 samples, 0.02%)</title><rect x="99.9434%" y="421" width="0.0189%" height="15" fill="rgb(208,139,16)" fg:x="31797" fg:w="6"/><text x="100.1934%" y="431.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (6 samples, 0.02%)</title><rect x="99.9434%" y="405" width="0.0189%" height="15" fill="rgb(227,24,9)" fg:x="31797" fg:w="6"/><text x="100.1934%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;absim::Manager&lt;briolette_sim::simulator::Simulator&gt;&gt; (2,310 samples, 7.26%)</title><rect x="92.7236%" y="821" width="7.2607%" height="15" fill="rgb(206,62,11)" fg:x="29500" fg:w="2310"/><text x="92.9736%" y="831.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;briolette_sim::WorldData&gt; (1,276 samples, 4.01%)</title><rect x="95.9736%" y="805" width="4.0107%" height="15" fill="rgb(228,134,27)" fg:x="30534" fg:w="1276"/><text x="96.2236%" y="815.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,briolette_sim::CoinState&gt;&gt; (1,276 samples, 4.01%)</title><rect x="95.9736%" y="789" width="4.0107%" height="15" fill="rgb(205,55,33)" fg:x="30534" fg:w="1276"/><text x="96.2236%" y="799.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;usize,briolette_sim::CoinState,std::hash::random::RandomState&gt;&gt; (1,276 samples, 4.01%)</title><rect x="95.9736%" y="773" width="4.0107%" height="15" fill="rgb(243,75,43)" fg:x="30534" fg:w="1276"/><text x="96.2236%" y="783.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(usize,briolette_sim::CoinState)&gt;&gt; (1,276 samples, 4.01%)</title><rect x="95.9736%" y="757" width="4.0107%" height="15" fill="rgb(223,27,42)" fg:x="30534" fg:w="1276"/><text x="96.2236%" y="767.50">core..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,276 samples, 4.01%)</title><rect x="95.9736%" y="741" width="4.0107%" height="15" fill="rgb(232,189,33)" fg:x="30534" fg:w="1276"/><text x="96.2236%" y="751.50">&lt;has..</text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,276 samples, 4.01%)</title><rect x="95.9736%" y="725" width="4.0107%" height="15" fill="rgb(210,9,39)" fg:x="30534" fg:w="1276"/><text x="96.2236%" y="735.50">hash..</text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,276 samples, 4.01%)</title><rect x="95.9736%" y="709" width="4.0107%" height="15" fill="rgb(242,85,26)" fg:x="30534" fg:w="1276"/><text x="96.2236%" y="719.50">hash..</text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1,274 samples, 4.00%)</title><rect x="95.9799%" y="693" width="4.0044%" height="15" fill="rgb(248,44,4)" fg:x="30536" fg:w="1274"/><text x="96.2299%" y="703.50">hash..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1,274 samples, 4.00%)</title><rect x="95.9799%" y="677" width="4.0044%" height="15" fill="rgb(250,96,46)" fg:x="30536" fg:w="1274"/><text x="96.2299%" y="687.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;(usize,briolette_sim::CoinState)&gt; (1,266 samples, 3.98%)</title><rect x="96.0050%" y="661" width="3.9793%" height="15" fill="rgb(229,116,26)" fg:x="30544" fg:w="1266"/><text x="96.2550%" y="671.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;briolette_sim::CoinState&gt; (1,266 samples, 3.98%)</title><rect x="96.0050%" y="645" width="3.9793%" height="15" fill="rgb(246,94,34)" fg:x="30544" fg:w="1266"/><text x="96.2550%" y="655.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;briolette_sim::Coin&gt; (1,266 samples, 3.98%)</title><rect x="96.0050%" y="629" width="3.9793%" height="15" fill="rgb(251,73,21)" fg:x="30544" fg:w="1266"/><text x="96.2550%" y="639.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (1,266 samples, 3.98%)</title><rect x="96.0050%" y="613" width="3.9793%" height="15" fill="rgb(254,121,25)" fg:x="30544" fg:w="1266"/><text x="96.2550%" y="623.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (1,266 samples, 3.98%)</title><rect x="96.0050%" y="597" width="3.9793%" height="15" fill="rgb(215,161,49)" fg:x="30544" fg:w="1266"/><text x="96.2550%" y="607.50">core..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,266 samples, 3.98%)</title><rect x="96.0050%" y="581" width="3.9793%" height="15" fill="rgb(221,43,13)" fg:x="30544" fg:w="1266"/><text x="96.2550%" y="591.50">&lt;all..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,212 samples, 3.81%)</title><rect x="96.1748%" y="565" width="3.8095%" height="15" fill="rgb(249,5,37)" fg:x="30598" fg:w="1212"/><text x="96.4248%" y="575.50">allo..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,212 samples, 3.81%)</title><rect x="96.1748%" y="549" width="3.8095%" height="15" fill="rgb(226,25,44)" fg:x="30598" fg:w="1212"/><text x="96.4248%" y="559.50">&lt;all..</text></g><g><title>alloc::alloc::dealloc (1,212 samples, 3.81%)</title><rect x="96.1748%" y="533" width="3.8095%" height="15" fill="rgb(238,189,16)" fg:x="30598" fg:w="1212"/><text x="96.4248%" y="543.50">allo..</text></g><g><title>__rust_dealloc (1,212 samples, 3.81%)</title><rect x="96.1748%" y="517" width="3.8095%" height="15" fill="rgb(251,186,8)" fg:x="30598" fg:w="1212"/><text x="96.4248%" y="527.50">__ru..</text></g><g><title>&lt;dhat::Alloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1,210 samples, 3.80%)</title><rect x="96.1810%" y="501" width="3.8032%" height="15" fill="rgb(254,34,31)" fg:x="30600" fg:w="1210"/><text x="96.4310%" y="511.50">&lt;dha..</text></g><g><title>std::time::Instant::elapsed (33 samples, 0.10%)</title><rect x="99.8806%" y="485" width="0.1037%" height="15" fill="rgb(225,215,27)" fg:x="31777" fg:w="33"/><text x="100.1306%" y="495.50"></text></g><g><title>std::time::Instant::now (7 samples, 0.02%)</title><rect x="99.9623%" y="469" width="0.0220%" height="15" fill="rgb(221,192,48)" fg:x="31803" fg:w="7"/><text x="100.2123%" y="479.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (7 samples, 0.02%)</title><rect x="99.9623%" y="453" width="0.0220%" height="15" fill="rgb(219,137,20)" fg:x="31803" fg:w="7"/><text x="100.2123%" y="463.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (5 samples, 0.02%)</title><rect x="99.9686%" y="437" width="0.0157%" height="15" fill="rgb(219,84,11)" fg:x="31805" fg:w="5"/><text x="100.2186%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (5 samples, 0.02%)</title><rect x="99.9686%" y="421" width="0.0157%" height="15" fill="rgb(224,10,23)" fg:x="31805" fg:w="5"/><text x="100.2186%" y="431.50"></text></g><g><title>all (31,815 samples, 100%)</title><rect x="0.0000%" y="1141" width="100.0000%" height="15" fill="rgb(248,22,39)" fg:x="0" fg:w="31815"/><text x="0.2500%" y="1151.50"></text></g><g><title>briolette-sim (31,815 samples, 100.00%)</title><rect x="0.0000%" y="1125" width="100.0000%" height="15" fill="rgb(212,154,20)" fg:x="0" fg:w="31815"/><text x="0.2500%" y="1135.50">briolette-sim</text></g><g><title>_start (31,815 samples, 100.00%)</title><rect x="0.0000%" y="1109" width="100.0000%" height="15" fill="rgb(236,199,50)" fg:x="0" fg:w="31815"/><text x="0.2500%" y="1119.50">_start</text></g><g><title>__libc_start_main_impl (31,815 samples, 100.00%)</title><rect x="0.0000%" y="1093" width="100.0000%" height="15" fill="rgb(211,9,17)" fg:x="0" fg:w="31815"/><text x="0.2500%" y="1103.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (31,815 samples, 100.00%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(243,216,36)" fg:x="0" fg:w="31815"/><text x="0.2500%" y="1087.50">__libc_start_call_main</text></g><g><title>main (31,815 samples, 100.00%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(250,2,10)" fg:x="0" fg:w="31815"/><text x="0.2500%" y="1071.50">main</text></g><g><title>std::rt::lang_start_internal (31,815 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(226,50,48)" fg:x="0" fg:w="31815"/><text x="0.2500%" y="1055.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (31,815 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(243,81,16)" fg:x="0" fg:w="31815"/><text x="0.2500%" y="1039.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (31,815 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(250,14,2)" fg:x="0" fg:w="31815"/><text x="0.2500%" y="1023.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (31,815 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(233,135,29)" fg:x="0" fg:w="31815"/><text x="0.2500%" y="1007.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (31,815 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(224,64,43)" fg:x="0" fg:w="31815"/><text x="0.2500%" y="991.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (31,815 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(238,84,13)" fg:x="0" fg:w="31815"/><text x="0.2500%" y="975.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (31,815 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(253,48,26)" fg:x="0" fg:w="31815"/><text x="0.2500%" y="959.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (31,815 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(205,223,31)" fg:x="0" fg:w="31815"/><text x="0.2500%" y="943.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (31,815 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(221,41,32)" fg:x="0" fg:w="31815"/><text x="0.2500%" y="927.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (31,815 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(213,158,31)" fg:x="0" fg:w="31815"/><text x="0.2500%" y="911.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (31,815 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(245,126,43)" fg:x="0" fg:w="31815"/><text x="0.2500%" y="895.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (31,815 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(227,7,22)" fg:x="0" fg:w="31815"/><text x="0.2500%" y="879.50">core::ops::function::FnOnce::call_once</text></g><g><title>briolette_sim::main (31,815 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(252,90,44)" fg:x="0" fg:w="31815"/><text x="0.2500%" y="863.50">briolette_sim::main</text></g><g><title>briolette_sim::run_experiments (31,815 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(253,91,0)" fg:x="0" fg:w="31815"/><text x="0.2500%" y="847.50">briolette_sim::run_experiments</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (5 samples, 0.02%)</title><rect x="99.9843%" y="821" width="0.0157%" height="15" fill="rgb(252,175,49)" fg:x="31810" fg:w="5"/><text x="100.2343%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (5 samples, 0.02%)</title><rect x="99.9843%" y="805" width="0.0157%" height="15" fill="rgb(246,150,1)" fg:x="31810" fg:w="5"/><text x="100.2343%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (5 samples, 0.02%)</title><rect x="99.9843%" y="789" width="0.0157%" height="15" fill="rgb(241,192,25)" fg:x="31810" fg:w="5"/><text x="100.2343%" y="799.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.02%)</title><rect x="99.9843%" y="773" width="0.0157%" height="15" fill="rgb(239,187,11)" fg:x="31810" fg:w="5"/><text x="100.2343%" y="783.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.02%)</title><rect x="99.9843%" y="757" width="0.0157%" height="15" fill="rgb(218,202,51)" fg:x="31810" fg:w="5"/><text x="100.2343%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (5 samples, 0.02%)</title><rect x="99.9843%" y="741" width="0.0157%" height="15" fill="rgb(225,176,8)" fg:x="31810" fg:w="5"/><text x="100.2343%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (5 samples, 0.02%)</title><rect x="99.9843%" y="725" width="0.0157%" height="15" fill="rgb(219,122,41)" fg:x="31810" fg:w="5"/><text x="100.2343%" y="735.50"></text></g><g><title>core::hash::Hasher::write_usize (5 samples, 0.02%)</title><rect x="99.9843%" y="709" width="0.0157%" height="15" fill="rgb(248,140,20)" fg:x="31810" fg:w="5"/><text x="100.2343%" y="719.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.02%)</title><rect x="99.9843%" y="693" width="0.0157%" height="15" fill="rgb(245,41,37)" fg:x="31810" fg:w="5"/><text x="100.2343%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (5 samples, 0.02%)</title><rect x="99.9843%" y="677" width="0.0157%" height="15" fill="rgb(235,82,39)" fg:x="31810" fg:w="5"/><text x="100.2343%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.01%)</title><rect x="99.9874%" y="661" width="0.0126%" height="15" fill="rgb(230,108,42)" fg:x="31811" fg:w="4"/><text x="100.2374%" y="671.50"></text></g></svg></svg>